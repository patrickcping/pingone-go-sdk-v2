/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskEvaluationEventBrowser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskEvaluationEventBrowser{}

// RiskEvaluationEventBrowser An object that specifies the browser fingerprint attributes. Browser data can be retrieved using browser fingerprint JS. For more information, see Overview of the PingOne Risk Integration Kit.
type RiskEvaluationEventBrowser struct {
	UserAgent                 *string                  `json:"userAgent,omitempty"`
	Cookie                    *string                  `json:"cookie,omitempty"`
	Language                  *string                  `json:"language,omitempty"`
	ColorDepth                *float32                 `json:"colorDepth,omitempty"`
	DeviceMemory              *float32                 `json:"deviceMemory,omitempty"`
	HardwareConcurrency       *float32                 `json:"hardwareConcurrency,omitempty"`
	ScreenResolution          []float32                `json:"screenResolution,omitempty"`
	AvailableScreenResolution []float32                `json:"availableScreenResolution,omitempty"`
	TimezoneOffset            *float32                 `json:"timezoneOffset,omitempty"`
	Timezone                  *string                  `json:"timezone,omitempty"`
	SessionStorage            *bool                    `json:"sessionStorage,omitempty"`
	LocalStorage              *bool                    `json:"localStorage,omitempty"`
	IndexedDb                 *bool                    `json:"indexedDb,omitempty"`
	AddBehaviour              map[string]interface{}   `json:"addBehaviour,omitempty"`
	OpenDatabase              *bool                    `json:"openDatabase,omitempty"`
	CpuClass                  *string                  `json:"cpuClass,omitempty"`
	Platform                  *string                  `json:"platform,omitempty"`
	Plugins                   []map[string]interface{} `json:"plugins,omitempty"`
	WebglVendorAndRenderer    *string                  `json:"webglVendorAndRenderer,omitempty"`
	Webgl                     []string                 `json:"webgl,omitempty"`
	AdBlock                   *bool                    `json:"adBlock,omitempty"`
	HasLiedLanguages          *bool                    `json:"hasLiedLanguages,omitempty"`
	HasLiedResolution         *bool                    `json:"hasLiedResolution,omitempty"`
	HasLiedOs                 *bool                    `json:"hasLiedOs,omitempty"`
	HasLiedBrowser            *bool                    `json:"hasLiedBrowser,omitempty"`
	TouchSupport              []string                 `json:"touchSupport,omitempty"`
	Fonts                     []string                 `json:"fonts,omitempty"`
	Audio                     *string                  `json:"audio,omitempty"`
}

// NewRiskEvaluationEventBrowser instantiates a new RiskEvaluationEventBrowser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskEvaluationEventBrowser() *RiskEvaluationEventBrowser {
	this := RiskEvaluationEventBrowser{}
	return &this
}

// NewRiskEvaluationEventBrowserWithDefaults instantiates a new RiskEvaluationEventBrowser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskEvaluationEventBrowserWithDefaults() *RiskEvaluationEventBrowser {
	this := RiskEvaluationEventBrowser{}
	return &this
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *RiskEvaluationEventBrowser) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetCookie returns the Cookie field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetCookie() string {
	if o == nil || IsNil(o.Cookie) {
		var ret string
		return ret
	}
	return *o.Cookie
}

// GetCookieOk returns a tuple with the Cookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetCookieOk() (*string, bool) {
	if o == nil || IsNil(o.Cookie) {
		return nil, false
	}
	return o.Cookie, true
}

// HasCookie returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasCookie() bool {
	if o != nil && !IsNil(o.Cookie) {
		return true
	}

	return false
}

// SetCookie gets a reference to the given string and assigns it to the Cookie field.
func (o *RiskEvaluationEventBrowser) SetCookie(v string) {
	o.Cookie = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *RiskEvaluationEventBrowser) SetLanguage(v string) {
	o.Language = &v
}

// GetColorDepth returns the ColorDepth field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetColorDepth() float32 {
	if o == nil || IsNil(o.ColorDepth) {
		var ret float32
		return ret
	}
	return *o.ColorDepth
}

// GetColorDepthOk returns a tuple with the ColorDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetColorDepthOk() (*float32, bool) {
	if o == nil || IsNil(o.ColorDepth) {
		return nil, false
	}
	return o.ColorDepth, true
}

// HasColorDepth returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasColorDepth() bool {
	if o != nil && !IsNil(o.ColorDepth) {
		return true
	}

	return false
}

// SetColorDepth gets a reference to the given float32 and assigns it to the ColorDepth field.
func (o *RiskEvaluationEventBrowser) SetColorDepth(v float32) {
	o.ColorDepth = &v
}

// GetDeviceMemory returns the DeviceMemory field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetDeviceMemory() float32 {
	if o == nil || IsNil(o.DeviceMemory) {
		var ret float32
		return ret
	}
	return *o.DeviceMemory
}

// GetDeviceMemoryOk returns a tuple with the DeviceMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetDeviceMemoryOk() (*float32, bool) {
	if o == nil || IsNil(o.DeviceMemory) {
		return nil, false
	}
	return o.DeviceMemory, true
}

// HasDeviceMemory returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasDeviceMemory() bool {
	if o != nil && !IsNil(o.DeviceMemory) {
		return true
	}

	return false
}

// SetDeviceMemory gets a reference to the given float32 and assigns it to the DeviceMemory field.
func (o *RiskEvaluationEventBrowser) SetDeviceMemory(v float32) {
	o.DeviceMemory = &v
}

// GetHardwareConcurrency returns the HardwareConcurrency field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetHardwareConcurrency() float32 {
	if o == nil || IsNil(o.HardwareConcurrency) {
		var ret float32
		return ret
	}
	return *o.HardwareConcurrency
}

// GetHardwareConcurrencyOk returns a tuple with the HardwareConcurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetHardwareConcurrencyOk() (*float32, bool) {
	if o == nil || IsNil(o.HardwareConcurrency) {
		return nil, false
	}
	return o.HardwareConcurrency, true
}

// HasHardwareConcurrency returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasHardwareConcurrency() bool {
	if o != nil && !IsNil(o.HardwareConcurrency) {
		return true
	}

	return false
}

// SetHardwareConcurrency gets a reference to the given float32 and assigns it to the HardwareConcurrency field.
func (o *RiskEvaluationEventBrowser) SetHardwareConcurrency(v float32) {
	o.HardwareConcurrency = &v
}

// GetScreenResolution returns the ScreenResolution field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetScreenResolution() []float32 {
	if o == nil || IsNil(o.ScreenResolution) {
		var ret []float32
		return ret
	}
	return o.ScreenResolution
}

// GetScreenResolutionOk returns a tuple with the ScreenResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetScreenResolutionOk() ([]float32, bool) {
	if o == nil || IsNil(o.ScreenResolution) {
		return nil, false
	}
	return o.ScreenResolution, true
}

// HasScreenResolution returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasScreenResolution() bool {
	if o != nil && !IsNil(o.ScreenResolution) {
		return true
	}

	return false
}

// SetScreenResolution gets a reference to the given []float32 and assigns it to the ScreenResolution field.
func (o *RiskEvaluationEventBrowser) SetScreenResolution(v []float32) {
	o.ScreenResolution = v
}

// GetAvailableScreenResolution returns the AvailableScreenResolution field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetAvailableScreenResolution() []float32 {
	if o == nil || IsNil(o.AvailableScreenResolution) {
		var ret []float32
		return ret
	}
	return o.AvailableScreenResolution
}

// GetAvailableScreenResolutionOk returns a tuple with the AvailableScreenResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetAvailableScreenResolutionOk() ([]float32, bool) {
	if o == nil || IsNil(o.AvailableScreenResolution) {
		return nil, false
	}
	return o.AvailableScreenResolution, true
}

// HasAvailableScreenResolution returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasAvailableScreenResolution() bool {
	if o != nil && !IsNil(o.AvailableScreenResolution) {
		return true
	}

	return false
}

// SetAvailableScreenResolution gets a reference to the given []float32 and assigns it to the AvailableScreenResolution field.
func (o *RiskEvaluationEventBrowser) SetAvailableScreenResolution(v []float32) {
	o.AvailableScreenResolution = v
}

// GetTimezoneOffset returns the TimezoneOffset field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetTimezoneOffset() float32 {
	if o == nil || IsNil(o.TimezoneOffset) {
		var ret float32
		return ret
	}
	return *o.TimezoneOffset
}

// GetTimezoneOffsetOk returns a tuple with the TimezoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetTimezoneOffsetOk() (*float32, bool) {
	if o == nil || IsNil(o.TimezoneOffset) {
		return nil, false
	}
	return o.TimezoneOffset, true
}

// HasTimezoneOffset returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasTimezoneOffset() bool {
	if o != nil && !IsNil(o.TimezoneOffset) {
		return true
	}

	return false
}

// SetTimezoneOffset gets a reference to the given float32 and assigns it to the TimezoneOffset field.
func (o *RiskEvaluationEventBrowser) SetTimezoneOffset(v float32) {
	o.TimezoneOffset = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *RiskEvaluationEventBrowser) SetTimezone(v string) {
	o.Timezone = &v
}

// GetSessionStorage returns the SessionStorage field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetSessionStorage() bool {
	if o == nil || IsNil(o.SessionStorage) {
		var ret bool
		return ret
	}
	return *o.SessionStorage
}

// GetSessionStorageOk returns a tuple with the SessionStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetSessionStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionStorage) {
		return nil, false
	}
	return o.SessionStorage, true
}

// HasSessionStorage returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasSessionStorage() bool {
	if o != nil && !IsNil(o.SessionStorage) {
		return true
	}

	return false
}

// SetSessionStorage gets a reference to the given bool and assigns it to the SessionStorage field.
func (o *RiskEvaluationEventBrowser) SetSessionStorage(v bool) {
	o.SessionStorage = &v
}

// GetLocalStorage returns the LocalStorage field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetLocalStorage() bool {
	if o == nil || IsNil(o.LocalStorage) {
		var ret bool
		return ret
	}
	return *o.LocalStorage
}

// GetLocalStorageOk returns a tuple with the LocalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetLocalStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalStorage) {
		return nil, false
	}
	return o.LocalStorage, true
}

// HasLocalStorage returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasLocalStorage() bool {
	if o != nil && !IsNil(o.LocalStorage) {
		return true
	}

	return false
}

// SetLocalStorage gets a reference to the given bool and assigns it to the LocalStorage field.
func (o *RiskEvaluationEventBrowser) SetLocalStorage(v bool) {
	o.LocalStorage = &v
}

// GetIndexedDb returns the IndexedDb field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetIndexedDb() bool {
	if o == nil || IsNil(o.IndexedDb) {
		var ret bool
		return ret
	}
	return *o.IndexedDb
}

// GetIndexedDbOk returns a tuple with the IndexedDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetIndexedDbOk() (*bool, bool) {
	if o == nil || IsNil(o.IndexedDb) {
		return nil, false
	}
	return o.IndexedDb, true
}

// HasIndexedDb returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasIndexedDb() bool {
	if o != nil && !IsNil(o.IndexedDb) {
		return true
	}

	return false
}

// SetIndexedDb gets a reference to the given bool and assigns it to the IndexedDb field.
func (o *RiskEvaluationEventBrowser) SetIndexedDb(v bool) {
	o.IndexedDb = &v
}

// GetAddBehaviour returns the AddBehaviour field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetAddBehaviour() map[string]interface{} {
	if o == nil || IsNil(o.AddBehaviour) {
		var ret map[string]interface{}
		return ret
	}
	return o.AddBehaviour
}

// GetAddBehaviourOk returns a tuple with the AddBehaviour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetAddBehaviourOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AddBehaviour) {
		return map[string]interface{}{}, false
	}
	return o.AddBehaviour, true
}

// HasAddBehaviour returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasAddBehaviour() bool {
	if o != nil && !IsNil(o.AddBehaviour) {
		return true
	}

	return false
}

// SetAddBehaviour gets a reference to the given map[string]interface{} and assigns it to the AddBehaviour field.
func (o *RiskEvaluationEventBrowser) SetAddBehaviour(v map[string]interface{}) {
	o.AddBehaviour = v
}

// GetOpenDatabase returns the OpenDatabase field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetOpenDatabase() bool {
	if o == nil || IsNil(o.OpenDatabase) {
		var ret bool
		return ret
	}
	return *o.OpenDatabase
}

// GetOpenDatabaseOk returns a tuple with the OpenDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetOpenDatabaseOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenDatabase) {
		return nil, false
	}
	return o.OpenDatabase, true
}

// HasOpenDatabase returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasOpenDatabase() bool {
	if o != nil && !IsNil(o.OpenDatabase) {
		return true
	}

	return false
}

// SetOpenDatabase gets a reference to the given bool and assigns it to the OpenDatabase field.
func (o *RiskEvaluationEventBrowser) SetOpenDatabase(v bool) {
	o.OpenDatabase = &v
}

// GetCpuClass returns the CpuClass field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetCpuClass() string {
	if o == nil || IsNil(o.CpuClass) {
		var ret string
		return ret
	}
	return *o.CpuClass
}

// GetCpuClassOk returns a tuple with the CpuClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetCpuClassOk() (*string, bool) {
	if o == nil || IsNil(o.CpuClass) {
		return nil, false
	}
	return o.CpuClass, true
}

// HasCpuClass returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasCpuClass() bool {
	if o != nil && !IsNil(o.CpuClass) {
		return true
	}

	return false
}

// SetCpuClass gets a reference to the given string and assigns it to the CpuClass field.
func (o *RiskEvaluationEventBrowser) SetCpuClass(v string) {
	o.CpuClass = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *RiskEvaluationEventBrowser) SetPlatform(v string) {
	o.Platform = &v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetPlugins() []map[string]interface{} {
	if o == nil || IsNil(o.Plugins) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetPluginsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []map[string]interface{} and assigns it to the Plugins field.
func (o *RiskEvaluationEventBrowser) SetPlugins(v []map[string]interface{}) {
	o.Plugins = v
}

// GetWebglVendorAndRenderer returns the WebglVendorAndRenderer field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetWebglVendorAndRenderer() string {
	if o == nil || IsNil(o.WebglVendorAndRenderer) {
		var ret string
		return ret
	}
	return *o.WebglVendorAndRenderer
}

// GetWebglVendorAndRendererOk returns a tuple with the WebglVendorAndRenderer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetWebglVendorAndRendererOk() (*string, bool) {
	if o == nil || IsNil(o.WebglVendorAndRenderer) {
		return nil, false
	}
	return o.WebglVendorAndRenderer, true
}

// HasWebglVendorAndRenderer returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasWebglVendorAndRenderer() bool {
	if o != nil && !IsNil(o.WebglVendorAndRenderer) {
		return true
	}

	return false
}

// SetWebglVendorAndRenderer gets a reference to the given string and assigns it to the WebglVendorAndRenderer field.
func (o *RiskEvaluationEventBrowser) SetWebglVendorAndRenderer(v string) {
	o.WebglVendorAndRenderer = &v
}

// GetWebgl returns the Webgl field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetWebgl() []string {
	if o == nil || IsNil(o.Webgl) {
		var ret []string
		return ret
	}
	return o.Webgl
}

// GetWebglOk returns a tuple with the Webgl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetWebglOk() ([]string, bool) {
	if o == nil || IsNil(o.Webgl) {
		return nil, false
	}
	return o.Webgl, true
}

// HasWebgl returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasWebgl() bool {
	if o != nil && !IsNil(o.Webgl) {
		return true
	}

	return false
}

// SetWebgl gets a reference to the given []string and assigns it to the Webgl field.
func (o *RiskEvaluationEventBrowser) SetWebgl(v []string) {
	o.Webgl = v
}

// GetAdBlock returns the AdBlock field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetAdBlock() bool {
	if o == nil || IsNil(o.AdBlock) {
		var ret bool
		return ret
	}
	return *o.AdBlock
}

// GetAdBlockOk returns a tuple with the AdBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetAdBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.AdBlock) {
		return nil, false
	}
	return o.AdBlock, true
}

// HasAdBlock returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasAdBlock() bool {
	if o != nil && !IsNil(o.AdBlock) {
		return true
	}

	return false
}

// SetAdBlock gets a reference to the given bool and assigns it to the AdBlock field.
func (o *RiskEvaluationEventBrowser) SetAdBlock(v bool) {
	o.AdBlock = &v
}

// GetHasLiedLanguages returns the HasLiedLanguages field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetHasLiedLanguages() bool {
	if o == nil || IsNil(o.HasLiedLanguages) {
		var ret bool
		return ret
	}
	return *o.HasLiedLanguages
}

// GetHasLiedLanguagesOk returns a tuple with the HasLiedLanguages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetHasLiedLanguagesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLiedLanguages) {
		return nil, false
	}
	return o.HasLiedLanguages, true
}

// HasHasLiedLanguages returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasHasLiedLanguages() bool {
	if o != nil && !IsNil(o.HasLiedLanguages) {
		return true
	}

	return false
}

// SetHasLiedLanguages gets a reference to the given bool and assigns it to the HasLiedLanguages field.
func (o *RiskEvaluationEventBrowser) SetHasLiedLanguages(v bool) {
	o.HasLiedLanguages = &v
}

// GetHasLiedResolution returns the HasLiedResolution field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetHasLiedResolution() bool {
	if o == nil || IsNil(o.HasLiedResolution) {
		var ret bool
		return ret
	}
	return *o.HasLiedResolution
}

// GetHasLiedResolutionOk returns a tuple with the HasLiedResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetHasLiedResolutionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLiedResolution) {
		return nil, false
	}
	return o.HasLiedResolution, true
}

// HasHasLiedResolution returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasHasLiedResolution() bool {
	if o != nil && !IsNil(o.HasLiedResolution) {
		return true
	}

	return false
}

// SetHasLiedResolution gets a reference to the given bool and assigns it to the HasLiedResolution field.
func (o *RiskEvaluationEventBrowser) SetHasLiedResolution(v bool) {
	o.HasLiedResolution = &v
}

// GetHasLiedOs returns the HasLiedOs field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetHasLiedOs() bool {
	if o == nil || IsNil(o.HasLiedOs) {
		var ret bool
		return ret
	}
	return *o.HasLiedOs
}

// GetHasLiedOsOk returns a tuple with the HasLiedOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetHasLiedOsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLiedOs) {
		return nil, false
	}
	return o.HasLiedOs, true
}

// HasHasLiedOs returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasHasLiedOs() bool {
	if o != nil && !IsNil(o.HasLiedOs) {
		return true
	}

	return false
}

// SetHasLiedOs gets a reference to the given bool and assigns it to the HasLiedOs field.
func (o *RiskEvaluationEventBrowser) SetHasLiedOs(v bool) {
	o.HasLiedOs = &v
}

// GetHasLiedBrowser returns the HasLiedBrowser field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetHasLiedBrowser() bool {
	if o == nil || IsNil(o.HasLiedBrowser) {
		var ret bool
		return ret
	}
	return *o.HasLiedBrowser
}

// GetHasLiedBrowserOk returns a tuple with the HasLiedBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetHasLiedBrowserOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLiedBrowser) {
		return nil, false
	}
	return o.HasLiedBrowser, true
}

// HasHasLiedBrowser returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasHasLiedBrowser() bool {
	if o != nil && !IsNil(o.HasLiedBrowser) {
		return true
	}

	return false
}

// SetHasLiedBrowser gets a reference to the given bool and assigns it to the HasLiedBrowser field.
func (o *RiskEvaluationEventBrowser) SetHasLiedBrowser(v bool) {
	o.HasLiedBrowser = &v
}

// GetTouchSupport returns the TouchSupport field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetTouchSupport() []string {
	if o == nil || IsNil(o.TouchSupport) {
		var ret []string
		return ret
	}
	return o.TouchSupport
}

// GetTouchSupportOk returns a tuple with the TouchSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetTouchSupportOk() ([]string, bool) {
	if o == nil || IsNil(o.TouchSupport) {
		return nil, false
	}
	return o.TouchSupport, true
}

// HasTouchSupport returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasTouchSupport() bool {
	if o != nil && !IsNil(o.TouchSupport) {
		return true
	}

	return false
}

// SetTouchSupport gets a reference to the given []string and assigns it to the TouchSupport field.
func (o *RiskEvaluationEventBrowser) SetTouchSupport(v []string) {
	o.TouchSupport = v
}

// GetFonts returns the Fonts field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetFonts() []string {
	if o == nil || IsNil(o.Fonts) {
		var ret []string
		return ret
	}
	return o.Fonts
}

// GetFontsOk returns a tuple with the Fonts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetFontsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fonts) {
		return nil, false
	}
	return o.Fonts, true
}

// HasFonts returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasFonts() bool {
	if o != nil && !IsNil(o.Fonts) {
		return true
	}

	return false
}

// SetFonts gets a reference to the given []string and assigns it to the Fonts field.
func (o *RiskEvaluationEventBrowser) SetFonts(v []string) {
	o.Fonts = v
}

// GetAudio returns the Audio field value if set, zero value otherwise.
func (o *RiskEvaluationEventBrowser) GetAudio() string {
	if o == nil || IsNil(o.Audio) {
		var ret string
		return ret
	}
	return *o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventBrowser) GetAudioOk() (*string, bool) {
	if o == nil || IsNil(o.Audio) {
		return nil, false
	}
	return o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *RiskEvaluationEventBrowser) HasAudio() bool {
	if o != nil && !IsNil(o.Audio) {
		return true
	}

	return false
}

// SetAudio gets a reference to the given string and assigns it to the Audio field.
func (o *RiskEvaluationEventBrowser) SetAudio(v string) {
	o.Audio = &v
}

func (o RiskEvaluationEventBrowser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskEvaluationEventBrowser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserAgent) {
		toSerialize["userAgent"] = o.UserAgent
	}
	if !IsNil(o.Cookie) {
		toSerialize["cookie"] = o.Cookie
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.ColorDepth) {
		toSerialize["colorDepth"] = o.ColorDepth
	}
	if !IsNil(o.DeviceMemory) {
		toSerialize["deviceMemory"] = o.DeviceMemory
	}
	if !IsNil(o.HardwareConcurrency) {
		toSerialize["hardwareConcurrency"] = o.HardwareConcurrency
	}
	if !IsNil(o.ScreenResolution) {
		toSerialize["screenResolution"] = o.ScreenResolution
	}
	if !IsNil(o.AvailableScreenResolution) {
		toSerialize["availableScreenResolution"] = o.AvailableScreenResolution
	}
	if !IsNil(o.TimezoneOffset) {
		toSerialize["timezoneOffset"] = o.TimezoneOffset
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.SessionStorage) {
		toSerialize["sessionStorage"] = o.SessionStorage
	}
	if !IsNil(o.LocalStorage) {
		toSerialize["localStorage"] = o.LocalStorage
	}
	if !IsNil(o.IndexedDb) {
		toSerialize["indexedDb"] = o.IndexedDb
	}
	if !IsNil(o.AddBehaviour) {
		toSerialize["addBehaviour"] = o.AddBehaviour
	}
	if !IsNil(o.OpenDatabase) {
		toSerialize["openDatabase"] = o.OpenDatabase
	}
	if !IsNil(o.CpuClass) {
		toSerialize["cpuClass"] = o.CpuClass
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	if !IsNil(o.WebglVendorAndRenderer) {
		toSerialize["webglVendorAndRenderer"] = o.WebglVendorAndRenderer
	}
	if !IsNil(o.Webgl) {
		toSerialize["webgl"] = o.Webgl
	}
	if !IsNil(o.AdBlock) {
		toSerialize["adBlock"] = o.AdBlock
	}
	if !IsNil(o.HasLiedLanguages) {
		toSerialize["hasLiedLanguages"] = o.HasLiedLanguages
	}
	if !IsNil(o.HasLiedResolution) {
		toSerialize["hasLiedResolution"] = o.HasLiedResolution
	}
	if !IsNil(o.HasLiedOs) {
		toSerialize["hasLiedOs"] = o.HasLiedOs
	}
	if !IsNil(o.HasLiedBrowser) {
		toSerialize["hasLiedBrowser"] = o.HasLiedBrowser
	}
	if !IsNil(o.TouchSupport) {
		toSerialize["touchSupport"] = o.TouchSupport
	}
	if !IsNil(o.Fonts) {
		toSerialize["fonts"] = o.Fonts
	}
	if !IsNil(o.Audio) {
		toSerialize["audio"] = o.Audio
	}
	return toSerialize, nil
}

type NullableRiskEvaluationEventBrowser struct {
	value *RiskEvaluationEventBrowser
	isSet bool
}

func (v NullableRiskEvaluationEventBrowser) Get() *RiskEvaluationEventBrowser {
	return v.value
}

func (v *NullableRiskEvaluationEventBrowser) Set(val *RiskEvaluationEventBrowser) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskEvaluationEventBrowser) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskEvaluationEventBrowser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskEvaluationEventBrowser(val *RiskEvaluationEventBrowser) *NullableRiskEvaluationEventBrowser {
	return &NullableRiskEvaluationEventBrowser{value: val, isSet: true}
}

func (v NullableRiskEvaluationEventBrowser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskEvaluationEventBrowser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
