/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskEvaluationDetailsIpVelocityByUserThreshold type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskEvaluationDetailsIpVelocityByUserThreshold{}

// RiskEvaluationDetailsIpVelocityByUserThreshold The information about the threshold used.
type RiskEvaluationDetailsIpVelocityByUserThreshold struct {
	// An integer indicating the value calculated for the high threshold. If the user accessed more than the high number of IPs during the past hour, they're flagged as a HIGH ipVelocityByUser.level.
	High *int32 `json:"high,omitempty"`
	// An integer indicating the value calculated for the medium threshold. If the user accessed more than the medium number of IPs during the past hour, they're flagged as a MEDIUM ipVelocityByUser.level.
	Medium *int32               `json:"medium,omitempty"`
	Source *EnumThresholdSource `json:"source,omitempty"`
	// A date-time indicating the timestamp for the calculated threshold.
	CalculatedAt *string `json:"calculatedAt,omitempty"`
	// A date-time indicating when the threshold will be recalculated. The recalculation will happen before this time.
	ExpiresAt *string `json:"expiresAt,omitempty"`
}

// NewRiskEvaluationDetailsIpVelocityByUserThreshold instantiates a new RiskEvaluationDetailsIpVelocityByUserThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskEvaluationDetailsIpVelocityByUserThreshold() *RiskEvaluationDetailsIpVelocityByUserThreshold {
	this := RiskEvaluationDetailsIpVelocityByUserThreshold{}
	return &this
}

// NewRiskEvaluationDetailsIpVelocityByUserThresholdWithDefaults instantiates a new RiskEvaluationDetailsIpVelocityByUserThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskEvaluationDetailsIpVelocityByUserThresholdWithDefaults() *RiskEvaluationDetailsIpVelocityByUserThreshold {
	this := RiskEvaluationDetailsIpVelocityByUserThreshold{}
	return &this
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetHigh() int32 {
	if o == nil || IsNil(o.High) {
		var ret int32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetHighOk() (*int32, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given int32 and assigns it to the High field.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) SetHigh(v int32) {
	o.High = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetMedium() int32 {
	if o == nil || IsNil(o.Medium) {
		var ret int32
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetMediumOk() (*int32, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given int32 and assigns it to the Medium field.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) SetMedium(v int32) {
	o.Medium = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetSource() EnumThresholdSource {
	if o == nil || IsNil(o.Source) {
		var ret EnumThresholdSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetSourceOk() (*EnumThresholdSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given EnumThresholdSource and assigns it to the Source field.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) SetSource(v EnumThresholdSource) {
	o.Source = &v
}

// GetCalculatedAt returns the CalculatedAt field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetCalculatedAt() string {
	if o == nil || IsNil(o.CalculatedAt) {
		var ret string
		return ret
	}
	return *o.CalculatedAt
}

// GetCalculatedAtOk returns a tuple with the CalculatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetCalculatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CalculatedAt) {
		return nil, false
	}
	return o.CalculatedAt, true
}

// HasCalculatedAt returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) HasCalculatedAt() bool {
	if o != nil && !IsNil(o.CalculatedAt) {
		return true
	}

	return false
}

// SetCalculatedAt gets a reference to the given string and assigns it to the CalculatedAt field.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) SetCalculatedAt(v string) {
	o.CalculatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *RiskEvaluationDetailsIpVelocityByUserThreshold) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

func (o RiskEvaluationDetailsIpVelocityByUserThreshold) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskEvaluationDetailsIpVelocityByUserThreshold) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.CalculatedAt) {
		toSerialize["calculatedAt"] = o.CalculatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	return toSerialize, nil
}

type NullableRiskEvaluationDetailsIpVelocityByUserThreshold struct {
	value *RiskEvaluationDetailsIpVelocityByUserThreshold
	isSet bool
}

func (v NullableRiskEvaluationDetailsIpVelocityByUserThreshold) Get() *RiskEvaluationDetailsIpVelocityByUserThreshold {
	return v.value
}

func (v *NullableRiskEvaluationDetailsIpVelocityByUserThreshold) Set(val *RiskEvaluationDetailsIpVelocityByUserThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskEvaluationDetailsIpVelocityByUserThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskEvaluationDetailsIpVelocityByUserThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskEvaluationDetailsIpVelocityByUserThreshold(val *RiskEvaluationDetailsIpVelocityByUserThreshold) *NullableRiskEvaluationDetailsIpVelocityByUserThreshold {
	return &NullableRiskEvaluationDetailsIpVelocityByUserThreshold{value: val, isSet: true}
}

func (v NullableRiskEvaluationDetailsIpVelocityByUserThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskEvaluationDetailsIpVelocityByUserThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
