/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorVelocityAllOfMaxDelay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorVelocityAllOfMaxDelay{}

// RiskPredictorVelocityAllOfMaxDelay struct for RiskPredictorVelocityAllOfMaxDelay
type RiskPredictorVelocityAllOfMaxDelay struct {
	Unit     *EnumPredictorUnit `json:"unit,omitempty"`
	Quantity *int32             `json:"quantity,omitempty"`
}

// NewRiskPredictorVelocityAllOfMaxDelay instantiates a new RiskPredictorVelocityAllOfMaxDelay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorVelocityAllOfMaxDelay() *RiskPredictorVelocityAllOfMaxDelay {
	this := RiskPredictorVelocityAllOfMaxDelay{}
	return &this
}

// NewRiskPredictorVelocityAllOfMaxDelayWithDefaults instantiates a new RiskPredictorVelocityAllOfMaxDelay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorVelocityAllOfMaxDelayWithDefaults() *RiskPredictorVelocityAllOfMaxDelay {
	this := RiskPredictorVelocityAllOfMaxDelay{}
	return &this
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *RiskPredictorVelocityAllOfMaxDelay) GetUnit() EnumPredictorUnit {
	if o == nil || IsNil(o.Unit) {
		var ret EnumPredictorUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorVelocityAllOfMaxDelay) GetUnitOk() (*EnumPredictorUnit, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *RiskPredictorVelocityAllOfMaxDelay) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given EnumPredictorUnit and assigns it to the Unit field.
func (o *RiskPredictorVelocityAllOfMaxDelay) SetUnit(v EnumPredictorUnit) {
	o.Unit = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *RiskPredictorVelocityAllOfMaxDelay) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorVelocityAllOfMaxDelay) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *RiskPredictorVelocityAllOfMaxDelay) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *RiskPredictorVelocityAllOfMaxDelay) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o RiskPredictorVelocityAllOfMaxDelay) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorVelocityAllOfMaxDelay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableRiskPredictorVelocityAllOfMaxDelay struct {
	value *RiskPredictorVelocityAllOfMaxDelay
	isSet bool
}

func (v NullableRiskPredictorVelocityAllOfMaxDelay) Get() *RiskPredictorVelocityAllOfMaxDelay {
	return v.value
}

func (v *NullableRiskPredictorVelocityAllOfMaxDelay) Set(val *RiskPredictorVelocityAllOfMaxDelay) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorVelocityAllOfMaxDelay) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorVelocityAllOfMaxDelay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorVelocityAllOfMaxDelay(val *RiskPredictorVelocityAllOfMaxDelay) *NullableRiskPredictorVelocityAllOfMaxDelay {
	return &NullableRiskPredictorVelocityAllOfMaxDelay{value: val, isSet: true}
}

func (v NullableRiskPredictorVelocityAllOfMaxDelay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorVelocityAllOfMaxDelay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
