/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorTrafficAnomalyAllOfRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorTrafficAnomalyAllOfRules{}

// RiskPredictorTrafficAnomalyAllOfRules struct for RiskPredictorTrafficAnomalyAllOfRules
type RiskPredictorTrafficAnomalyAllOfRules struct {
	// Set to true to use the defined rule in the predictor.
	Enabled   bool                                      `json:"enabled"`
	Interval  RiskPredictorTrafficAnomalyAllOfInterval  `json:"interval"`
	Threshold RiskPredictorTrafficAnomalyAllOfThreshold `json:"threshold"`
	Type      EnumRiskPredictorTrafficAnomalyRuleType   `json:"type"`
}

// NewRiskPredictorTrafficAnomalyAllOfRules instantiates a new RiskPredictorTrafficAnomalyAllOfRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorTrafficAnomalyAllOfRules(enabled bool, interval RiskPredictorTrafficAnomalyAllOfInterval, threshold RiskPredictorTrafficAnomalyAllOfThreshold, type_ EnumRiskPredictorTrafficAnomalyRuleType) *RiskPredictorTrafficAnomalyAllOfRules {
	this := RiskPredictorTrafficAnomalyAllOfRules{}
	this.Enabled = enabled
	this.Interval = interval
	this.Threshold = threshold
	this.Type = type_
	return &this
}

// NewRiskPredictorTrafficAnomalyAllOfRulesWithDefaults instantiates a new RiskPredictorTrafficAnomalyAllOfRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorTrafficAnomalyAllOfRulesWithDefaults() *RiskPredictorTrafficAnomalyAllOfRules {
	this := RiskPredictorTrafficAnomalyAllOfRules{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInterval returns the Interval field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetInterval() RiskPredictorTrafficAnomalyAllOfInterval {
	if o == nil {
		var ret RiskPredictorTrafficAnomalyAllOfInterval
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetIntervalOk() (*RiskPredictorTrafficAnomalyAllOfInterval, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) SetInterval(v RiskPredictorTrafficAnomalyAllOfInterval) {
	o.Interval = v
}

// GetThreshold returns the Threshold field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetThreshold() RiskPredictorTrafficAnomalyAllOfThreshold {
	if o == nil {
		var ret RiskPredictorTrafficAnomalyAllOfThreshold
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetThresholdOk() (*RiskPredictorTrafficAnomalyAllOfThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) SetThreshold(v RiskPredictorTrafficAnomalyAllOfThreshold) {
	o.Threshold = v
}

// GetType returns the Type field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetType() EnumRiskPredictorTrafficAnomalyRuleType {
	if o == nil {
		var ret EnumRiskPredictorTrafficAnomalyRuleType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfRules) GetTypeOk() (*EnumRiskPredictorTrafficAnomalyRuleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RiskPredictorTrafficAnomalyAllOfRules) SetType(v EnumRiskPredictorTrafficAnomalyRuleType) {
	o.Type = v
}

func (o RiskPredictorTrafficAnomalyAllOfRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorTrafficAnomalyAllOfRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	toSerialize["interval"] = o.Interval
	toSerialize["threshold"] = o.Threshold
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableRiskPredictorTrafficAnomalyAllOfRules struct {
	value *RiskPredictorTrafficAnomalyAllOfRules
	isSet bool
}

func (v NullableRiskPredictorTrafficAnomalyAllOfRules) Get() *RiskPredictorTrafficAnomalyAllOfRules {
	return v.value
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfRules) Set(val *RiskPredictorTrafficAnomalyAllOfRules) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorTrafficAnomalyAllOfRules) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorTrafficAnomalyAllOfRules(val *RiskPredictorTrafficAnomalyAllOfRules) *NullableRiskPredictorTrafficAnomalyAllOfRules {
	return &NullableRiskPredictorTrafficAnomalyAllOfRules{value: val, isSet: true}
}

func (v NullableRiskPredictorTrafficAnomalyAllOfRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
