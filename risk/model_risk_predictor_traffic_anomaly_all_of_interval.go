/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorTrafficAnomalyAllOfInterval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorTrafficAnomalyAllOfInterval{}

// RiskPredictorTrafficAnomalyAllOfInterval Object that contains the fields used to define the timeframe to consider. The timeframe can be between 1 hour and 14 days.
type RiskPredictorTrafficAnomalyAllOfInterval struct {
	Unit EnumRiskPredictorTrafficAnomalyRuleIntervalUnit `json:"unit"`
	// The number of days or hours for the timeframe for tracking number of users on the device.
	Quantity int32 `json:"quantity"`
}

// NewRiskPredictorTrafficAnomalyAllOfInterval instantiates a new RiskPredictorTrafficAnomalyAllOfInterval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorTrafficAnomalyAllOfInterval(unit EnumRiskPredictorTrafficAnomalyRuleIntervalUnit, quantity int32) *RiskPredictorTrafficAnomalyAllOfInterval {
	this := RiskPredictorTrafficAnomalyAllOfInterval{}
	this.Unit = unit
	this.Quantity = quantity
	return &this
}

// NewRiskPredictorTrafficAnomalyAllOfIntervalWithDefaults instantiates a new RiskPredictorTrafficAnomalyAllOfInterval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorTrafficAnomalyAllOfIntervalWithDefaults() *RiskPredictorTrafficAnomalyAllOfInterval {
	this := RiskPredictorTrafficAnomalyAllOfInterval{}
	return &this
}

// GetUnit returns the Unit field value
func (o *RiskPredictorTrafficAnomalyAllOfInterval) GetUnit() EnumRiskPredictorTrafficAnomalyRuleIntervalUnit {
	if o == nil {
		var ret EnumRiskPredictorTrafficAnomalyRuleIntervalUnit
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfInterval) GetUnitOk() (*EnumRiskPredictorTrafficAnomalyRuleIntervalUnit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *RiskPredictorTrafficAnomalyAllOfInterval) SetUnit(v EnumRiskPredictorTrafficAnomalyRuleIntervalUnit) {
	o.Unit = v
}

// GetQuantity returns the Quantity field value
func (o *RiskPredictorTrafficAnomalyAllOfInterval) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorTrafficAnomalyAllOfInterval) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *RiskPredictorTrafficAnomalyAllOfInterval) SetQuantity(v int32) {
	o.Quantity = v
}

func (o RiskPredictorTrafficAnomalyAllOfInterval) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorTrafficAnomalyAllOfInterval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["unit"] = o.Unit
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

type NullableRiskPredictorTrafficAnomalyAllOfInterval struct {
	value *RiskPredictorTrafficAnomalyAllOfInterval
	isSet bool
}

func (v NullableRiskPredictorTrafficAnomalyAllOfInterval) Get() *RiskPredictorTrafficAnomalyAllOfInterval {
	return v.value
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfInterval) Set(val *RiskPredictorTrafficAnomalyAllOfInterval) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorTrafficAnomalyAllOfInterval) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfInterval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorTrafficAnomalyAllOfInterval(val *RiskPredictorTrafficAnomalyAllOfInterval) *NullableRiskPredictorTrafficAnomalyAllOfInterval {
	return &NullableRiskPredictorTrafficAnomalyAllOfInterval{value: val, isSet: true}
}

func (v NullableRiskPredictorTrafficAnomalyAllOfInterval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorTrafficAnomalyAllOfInterval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
