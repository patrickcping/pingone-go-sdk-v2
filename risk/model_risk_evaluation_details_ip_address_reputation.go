/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskEvaluationDetailsIpAddressReputation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskEvaluationDetailsIpAddressReputation{}

// RiskEvaluationDetailsIpAddressReputation struct for RiskEvaluationDetailsIpAddressReputation
type RiskEvaluationDetailsIpAddressReputation struct {
	Level *EnumRiskLevel `json:"level,omitempty"`
	// An integer that represents the calculated score of the IP address involved in the transaction. Scores range between 0 and 100. A score of 0 indicates a non-risky IP address; a score of 100 indicates a high-risk IP address. If the IP address reputation score is not available for the specific IP address, NULL is returned.
	Score *int32 `json:"score,omitempty"`
}

// NewRiskEvaluationDetailsIpAddressReputation instantiates a new RiskEvaluationDetailsIpAddressReputation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskEvaluationDetailsIpAddressReputation() *RiskEvaluationDetailsIpAddressReputation {
	this := RiskEvaluationDetailsIpAddressReputation{}
	return &this
}

// NewRiskEvaluationDetailsIpAddressReputationWithDefaults instantiates a new RiskEvaluationDetailsIpAddressReputation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskEvaluationDetailsIpAddressReputationWithDefaults() *RiskEvaluationDetailsIpAddressReputation {
	this := RiskEvaluationDetailsIpAddressReputation{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpAddressReputation) GetLevel() EnumRiskLevel {
	if o == nil || IsNil(o.Level) {
		var ret EnumRiskLevel
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpAddressReputation) GetLevelOk() (*EnumRiskLevel, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpAddressReputation) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given EnumRiskLevel and assigns it to the Level field.
func (o *RiskEvaluationDetailsIpAddressReputation) SetLevel(v EnumRiskLevel) {
	o.Level = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *RiskEvaluationDetailsIpAddressReputation) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationDetailsIpAddressReputation) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *RiskEvaluationDetailsIpAddressReputation) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *RiskEvaluationDetailsIpAddressReputation) SetScore(v int32) {
	o.Score = &v
}

func (o RiskEvaluationDetailsIpAddressReputation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskEvaluationDetailsIpAddressReputation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	return toSerialize, nil
}

type NullableRiskEvaluationDetailsIpAddressReputation struct {
	value *RiskEvaluationDetailsIpAddressReputation
	isSet bool
}

func (v NullableRiskEvaluationDetailsIpAddressReputation) Get() *RiskEvaluationDetailsIpAddressReputation {
	return v.value
}

func (v *NullableRiskEvaluationDetailsIpAddressReputation) Set(val *RiskEvaluationDetailsIpAddressReputation) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskEvaluationDetailsIpAddressReputation) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskEvaluationDetailsIpAddressReputation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskEvaluationDetailsIpAddressReputation(val *RiskEvaluationDetailsIpAddressReputation) *NullableRiskEvaluationDetailsIpAddressReputation {
	return &NullableRiskEvaluationDetailsIpAddressReputation{value: val, isSet: true}
}

func (v NullableRiskEvaluationDetailsIpAddressReputation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskEvaluationDetailsIpAddressReputation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
