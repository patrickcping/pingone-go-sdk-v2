/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorCompositeConditionOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorCompositeConditionOneOf{}

// RiskPredictorCompositeConditionOneOf struct for RiskPredictorCompositeConditionOneOf
type RiskPredictorCompositeConditionOneOf struct {
	Contains string                              `json:"contains"`
	List     []string                            `json:"list"`
	Type     EnumPredictorCompositeConditionType `json:"type"`
}

// NewRiskPredictorCompositeConditionOneOf instantiates a new RiskPredictorCompositeConditionOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorCompositeConditionOneOf(contains string, list []string, type_ EnumPredictorCompositeConditionType) *RiskPredictorCompositeConditionOneOf {
	this := RiskPredictorCompositeConditionOneOf{}
	this.Contains = contains
	this.List = list
	this.Type = type_
	return &this
}

// NewRiskPredictorCompositeConditionOneOfWithDefaults instantiates a new RiskPredictorCompositeConditionOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorCompositeConditionOneOfWithDefaults() *RiskPredictorCompositeConditionOneOf {
	this := RiskPredictorCompositeConditionOneOf{}
	return &this
}

// GetContains returns the Contains field value
func (o *RiskPredictorCompositeConditionOneOf) GetContains() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Contains
}

// GetContainsOk returns a tuple with the Contains field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorCompositeConditionOneOf) GetContainsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contains, true
}

// SetContains sets field value
func (o *RiskPredictorCompositeConditionOneOf) SetContains(v string) {
	o.Contains = v
}

// GetList returns the List field value
func (o *RiskPredictorCompositeConditionOneOf) GetList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorCompositeConditionOneOf) GetListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.List, true
}

// SetList sets field value
func (o *RiskPredictorCompositeConditionOneOf) SetList(v []string) {
	o.List = v
}

// GetType returns the Type field value
func (o *RiskPredictorCompositeConditionOneOf) GetType() EnumPredictorCompositeConditionType {
	if o == nil {
		var ret EnumPredictorCompositeConditionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorCompositeConditionOneOf) GetTypeOk() (*EnumPredictorCompositeConditionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RiskPredictorCompositeConditionOneOf) SetType(v EnumPredictorCompositeConditionType) {
	o.Type = v
}

func (o RiskPredictorCompositeConditionOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorCompositeConditionOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contains"] = o.Contains
	toSerialize["list"] = o.List
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableRiskPredictorCompositeConditionOneOf struct {
	value *RiskPredictorCompositeConditionOneOf
	isSet bool
}

func (v NullableRiskPredictorCompositeConditionOneOf) Get() *RiskPredictorCompositeConditionOneOf {
	return v.value
}

func (v *NullableRiskPredictorCompositeConditionOneOf) Set(val *RiskPredictorCompositeConditionOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorCompositeConditionOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorCompositeConditionOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorCompositeConditionOneOf(val *RiskPredictorCompositeConditionOneOf) *NullableRiskPredictorCompositeConditionOneOf {
	return &NullableRiskPredictorCompositeConditionOneOf{value: val, isSet: true}
}

func (v NullableRiskPredictorCompositeConditionOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorCompositeConditionOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
