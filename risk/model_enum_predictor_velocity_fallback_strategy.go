/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
	"fmt"
)

// EnumPredictorVelocityFallbackStrategy the model 'EnumPredictorVelocityFallbackStrategy'
type EnumPredictorVelocityFallbackStrategy string

// List of EnumPredictorVelocityFallbackStrategy
const (
	ENUMPREDICTORVELOCITYFALLBACKSTRATEGY_ENVIRONMENT_MAX EnumPredictorVelocityFallbackStrategy = "ENVIRONMENT_MAX"
)

// All allowed values of EnumPredictorVelocityFallbackStrategy enum
var AllowedEnumPredictorVelocityFallbackStrategyEnumValues = []EnumPredictorVelocityFallbackStrategy{
	"ENVIRONMENT_MAX",
}

func (v *EnumPredictorVelocityFallbackStrategy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumPredictorVelocityFallbackStrategy(value)
	for _, existing := range AllowedEnumPredictorVelocityFallbackStrategyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumPredictorVelocityFallbackStrategy(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumPredictorVelocityFallbackStrategyFromValue returns a pointer to a valid EnumPredictorVelocityFallbackStrategy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumPredictorVelocityFallbackStrategyFromValue(v string) (*EnumPredictorVelocityFallbackStrategy, error) {
	ev := EnumPredictorVelocityFallbackStrategy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumPredictorVelocityFallbackStrategy: valid values are %v", v, AllowedEnumPredictorVelocityFallbackStrategyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumPredictorVelocityFallbackStrategy) IsValid() bool {
	for _, existing := range AllowedEnumPredictorVelocityFallbackStrategyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumPredictorVelocityFallbackStrategy value
func (v EnumPredictorVelocityFallbackStrategy) Ptr() *EnumPredictorVelocityFallbackStrategy {
	return &v
}

type NullableEnumPredictorVelocityFallbackStrategy struct {
	value *EnumPredictorVelocityFallbackStrategy
	isSet bool
}

func (v NullableEnumPredictorVelocityFallbackStrategy) Get() *EnumPredictorVelocityFallbackStrategy {
	return v.value
}

func (v *NullableEnumPredictorVelocityFallbackStrategy) Set(val *EnumPredictorVelocityFallbackStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumPredictorVelocityFallbackStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumPredictorVelocityFallbackStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumPredictorVelocityFallbackStrategy(val *EnumPredictorVelocityFallbackStrategy) *NullableEnumPredictorVelocityFallbackStrategy {
	return &NullableEnumPredictorVelocityFallbackStrategy{value: val, isSet: true}
}

func (v NullableEnumPredictorVelocityFallbackStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumPredictorVelocityFallbackStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
