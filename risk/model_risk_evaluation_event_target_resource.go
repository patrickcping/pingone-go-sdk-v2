/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskEvaluationEventTargetResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskEvaluationEventTargetResource{}

// RiskEvaluationEventTargetResource struct for RiskEvaluationEventTargetResource
type RiskEvaluationEventTargetResource struct {
	// A string that specifies the ID of the target application.
	Id *string `json:"id,omitempty"`
	// A string that specifies the name of the target application.
	Name *string `json:"name,omitempty"`
}

// NewRiskEvaluationEventTargetResource instantiates a new RiskEvaluationEventTargetResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskEvaluationEventTargetResource() *RiskEvaluationEventTargetResource {
	this := RiskEvaluationEventTargetResource{}
	return &this
}

// NewRiskEvaluationEventTargetResourceWithDefaults instantiates a new RiskEvaluationEventTargetResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskEvaluationEventTargetResourceWithDefaults() *RiskEvaluationEventTargetResource {
	this := RiskEvaluationEventTargetResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RiskEvaluationEventTargetResource) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventTargetResource) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RiskEvaluationEventTargetResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RiskEvaluationEventTargetResource) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RiskEvaluationEventTargetResource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskEvaluationEventTargetResource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RiskEvaluationEventTargetResource) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RiskEvaluationEventTargetResource) SetName(v string) {
	o.Name = &v
}

func (o RiskEvaluationEventTargetResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskEvaluationEventTargetResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableRiskEvaluationEventTargetResource struct {
	value *RiskEvaluationEventTargetResource
	isSet bool
}

func (v NullableRiskEvaluationEventTargetResource) Get() *RiskEvaluationEventTargetResource {
	return v.value
}

func (v *NullableRiskEvaluationEventTargetResource) Set(val *RiskEvaluationEventTargetResource) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskEvaluationEventTargetResource) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskEvaluationEventTargetResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskEvaluationEventTargetResource(val *RiskEvaluationEventTargetResource) *NullableRiskEvaluationEventTargetResource {
	return &NullableRiskEvaluationEventTargetResource{value: val, isSet: true}
}

func (v NullableRiskEvaluationEventTargetResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskEvaluationEventTargetResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
