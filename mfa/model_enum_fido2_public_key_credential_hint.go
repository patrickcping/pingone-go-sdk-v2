/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
	"fmt"
)

// EnumFIDO2PublicKeyCredentialHint the model 'EnumFIDO2PublicKeyCredentialHint'
type EnumFIDO2PublicKeyCredentialHint string

// List of EnumFIDO2PublicKeyCredentialHint
const (
	ENUMFIDO2PUBLICKEYCREDENTIALHINT_SECURITY_KEY  EnumFIDO2PublicKeyCredentialHint = "SECURITY_KEY"
	ENUMFIDO2PUBLICKEYCREDENTIALHINT_CLIENT_DEVICE EnumFIDO2PublicKeyCredentialHint = "CLIENT_DEVICE"
	ENUMFIDO2PUBLICKEYCREDENTIALHINT_HYBRID        EnumFIDO2PublicKeyCredentialHint = "HYBRID"
)

// All allowed values of EnumFIDO2PublicKeyCredentialHint enum
var AllowedEnumFIDO2PublicKeyCredentialHintEnumValues = []EnumFIDO2PublicKeyCredentialHint{
	"SECURITY_KEY",
	"CLIENT_DEVICE",
	"HYBRID",
}

func (v *EnumFIDO2PublicKeyCredentialHint) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFIDO2PublicKeyCredentialHint(value)
	for _, existing := range AllowedEnumFIDO2PublicKeyCredentialHintEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumFIDO2PublicKeyCredentialHint", value)
}

// NewEnumFIDO2PublicKeyCredentialHintFromValue returns a pointer to a valid EnumFIDO2PublicKeyCredentialHint
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFIDO2PublicKeyCredentialHintFromValue(v string) (*EnumFIDO2PublicKeyCredentialHint, error) {
	ev := EnumFIDO2PublicKeyCredentialHint(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFIDO2PublicKeyCredentialHint: valid values are %v", v, AllowedEnumFIDO2PublicKeyCredentialHintEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFIDO2PublicKeyCredentialHint) IsValid() bool {
	for _, existing := range AllowedEnumFIDO2PublicKeyCredentialHintEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFIDO2PublicKeyCredentialHint value
func (v EnumFIDO2PublicKeyCredentialHint) Ptr() *EnumFIDO2PublicKeyCredentialHint {
	return &v
}

type NullableEnumFIDO2PublicKeyCredentialHint struct {
	value *EnumFIDO2PublicKeyCredentialHint
	isSet bool
}

func (v NullableEnumFIDO2PublicKeyCredentialHint) Get() *EnumFIDO2PublicKeyCredentialHint {
	return v.value
}

func (v *NullableEnumFIDO2PublicKeyCredentialHint) Set(val *EnumFIDO2PublicKeyCredentialHint) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFIDO2PublicKeyCredentialHint) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFIDO2PublicKeyCredentialHint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFIDO2PublicKeyCredentialHint(val *EnumFIDO2PublicKeyCredentialHint) *NullableEnumFIDO2PublicKeyCredentialHint {
	return &NullableEnumFIDO2PublicKeyCredentialHint{value: val, isSet: true}
}

func (v NullableEnumFIDO2PublicKeyCredentialHint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFIDO2PublicKeyCredentialHint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
