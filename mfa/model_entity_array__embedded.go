/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the EntityArrayEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityArrayEmbedded{}

// EntityArrayEmbedded struct for EntityArrayEmbedded
type EntityArrayEmbedded struct {
	PushCredentials              []MFAPushCredentialResponse  `json:"pushCredentials,omitempty"`
	DeviceAuthenticationPolicies []DeviceAuthenticationPolicy `json:"deviceAuthenticationPolicies,omitempty"`
	FidoDevicesMetadata          []map[string]interface{}     `json:"fidoDevicesMetadata,omitempty"`
	// Deprecated
	FidoPolicies  []FIDOPolicy  `json:"fidoPolicies,omitempty"`
	Fido2Policies []FIDO2Policy `json:"fido2Policies,omitempty"`
}

// NewEntityArrayEmbedded instantiates a new EntityArrayEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityArrayEmbedded() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// NewEntityArrayEmbeddedWithDefaults instantiates a new EntityArrayEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityArrayEmbeddedWithDefaults() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// GetPushCredentials returns the PushCredentials field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetPushCredentials() []MFAPushCredentialResponse {
	if o == nil || IsNil(o.PushCredentials) {
		var ret []MFAPushCredentialResponse
		return ret
	}
	return o.PushCredentials
}

// GetPushCredentialsOk returns a tuple with the PushCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetPushCredentialsOk() ([]MFAPushCredentialResponse, bool) {
	if o == nil || IsNil(o.PushCredentials) {
		return nil, false
	}
	return o.PushCredentials, true
}

// HasPushCredentials returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasPushCredentials() bool {
	if o != nil && !IsNil(o.PushCredentials) {
		return true
	}

	return false
}

// SetPushCredentials gets a reference to the given []MFAPushCredentialResponse and assigns it to the PushCredentials field.
func (o *EntityArrayEmbedded) SetPushCredentials(v []MFAPushCredentialResponse) {
	o.PushCredentials = v
}

// GetDeviceAuthenticationPolicies returns the DeviceAuthenticationPolicies field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetDeviceAuthenticationPolicies() []DeviceAuthenticationPolicy {
	if o == nil || IsNil(o.DeviceAuthenticationPolicies) {
		var ret []DeviceAuthenticationPolicy
		return ret
	}
	return o.DeviceAuthenticationPolicies
}

// GetDeviceAuthenticationPoliciesOk returns a tuple with the DeviceAuthenticationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetDeviceAuthenticationPoliciesOk() ([]DeviceAuthenticationPolicy, bool) {
	if o == nil || IsNil(o.DeviceAuthenticationPolicies) {
		return nil, false
	}
	return o.DeviceAuthenticationPolicies, true
}

// HasDeviceAuthenticationPolicies returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasDeviceAuthenticationPolicies() bool {
	if o != nil && !IsNil(o.DeviceAuthenticationPolicies) {
		return true
	}

	return false
}

// SetDeviceAuthenticationPolicies gets a reference to the given []DeviceAuthenticationPolicy and assigns it to the DeviceAuthenticationPolicies field.
func (o *EntityArrayEmbedded) SetDeviceAuthenticationPolicies(v []DeviceAuthenticationPolicy) {
	o.DeviceAuthenticationPolicies = v
}

// GetFidoDevicesMetadata returns the FidoDevicesMetadata field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetFidoDevicesMetadata() []map[string]interface{} {
	if o == nil || IsNil(o.FidoDevicesMetadata) {
		var ret []map[string]interface{}
		return ret
	}
	return o.FidoDevicesMetadata
}

// GetFidoDevicesMetadataOk returns a tuple with the FidoDevicesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetFidoDevicesMetadataOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.FidoDevicesMetadata) {
		return nil, false
	}
	return o.FidoDevicesMetadata, true
}

// HasFidoDevicesMetadata returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasFidoDevicesMetadata() bool {
	if o != nil && !IsNil(o.FidoDevicesMetadata) {
		return true
	}

	return false
}

// SetFidoDevicesMetadata gets a reference to the given []map[string]interface{} and assigns it to the FidoDevicesMetadata field.
func (o *EntityArrayEmbedded) SetFidoDevicesMetadata(v []map[string]interface{}) {
	o.FidoDevicesMetadata = v
}

// GetFidoPolicies returns the FidoPolicies field value if set, zero value otherwise.
// Deprecated
func (o *EntityArrayEmbedded) GetFidoPolicies() []FIDOPolicy {
	if o == nil || IsNil(o.FidoPolicies) {
		var ret []FIDOPolicy
		return ret
	}
	return o.FidoPolicies
}

// GetFidoPoliciesOk returns a tuple with the FidoPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EntityArrayEmbedded) GetFidoPoliciesOk() ([]FIDOPolicy, bool) {
	if o == nil || IsNil(o.FidoPolicies) {
		return nil, false
	}
	return o.FidoPolicies, true
}

// HasFidoPolicies returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasFidoPolicies() bool {
	if o != nil && !IsNil(o.FidoPolicies) {
		return true
	}

	return false
}

// SetFidoPolicies gets a reference to the given []FIDOPolicy and assigns it to the FidoPolicies field.
// Deprecated
func (o *EntityArrayEmbedded) SetFidoPolicies(v []FIDOPolicy) {
	o.FidoPolicies = v
}

// GetFido2Policies returns the Fido2Policies field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetFido2Policies() []FIDO2Policy {
	if o == nil || IsNil(o.Fido2Policies) {
		var ret []FIDO2Policy
		return ret
	}
	return o.Fido2Policies
}

// GetFido2PoliciesOk returns a tuple with the Fido2Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetFido2PoliciesOk() ([]FIDO2Policy, bool) {
	if o == nil || IsNil(o.Fido2Policies) {
		return nil, false
	}
	return o.Fido2Policies, true
}

// HasFido2Policies returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasFido2Policies() bool {
	if o != nil && !IsNil(o.Fido2Policies) {
		return true
	}

	return false
}

// SetFido2Policies gets a reference to the given []FIDO2Policy and assigns it to the Fido2Policies field.
func (o *EntityArrayEmbedded) SetFido2Policies(v []FIDO2Policy) {
	o.Fido2Policies = v
}

func (o EntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityArrayEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PushCredentials) {
		toSerialize["pushCredentials"] = o.PushCredentials
	}
	if !IsNil(o.DeviceAuthenticationPolicies) {
		toSerialize["deviceAuthenticationPolicies"] = o.DeviceAuthenticationPolicies
	}
	if !IsNil(o.FidoDevicesMetadata) {
		toSerialize["fidoDevicesMetadata"] = o.FidoDevicesMetadata
	}
	if !IsNil(o.FidoPolicies) {
		toSerialize["fidoPolicies"] = o.FidoPolicies
	}
	if !IsNil(o.Fido2Policies) {
		toSerialize["fido2Policies"] = o.Fido2Policies
	}
	return toSerialize, nil
}

type NullableEntityArrayEmbedded struct {
	value *EntityArrayEmbedded
	isSet bool
}

func (v NullableEntityArrayEmbedded) Get() *EntityArrayEmbedded {
	return v.value
}

func (v *NullableEntityArrayEmbedded) Set(val *EntityArrayEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityArrayEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityArrayEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityArrayEmbedded(val *EntityArrayEmbedded) *NullableEntityArrayEmbedded {
	return &NullableEntityArrayEmbedded{value: val, isSet: true}
}

func (v NullableEntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityArrayEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
