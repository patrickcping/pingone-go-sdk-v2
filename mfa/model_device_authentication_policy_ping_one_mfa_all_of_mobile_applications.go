/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications{}

// DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications struct for DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications
type DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications struct {
	// The application's ID.
	Id                  string                                                              `json:"id"`
	Push                *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush                `json:"push,omitempty"`
	PushTimeout         *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout         `json:"pushTimeout,omitempty"`
	PairingKeyLifetime  *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime  `json:"pairingKeyLifetime,omitempty"`
	PushLimit           *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit           `json:"pushLimit,omitempty"`
	Otp                 *DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1                `json:"otp,omitempty"`
	DeviceAuthorization *DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization `json:"deviceAuthorization,omitempty"`
	AutoEnrollment      *DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment      `json:"autoEnrollment,omitempty"`
	// You can set `pairingDisabled` to true to prevent users from pairing new devices with the relevant method. You can use this option if you want to phase out an existing authentication method but want to allow users to continue using the method for authentication for existing devices.
	PairingDisabled    *bool                                        `json:"pairingDisabled,omitempty"`
	IntegrityDetection *EnumMFADevicePolicyMobileIntegrityDetection `json:"integrityDetection,omitempty"`
}

// NewDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications instantiates a new DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications(id string) *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications {
	this := DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications{}
	this.Id = id
	return &this
}

// NewDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplicationsWithDefaults instantiates a new DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplicationsWithDefaults() *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications {
	this := DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications{}
	return &this
}

// GetId returns the Id field value
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetId(v string) {
	o.Id = v
}

// GetPush returns the Push field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPush() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush {
	if o == nil || IsNil(o.Push) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush
		return ret
	}
	return *o.Push
}

// GetPushOk returns a tuple with the Push field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPushOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush, bool) {
	if o == nil || IsNil(o.Push) {
		return nil, false
	}
	return o.Push, true
}

// HasPush returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasPush() bool {
	if o != nil && !IsNil(o.Push) {
		return true
	}

	return false
}

// SetPush gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush and assigns it to the Push field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetPush(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePush) {
	o.Push = &v
}

// GetPushTimeout returns the PushTimeout field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPushTimeout() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout {
	if o == nil || IsNil(o.PushTimeout) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout
		return ret
	}
	return *o.PushTimeout
}

// GetPushTimeoutOk returns a tuple with the PushTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPushTimeoutOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout, bool) {
	if o == nil || IsNil(o.PushTimeout) {
		return nil, false
	}
	return o.PushTimeout, true
}

// HasPushTimeout returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasPushTimeout() bool {
	if o != nil && !IsNil(o.PushTimeout) {
		return true
	}

	return false
}

// SetPushTimeout gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout and assigns it to the PushTimeout field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetPushTimeout(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushTimeout) {
	o.PushTimeout = &v
}

// GetPairingKeyLifetime returns the PairingKeyLifetime field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPairingKeyLifetime() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime {
	if o == nil || IsNil(o.PairingKeyLifetime) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime
		return ret
	}
	return *o.PairingKeyLifetime
}

// GetPairingKeyLifetimeOk returns a tuple with the PairingKeyLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPairingKeyLifetimeOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime, bool) {
	if o == nil || IsNil(o.PairingKeyLifetime) {
		return nil, false
	}
	return o.PairingKeyLifetime, true
}

// HasPairingKeyLifetime returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasPairingKeyLifetime() bool {
	if o != nil && !IsNil(o.PairingKeyLifetime) {
		return true
	}

	return false
}

// SetPairingKeyLifetime gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime and assigns it to the PairingKeyLifetime field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetPairingKeyLifetime(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime) {
	o.PairingKeyLifetime = &v
}

// GetPushLimit returns the PushLimit field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPushLimit() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit {
	if o == nil || IsNil(o.PushLimit) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit
		return ret
	}
	return *o.PushLimit
}

// GetPushLimitOk returns a tuple with the PushLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPushLimitOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit, bool) {
	if o == nil || IsNil(o.PushLimit) {
		return nil, false
	}
	return o.PushLimit, true
}

// HasPushLimit returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasPushLimit() bool {
	if o != nil && !IsNil(o.PushLimit) {
		return true
	}

	return false
}

// SetPushLimit gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit and assigns it to the PushLimit field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetPushLimit(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit) {
	o.PushLimit = &v
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetOtp() DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1 {
	if o == nil || IsNil(o.Otp) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetOtpOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1, bool) {
	if o == nil || IsNil(o.Otp) {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasOtp() bool {
	if o != nil && !IsNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1 and assigns it to the Otp field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetOtp(v DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1) {
	o.Otp = &v
}

// GetDeviceAuthorization returns the DeviceAuthorization field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetDeviceAuthorization() DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization {
	if o == nil || IsNil(o.DeviceAuthorization) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization
		return ret
	}
	return *o.DeviceAuthorization
}

// GetDeviceAuthorizationOk returns a tuple with the DeviceAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetDeviceAuthorizationOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization, bool) {
	if o == nil || IsNil(o.DeviceAuthorization) {
		return nil, false
	}
	return o.DeviceAuthorization, true
}

// HasDeviceAuthorization returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasDeviceAuthorization() bool {
	if o != nil && !IsNil(o.DeviceAuthorization) {
		return true
	}

	return false
}

// SetDeviceAuthorization gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization and assigns it to the DeviceAuthorization field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetDeviceAuthorization(v DeviceAuthenticationPolicyPingOneMFAAllOfMobileDeviceAuthorization) {
	o.DeviceAuthorization = &v
}

// GetAutoEnrollment returns the AutoEnrollment field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetAutoEnrollment() DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment {
	if o == nil || IsNil(o.AutoEnrollment) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment
		return ret
	}
	return *o.AutoEnrollment
}

// GetAutoEnrollmentOk returns a tuple with the AutoEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetAutoEnrollmentOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment, bool) {
	if o == nil || IsNil(o.AutoEnrollment) {
		return nil, false
	}
	return o.AutoEnrollment, true
}

// HasAutoEnrollment returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasAutoEnrollment() bool {
	if o != nil && !IsNil(o.AutoEnrollment) {
		return true
	}

	return false
}

// SetAutoEnrollment gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment and assigns it to the AutoEnrollment field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetAutoEnrollment(v DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment) {
	o.AutoEnrollment = &v
}

// GetPairingDisabled returns the PairingDisabled field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPairingDisabled() bool {
	if o == nil || IsNil(o.PairingDisabled) {
		var ret bool
		return ret
	}
	return *o.PairingDisabled
}

// GetPairingDisabledOk returns a tuple with the PairingDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetPairingDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PairingDisabled) {
		return nil, false
	}
	return o.PairingDisabled, true
}

// HasPairingDisabled returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasPairingDisabled() bool {
	if o != nil && !IsNil(o.PairingDisabled) {
		return true
	}

	return false
}

// SetPairingDisabled gets a reference to the given bool and assigns it to the PairingDisabled field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetPairingDisabled(v bool) {
	o.PairingDisabled = &v
}

// GetIntegrityDetection returns the IntegrityDetection field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetIntegrityDetection() EnumMFADevicePolicyMobileIntegrityDetection {
	if o == nil || IsNil(o.IntegrityDetection) {
		var ret EnumMFADevicePolicyMobileIntegrityDetection
		return ret
	}
	return *o.IntegrityDetection
}

// GetIntegrityDetectionOk returns a tuple with the IntegrityDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) GetIntegrityDetectionOk() (*EnumMFADevicePolicyMobileIntegrityDetection, bool) {
	if o == nil || IsNil(o.IntegrityDetection) {
		return nil, false
	}
	return o.IntegrityDetection, true
}

// HasIntegrityDetection returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) HasIntegrityDetection() bool {
	if o != nil && !IsNil(o.IntegrityDetection) {
		return true
	}

	return false
}

// SetIntegrityDetection gets a reference to the given EnumMFADevicePolicyMobileIntegrityDetection and assigns it to the IntegrityDetection field.
func (o *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) SetIntegrityDetection(v EnumMFADevicePolicyMobileIntegrityDetection) {
	o.IntegrityDetection = &v
}

func (o DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Push) {
		toSerialize["push"] = o.Push
	}
	if !IsNil(o.PushTimeout) {
		toSerialize["pushTimeout"] = o.PushTimeout
	}
	if !IsNil(o.PairingKeyLifetime) {
		toSerialize["pairingKeyLifetime"] = o.PairingKeyLifetime
	}
	if !IsNil(o.PushLimit) {
		toSerialize["pushLimit"] = o.PushLimit
	}
	if !IsNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	if !IsNil(o.DeviceAuthorization) {
		toSerialize["deviceAuthorization"] = o.DeviceAuthorization
	}
	if !IsNil(o.AutoEnrollment) {
		toSerialize["autoEnrollment"] = o.AutoEnrollment
	}
	if !IsNil(o.PairingDisabled) {
		toSerialize["pairingDisabled"] = o.PairingDisabled
	}
	if !IsNil(o.IntegrityDetection) {
		toSerialize["integrityDetection"] = o.IntegrityDetection
	}
	return toSerialize, nil
}

type NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications struct {
	value *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications
	isSet bool
}

func (v NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) Get() *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) Set(val *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications(val *DeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) *NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications {
	return &NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicyPingOneMFAAllOfMobileApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
