/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration{}

// DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration struct for DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration
type DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration struct {
	// If you want to limit users to specific IP addresses when pairing their device, set `anyIPAdress` to false, and use `ipPairingConfiguration.onlyTheseIpAddresses` to specify the valid IP addresses.
	AnyIPAdress *bool `json:"anyIPAdress,omitempty"`
	// If you set `ipPairingConfiguration.anyIPAdress` to `false`, use `onlyTheseIpAddresses` to specify the IP addresses from which users can pair their devices. Each item in the array should be an IP address or an address range using CIDR notation, for example, `192.168.0.1/24`
	OnlyTheseIpAddresses []string `json:"onlyTheseIpAddresses,omitempty"`
}

// NewDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration instantiates a new DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration() *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration {
	this := DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration{}
	return &this
}

// NewDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfigurationWithDefaults instantiates a new DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfigurationWithDefaults() *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration {
	this := DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration{}
	return &this
}

// GetAnyIPAdress returns the AnyIPAdress field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) GetAnyIPAdress() bool {
	if o == nil || IsNil(o.AnyIPAdress) {
		var ret bool
		return ret
	}
	return *o.AnyIPAdress
}

// GetAnyIPAdressOk returns a tuple with the AnyIPAdress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) GetAnyIPAdressOk() (*bool, bool) {
	if o == nil || IsNil(o.AnyIPAdress) {
		return nil, false
	}
	return o.AnyIPAdress, true
}

// HasAnyIPAdress returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) HasAnyIPAdress() bool {
	if o != nil && !IsNil(o.AnyIPAdress) {
		return true
	}

	return false
}

// SetAnyIPAdress gets a reference to the given bool and assigns it to the AnyIPAdress field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) SetAnyIPAdress(v bool) {
	o.AnyIPAdress = &v
}

// GetOnlyTheseIpAddresses returns the OnlyTheseIpAddresses field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) GetOnlyTheseIpAddresses() []string {
	if o == nil || IsNil(o.OnlyTheseIpAddresses) {
		var ret []string
		return ret
	}
	return o.OnlyTheseIpAddresses
}

// GetOnlyTheseIpAddressesOk returns a tuple with the OnlyTheseIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) GetOnlyTheseIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.OnlyTheseIpAddresses) {
		return nil, false
	}
	return o.OnlyTheseIpAddresses, true
}

// HasOnlyTheseIpAddresses returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) HasOnlyTheseIpAddresses() bool {
	if o != nil && !IsNil(o.OnlyTheseIpAddresses) {
		return true
	}

	return false
}

// SetOnlyTheseIpAddresses gets a reference to the given []string and assigns it to the OnlyTheseIpAddresses field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) SetOnlyTheseIpAddresses(v []string) {
	o.OnlyTheseIpAddresses = v
}

func (o DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnyIPAdress) {
		toSerialize["anyIPAdress"] = o.AnyIPAdress
	}
	if !IsNil(o.OnlyTheseIpAddresses) {
		toSerialize["onlyTheseIpAddresses"] = o.OnlyTheseIpAddresses
	}
	return toSerialize, nil
}

type NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration struct {
	value *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration
	isSet bool
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) Get() *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) Set(val *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration(val *DeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) *NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration {
	return &NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileIpPairingConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
