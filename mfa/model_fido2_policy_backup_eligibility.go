/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the FIDO2PolicyBackupEligibility type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FIDO2PolicyBackupEligibility{}

// FIDO2PolicyBackupEligibility Used to control whether users should be allowed to register and authenticate with a device that uses cloud-synced credentials, such as a passkey.
type FIDO2PolicyBackupEligibility struct {
	// Set to `true` if you want to let users register and authenticate with a device that uses cloud-synced credentials. Set to `false` if you don't want to allow this.
	Allow bool `json:"allow"`
	// Set to `true` if you want the backup eligibility of the device to be checked again at each authentication attempt and not just once during registration. Set to `false` to have it checked only at registration.
	EnforceDuringAuthentication bool `json:"enforceDuringAuthentication"`
}

// NewFIDO2PolicyBackupEligibility instantiates a new FIDO2PolicyBackupEligibility object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFIDO2PolicyBackupEligibility(allow bool, enforceDuringAuthentication bool) *FIDO2PolicyBackupEligibility {
	this := FIDO2PolicyBackupEligibility{}
	this.Allow = allow
	this.EnforceDuringAuthentication = enforceDuringAuthentication
	return &this
}

// NewFIDO2PolicyBackupEligibilityWithDefaults instantiates a new FIDO2PolicyBackupEligibility object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFIDO2PolicyBackupEligibilityWithDefaults() *FIDO2PolicyBackupEligibility {
	this := FIDO2PolicyBackupEligibility{}
	return &this
}

// GetAllow returns the Allow field value
func (o *FIDO2PolicyBackupEligibility) GetAllow() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Allow
}

// GetAllowOk returns a tuple with the Allow field value
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyBackupEligibility) GetAllowOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Allow, true
}

// SetAllow sets field value
func (o *FIDO2PolicyBackupEligibility) SetAllow(v bool) {
	o.Allow = v
}

// GetEnforceDuringAuthentication returns the EnforceDuringAuthentication field value
func (o *FIDO2PolicyBackupEligibility) GetEnforceDuringAuthentication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnforceDuringAuthentication
}

// GetEnforceDuringAuthenticationOk returns a tuple with the EnforceDuringAuthentication field value
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyBackupEligibility) GetEnforceDuringAuthenticationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnforceDuringAuthentication, true
}

// SetEnforceDuringAuthentication sets field value
func (o *FIDO2PolicyBackupEligibility) SetEnforceDuringAuthentication(v bool) {
	o.EnforceDuringAuthentication = v
}

func (o FIDO2PolicyBackupEligibility) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FIDO2PolicyBackupEligibility) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allow"] = o.Allow
	toSerialize["enforceDuringAuthentication"] = o.EnforceDuringAuthentication
	return toSerialize, nil
}

type NullableFIDO2PolicyBackupEligibility struct {
	value *FIDO2PolicyBackupEligibility
	isSet bool
}

func (v NullableFIDO2PolicyBackupEligibility) Get() *FIDO2PolicyBackupEligibility {
	return v.value
}

func (v *NullableFIDO2PolicyBackupEligibility) Set(val *FIDO2PolicyBackupEligibility) {
	v.value = val
	v.isSet = true
}

func (v NullableFIDO2PolicyBackupEligibility) IsSet() bool {
	return v.isSet
}

func (v *NullableFIDO2PolicyBackupEligibility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFIDO2PolicyBackupEligibility(val *FIDO2PolicyBackupEligibility) *NullableFIDO2PolicyBackupEligibility {
	return &NullableFIDO2PolicyBackupEligibility{value: val, isSet: true}
}

func (v NullableFIDO2PolicyBackupEligibility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFIDO2PolicyBackupEligibility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
