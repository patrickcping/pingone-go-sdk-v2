/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the DeviceAuthenticationPolicyPingIDAllOfMobileApplications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceAuthenticationPolicyPingIDAllOfMobileApplications{}

// DeviceAuthenticationPolicyPingIDAllOfMobileApplications struct for DeviceAuthenticationPolicyPingIDAllOfMobileApplications
type DeviceAuthenticationPolicyPingIDAllOfMobileApplications struct {
	// The application's ID.
	Id                 string                                                             `json:"id"`
	Type               EnumPingIDApplicationType                                          `json:"type"`
	Push               *DeviceAuthenticationPolicyPingIDAllOfMobilePush                   `json:"push,omitempty"`
	PairingKeyLifetime *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime `json:"pairingKeyLifetime,omitempty"`
	PushLimit          *DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit          `json:"pushLimit,omitempty"`
	Otp                *DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1               `json:"otp,omitempty"`
	AutoEnrollment     *DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment     `json:"autoEnrollment,omitempty"`
	// You can set `biometricsEnabled` to true to allow users to use biometric authentication methods (such as fingerprint or facial recognition) for MFA. If set to false, users will not be able to use biometric methods for authentication.
	BiometricsEnabled               *bool                                                                       `json:"biometricsEnabled,omitempty"`
	NewRequestDurationConfiguration *DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration `json:"newRequestDurationConfiguration,omitempty"`
}

// NewDeviceAuthenticationPolicyPingIDAllOfMobileApplications instantiates a new DeviceAuthenticationPolicyPingIDAllOfMobileApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicyPingIDAllOfMobileApplications(id string, type_ EnumPingIDApplicationType) *DeviceAuthenticationPolicyPingIDAllOfMobileApplications {
	this := DeviceAuthenticationPolicyPingIDAllOfMobileApplications{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewDeviceAuthenticationPolicyPingIDAllOfMobileApplicationsWithDefaults instantiates a new DeviceAuthenticationPolicyPingIDAllOfMobileApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyPingIDAllOfMobileApplicationsWithDefaults() *DeviceAuthenticationPolicyPingIDAllOfMobileApplications {
	this := DeviceAuthenticationPolicyPingIDAllOfMobileApplications{}
	return &this
}

// GetId returns the Id field value
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetType() EnumPingIDApplicationType {
	if o == nil {
		var ret EnumPingIDApplicationType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetTypeOk() (*EnumPingIDApplicationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetType(v EnumPingIDApplicationType) {
	o.Type = v
}

// GetPush returns the Push field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPush() DeviceAuthenticationPolicyPingIDAllOfMobilePush {
	if o == nil || IsNil(o.Push) {
		var ret DeviceAuthenticationPolicyPingIDAllOfMobilePush
		return ret
	}
	return *o.Push
}

// GetPushOk returns a tuple with the Push field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPushOk() (*DeviceAuthenticationPolicyPingIDAllOfMobilePush, bool) {
	if o == nil || IsNil(o.Push) {
		return nil, false
	}
	return o.Push, true
}

// HasPush returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasPush() bool {
	if o != nil && !IsNil(o.Push) {
		return true
	}

	return false
}

// SetPush gets a reference to the given DeviceAuthenticationPolicyPingIDAllOfMobilePush and assigns it to the Push field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetPush(v DeviceAuthenticationPolicyPingIDAllOfMobilePush) {
	o.Push = &v
}

// GetPairingKeyLifetime returns the PairingKeyLifetime field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPairingKeyLifetime() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime {
	if o == nil || IsNil(o.PairingKeyLifetime) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime
		return ret
	}
	return *o.PairingKeyLifetime
}

// GetPairingKeyLifetimeOk returns a tuple with the PairingKeyLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPairingKeyLifetimeOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime, bool) {
	if o == nil || IsNil(o.PairingKeyLifetime) {
		return nil, false
	}
	return o.PairingKeyLifetime, true
}

// HasPairingKeyLifetime returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasPairingKeyLifetime() bool {
	if o != nil && !IsNil(o.PairingKeyLifetime) {
		return true
	}

	return false
}

// SetPairingKeyLifetime gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime and assigns it to the PairingKeyLifetime field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetPairingKeyLifetime(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePairingKeyLifetime) {
	o.PairingKeyLifetime = &v
}

// GetPushLimit returns the PushLimit field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPushLimit() DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit {
	if o == nil || IsNil(o.PushLimit) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit
		return ret
	}
	return *o.PushLimit
}

// GetPushLimitOk returns a tuple with the PushLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetPushLimitOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit, bool) {
	if o == nil || IsNil(o.PushLimit) {
		return nil, false
	}
	return o.PushLimit, true
}

// HasPushLimit returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasPushLimit() bool {
	if o != nil && !IsNil(o.PushLimit) {
		return true
	}

	return false
}

// SetPushLimit gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit and assigns it to the PushLimit field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetPushLimit(v DeviceAuthenticationPolicyPingOneMFAAllOfMobilePushLimit) {
	o.PushLimit = &v
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetOtp() DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1 {
	if o == nil || IsNil(o.Otp) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetOtpOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1, bool) {
	if o == nil || IsNil(o.Otp) {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasOtp() bool {
	if o != nil && !IsNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1 and assigns it to the Otp field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetOtp(v DeviceAuthenticationPolicyPingOneMFAAllOfMobileOtp1) {
	o.Otp = &v
}

// GetAutoEnrollment returns the AutoEnrollment field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetAutoEnrollment() DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment {
	if o == nil || IsNil(o.AutoEnrollment) {
		var ret DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment
		return ret
	}
	return *o.AutoEnrollment
}

// GetAutoEnrollmentOk returns a tuple with the AutoEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetAutoEnrollmentOk() (*DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment, bool) {
	if o == nil || IsNil(o.AutoEnrollment) {
		return nil, false
	}
	return o.AutoEnrollment, true
}

// HasAutoEnrollment returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasAutoEnrollment() bool {
	if o != nil && !IsNil(o.AutoEnrollment) {
		return true
	}

	return false
}

// SetAutoEnrollment gets a reference to the given DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment and assigns it to the AutoEnrollment field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetAutoEnrollment(v DeviceAuthenticationPolicyPingOneMFAAllOfMobileAutoEnrollment) {
	o.AutoEnrollment = &v
}

// GetBiometricsEnabled returns the BiometricsEnabled field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetBiometricsEnabled() bool {
	if o == nil || IsNil(o.BiometricsEnabled) {
		var ret bool
		return ret
	}
	return *o.BiometricsEnabled
}

// GetBiometricsEnabledOk returns a tuple with the BiometricsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetBiometricsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BiometricsEnabled) {
		return nil, false
	}
	return o.BiometricsEnabled, true
}

// HasBiometricsEnabled returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasBiometricsEnabled() bool {
	if o != nil && !IsNil(o.BiometricsEnabled) {
		return true
	}

	return false
}

// SetBiometricsEnabled gets a reference to the given bool and assigns it to the BiometricsEnabled field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetBiometricsEnabled(v bool) {
	o.BiometricsEnabled = &v
}

// GetNewRequestDurationConfiguration returns the NewRequestDurationConfiguration field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetNewRequestDurationConfiguration() DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration {
	if o == nil || IsNil(o.NewRequestDurationConfiguration) {
		var ret DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration
		return ret
	}
	return *o.NewRequestDurationConfiguration
}

// GetNewRequestDurationConfigurationOk returns a tuple with the NewRequestDurationConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) GetNewRequestDurationConfigurationOk() (*DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration, bool) {
	if o == nil || IsNil(o.NewRequestDurationConfiguration) {
		return nil, false
	}
	return o.NewRequestDurationConfiguration, true
}

// HasNewRequestDurationConfiguration returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) HasNewRequestDurationConfiguration() bool {
	if o != nil && !IsNil(o.NewRequestDurationConfiguration) {
		return true
	}

	return false
}

// SetNewRequestDurationConfiguration gets a reference to the given DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration and assigns it to the NewRequestDurationConfiguration field.
func (o *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) SetNewRequestDurationConfiguration(v DeviceAuthenticationPolicyPingIDAllOfMobileNewRequestDurationConfiguration) {
	o.NewRequestDurationConfiguration = &v
}

func (o DeviceAuthenticationPolicyPingIDAllOfMobileApplications) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceAuthenticationPolicyPingIDAllOfMobileApplications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	if !IsNil(o.Push) {
		toSerialize["push"] = o.Push
	}
	if !IsNil(o.PairingKeyLifetime) {
		toSerialize["pairingKeyLifetime"] = o.PairingKeyLifetime
	}
	if !IsNil(o.PushLimit) {
		toSerialize["pushLimit"] = o.PushLimit
	}
	if !IsNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	if !IsNil(o.AutoEnrollment) {
		toSerialize["autoEnrollment"] = o.AutoEnrollment
	}
	if !IsNil(o.BiometricsEnabled) {
		toSerialize["biometricsEnabled"] = o.BiometricsEnabled
	}
	if !IsNil(o.NewRequestDurationConfiguration) {
		toSerialize["newRequestDurationConfiguration"] = o.NewRequestDurationConfiguration
	}
	return toSerialize, nil
}

type NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications struct {
	value *DeviceAuthenticationPolicyPingIDAllOfMobileApplications
	isSet bool
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) Get() *DeviceAuthenticationPolicyPingIDAllOfMobileApplications {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) Set(val *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications(val *DeviceAuthenticationPolicyPingIDAllOfMobileApplications) *NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications {
	return &NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicyPingIDAllOfMobileApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
