/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the FIDO2PolicyUserPresenceTimeout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FIDO2PolicyUserPresenceTimeout{}

// FIDO2PolicyUserPresenceTimeout Used to specify the amount of time the user has to perform a user presence gesture with their FIDO device before the request expires. The defined timeout applies also to the pairing of the device. Note that the information is provided as a hint to the authenticator so the actual time given may differ from what you defined.
type FIDO2PolicyUserPresenceTimeout struct {
	// The amount of time a user presence gesture will be accepted for the authentication request. Minimum is one minute, maximum is ten minutes. Can be set in minutes or seconds.
	Duration *int32        `json:"duration,omitempty"`
	TimeUnit *EnumTimeUnit `json:"timeUnit,omitempty"`
}

// NewFIDO2PolicyUserPresenceTimeout instantiates a new FIDO2PolicyUserPresenceTimeout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFIDO2PolicyUserPresenceTimeout() *FIDO2PolicyUserPresenceTimeout {
	this := FIDO2PolicyUserPresenceTimeout{}
	return &this
}

// NewFIDO2PolicyUserPresenceTimeoutWithDefaults instantiates a new FIDO2PolicyUserPresenceTimeout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFIDO2PolicyUserPresenceTimeoutWithDefaults() *FIDO2PolicyUserPresenceTimeout {
	this := FIDO2PolicyUserPresenceTimeout{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *FIDO2PolicyUserPresenceTimeout) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyUserPresenceTimeout) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *FIDO2PolicyUserPresenceTimeout) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *FIDO2PolicyUserPresenceTimeout) SetDuration(v int32) {
	o.Duration = &v
}

// GetTimeUnit returns the TimeUnit field value if set, zero value otherwise.
func (o *FIDO2PolicyUserPresenceTimeout) GetTimeUnit() EnumTimeUnit {
	if o == nil || IsNil(o.TimeUnit) {
		var ret EnumTimeUnit
		return ret
	}
	return *o.TimeUnit
}

// GetTimeUnitOk returns a tuple with the TimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyUserPresenceTimeout) GetTimeUnitOk() (*EnumTimeUnit, bool) {
	if o == nil || IsNil(o.TimeUnit) {
		return nil, false
	}
	return o.TimeUnit, true
}

// HasTimeUnit returns a boolean if a field has been set.
func (o *FIDO2PolicyUserPresenceTimeout) HasTimeUnit() bool {
	if o != nil && !IsNil(o.TimeUnit) {
		return true
	}

	return false
}

// SetTimeUnit gets a reference to the given EnumTimeUnit and assigns it to the TimeUnit field.
func (o *FIDO2PolicyUserPresenceTimeout) SetTimeUnit(v EnumTimeUnit) {
	o.TimeUnit = &v
}

func (o FIDO2PolicyUserPresenceTimeout) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FIDO2PolicyUserPresenceTimeout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.TimeUnit) {
		toSerialize["timeUnit"] = o.TimeUnit
	}
	return toSerialize, nil
}

type NullableFIDO2PolicyUserPresenceTimeout struct {
	value *FIDO2PolicyUserPresenceTimeout
	isSet bool
}

func (v NullableFIDO2PolicyUserPresenceTimeout) Get() *FIDO2PolicyUserPresenceTimeout {
	return v.value
}

func (v *NullableFIDO2PolicyUserPresenceTimeout) Set(val *FIDO2PolicyUserPresenceTimeout) {
	v.value = val
	v.isSet = true
}

func (v NullableFIDO2PolicyUserPresenceTimeout) IsSet() bool {
	return v.isSet
}

func (v *NullableFIDO2PolicyUserPresenceTimeout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFIDO2PolicyUserPresenceTimeout(val *FIDO2PolicyUserPresenceTimeout) *NullableFIDO2PolicyUserPresenceTimeout {
	return &NullableFIDO2PolicyUserPresenceTimeout{value: val, isSet: true}
}

func (v NullableFIDO2PolicyUserPresenceTimeout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFIDO2PolicyUserPresenceTimeout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
