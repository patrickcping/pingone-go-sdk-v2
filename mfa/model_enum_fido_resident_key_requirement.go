/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
	"fmt"
)

// EnumFIDOResidentKeyRequirement Used to enable resident keys. Value can be `DISCOURAGED` or `REQUIRED`.
type EnumFIDOResidentKeyRequirement string

// List of EnumFIDOResidentKeyRequirement
const (
	ENUMFIDORESIDENTKEYREQUIREMENT_DISCOURAGED EnumFIDOResidentKeyRequirement = "DISCOURAGED"
	ENUMFIDORESIDENTKEYREQUIREMENT_REQUIRED    EnumFIDOResidentKeyRequirement = "REQUIRED"
)

// All allowed values of EnumFIDOResidentKeyRequirement enum
var AllowedEnumFIDOResidentKeyRequirementEnumValues = []EnumFIDOResidentKeyRequirement{
	"DISCOURAGED",
	"REQUIRED",
}

func (v *EnumFIDOResidentKeyRequirement) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFIDOResidentKeyRequirement(value)
	for _, existing := range AllowedEnumFIDOResidentKeyRequirementEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumFIDOResidentKeyRequirement(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumFIDOResidentKeyRequirementFromValue returns a pointer to a valid EnumFIDOResidentKeyRequirement
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFIDOResidentKeyRequirementFromValue(v string) (*EnumFIDOResidentKeyRequirement, error) {
	ev := EnumFIDOResidentKeyRequirement(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFIDOResidentKeyRequirement: valid values are %v", v, AllowedEnumFIDOResidentKeyRequirementEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFIDOResidentKeyRequirement) IsValid() bool {
	for _, existing := range AllowedEnumFIDOResidentKeyRequirementEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFIDOResidentKeyRequirement value
func (v EnumFIDOResidentKeyRequirement) Ptr() *EnumFIDOResidentKeyRequirement {
	return &v
}

type NullableEnumFIDOResidentKeyRequirement struct {
	value *EnumFIDOResidentKeyRequirement
	isSet bool
}

func (v NullableEnumFIDOResidentKeyRequirement) Get() *EnumFIDOResidentKeyRequirement {
	return v.value
}

func (v *NullableEnumFIDOResidentKeyRequirement) Set(val *EnumFIDOResidentKeyRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFIDOResidentKeyRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFIDOResidentKeyRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFIDOResidentKeyRequirement(val *EnumFIDOResidentKeyRequirement) *NullableEnumFIDOResidentKeyRequirement {
	return &NullableEnumFIDOResidentKeyRequirement{value: val, isSet: true}
}

func (v NullableEnumFIDOResidentKeyRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFIDOResidentKeyRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
