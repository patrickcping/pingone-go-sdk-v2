/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the MFASettingsLockout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MFASettingsLockout{}

// MFASettingsLockout An object that contains lockout settings.
type MFASettingsLockout struct {
	// An integer that defines the maximum number of incorrect authentication attempts before the account is locked.
	FailureCount int32 `json:"failureCount"`
	// An integer that defines the number of seconds to keep the account in a locked state.
	DurationSeconds *int32 `json:"durationSeconds,omitempty"`
}

// NewMFASettingsLockout instantiates a new MFASettingsLockout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMFASettingsLockout(failureCount int32) *MFASettingsLockout {
	this := MFASettingsLockout{}
	this.FailureCount = failureCount
	return &this
}

// NewMFASettingsLockoutWithDefaults instantiates a new MFASettingsLockout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFASettingsLockoutWithDefaults() *MFASettingsLockout {
	this := MFASettingsLockout{}
	return &this
}

// GetFailureCount returns the FailureCount field value
func (o *MFASettingsLockout) GetFailureCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailureCount
}

// GetFailureCountOk returns a tuple with the FailureCount field value
// and a boolean to check if the value has been set.
func (o *MFASettingsLockout) GetFailureCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureCount, true
}

// SetFailureCount sets field value
func (o *MFASettingsLockout) SetFailureCount(v int32) {
	o.FailureCount = v
}

// GetDurationSeconds returns the DurationSeconds field value if set, zero value otherwise.
func (o *MFASettingsLockout) GetDurationSeconds() int32 {
	if o == nil || IsNil(o.DurationSeconds) {
		var ret int32
		return ret
	}
	return *o.DurationSeconds
}

// GetDurationSecondsOk returns a tuple with the DurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MFASettingsLockout) GetDurationSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationSeconds) {
		return nil, false
	}
	return o.DurationSeconds, true
}

// HasDurationSeconds returns a boolean if a field has been set.
func (o *MFASettingsLockout) HasDurationSeconds() bool {
	if o != nil && !IsNil(o.DurationSeconds) {
		return true
	}

	return false
}

// SetDurationSeconds gets a reference to the given int32 and assigns it to the DurationSeconds field.
func (o *MFASettingsLockout) SetDurationSeconds(v int32) {
	o.DurationSeconds = &v
}

func (o MFASettingsLockout) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MFASettingsLockout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["failureCount"] = o.FailureCount
	if !IsNil(o.DurationSeconds) {
		toSerialize["durationSeconds"] = o.DurationSeconds
	}
	return toSerialize, nil
}

type NullableMFASettingsLockout struct {
	value *MFASettingsLockout
	isSet bool
}

func (v NullableMFASettingsLockout) Get() *MFASettingsLockout {
	return v.value
}

func (v *NullableMFASettingsLockout) Set(val *MFASettingsLockout) {
	v.value = val
	v.isSet = true
}

func (v NullableMFASettingsLockout) IsSet() bool {
	return v.isSet
}

func (v *NullableMFASettingsLockout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMFASettingsLockout(val *MFASettingsLockout) *NullableMFASettingsLockout {
	return &NullableMFASettingsLockout{value: val, isSet: true}
}

func (v NullableMFASettingsLockout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMFASettingsLockout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
