/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// checks if the FIDO2PolicyUserVerification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FIDO2PolicyUserVerification{}

// FIDO2PolicyUserVerification Used to control whether the user must perform a gesture (such as a public key credential, fingerprint scan, or a PIN code) when registering or authenticating with their FIDO device.
type FIDO2PolicyUserVerification struct {
	// Set to `true` if you want the device characteristics related to user verification to be checked again at each authentication attempt and not just once during registration. Set to `false` to have them checked only at registration.
	EnforceDuringAuthentication bool                                  `json:"enforceDuringAuthentication"`
	Option                      EnumFIDO2PolicyUserVerificationOption `json:"option"`
}

// NewFIDO2PolicyUserVerification instantiates a new FIDO2PolicyUserVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFIDO2PolicyUserVerification(enforceDuringAuthentication bool, option EnumFIDO2PolicyUserVerificationOption) *FIDO2PolicyUserVerification {
	this := FIDO2PolicyUserVerification{}
	this.EnforceDuringAuthentication = enforceDuringAuthentication
	this.Option = option
	return &this
}

// NewFIDO2PolicyUserVerificationWithDefaults instantiates a new FIDO2PolicyUserVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFIDO2PolicyUserVerificationWithDefaults() *FIDO2PolicyUserVerification {
	this := FIDO2PolicyUserVerification{}
	return &this
}

// GetEnforceDuringAuthentication returns the EnforceDuringAuthentication field value
func (o *FIDO2PolicyUserVerification) GetEnforceDuringAuthentication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnforceDuringAuthentication
}

// GetEnforceDuringAuthenticationOk returns a tuple with the EnforceDuringAuthentication field value
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyUserVerification) GetEnforceDuringAuthenticationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnforceDuringAuthentication, true
}

// SetEnforceDuringAuthentication sets field value
func (o *FIDO2PolicyUserVerification) SetEnforceDuringAuthentication(v bool) {
	o.EnforceDuringAuthentication = v
}

// GetOption returns the Option field value
func (o *FIDO2PolicyUserVerification) GetOption() EnumFIDO2PolicyUserVerificationOption {
	if o == nil {
		var ret EnumFIDO2PolicyUserVerificationOption
		return ret
	}

	return o.Option
}

// GetOptionOk returns a tuple with the Option field value
// and a boolean to check if the value has been set.
func (o *FIDO2PolicyUserVerification) GetOptionOk() (*EnumFIDO2PolicyUserVerificationOption, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Option, true
}

// SetOption sets field value
func (o *FIDO2PolicyUserVerification) SetOption(v EnumFIDO2PolicyUserVerificationOption) {
	o.Option = v
}

func (o FIDO2PolicyUserVerification) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FIDO2PolicyUserVerification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enforceDuringAuthentication"] = o.EnforceDuringAuthentication
	toSerialize["option"] = o.Option
	return toSerialize, nil
}

type NullableFIDO2PolicyUserVerification struct {
	value *FIDO2PolicyUserVerification
	isSet bool
}

func (v NullableFIDO2PolicyUserVerification) Get() *FIDO2PolicyUserVerification {
	return v.value
}

func (v *NullableFIDO2PolicyUserVerification) Set(val *FIDO2PolicyUserVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableFIDO2PolicyUserVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableFIDO2PolicyUserVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFIDO2PolicyUserVerification(val *FIDO2PolicyUserVerification) *NullableFIDO2PolicyUserVerification {
	return &NullableFIDO2PolicyUserVerification{value: val, isSet: true}
}

func (v NullableFIDO2PolicyUserVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFIDO2PolicyUserVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
