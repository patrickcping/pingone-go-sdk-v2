/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
	"fmt"
)

// EnumMFADevicePolicyMobileExtraVerification Specifies the level of further verification when deviceAuthorization is enabled. The PingOne platform performs an extra verification check by sending a “silent” push notification to the customer native application, and receives a confirmation in return.
type EnumMFADevicePolicyMobileExtraVerification string

// List of EnumMFADevicePolicyMobileExtraVerification
const (
	ENUMMFADEVICEPOLICYMOBILEEXTRAVERIFICATION_PERMISSIVE  EnumMFADevicePolicyMobileExtraVerification = "permissive"
	ENUMMFADEVICEPOLICYMOBILEEXTRAVERIFICATION_RESTRICTIVE EnumMFADevicePolicyMobileExtraVerification = "restrictive"
)

// All allowed values of EnumMFADevicePolicyMobileExtraVerification enum
var AllowedEnumMFADevicePolicyMobileExtraVerificationEnumValues = []EnumMFADevicePolicyMobileExtraVerification{
	"permissive",
	"restrictive",
}

func (v *EnumMFADevicePolicyMobileExtraVerification) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumMFADevicePolicyMobileExtraVerification(value)
	for _, existing := range AllowedEnumMFADevicePolicyMobileExtraVerificationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumMFADevicePolicyMobileExtraVerification(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumMFADevicePolicyMobileExtraVerificationFromValue returns a pointer to a valid EnumMFADevicePolicyMobileExtraVerification
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumMFADevicePolicyMobileExtraVerificationFromValue(v string) (*EnumMFADevicePolicyMobileExtraVerification, error) {
	ev := EnumMFADevicePolicyMobileExtraVerification(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumMFADevicePolicyMobileExtraVerification: valid values are %v", v, AllowedEnumMFADevicePolicyMobileExtraVerificationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumMFADevicePolicyMobileExtraVerification) IsValid() bool {
	for _, existing := range AllowedEnumMFADevicePolicyMobileExtraVerificationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumMFADevicePolicyMobileExtraVerification value
func (v EnumMFADevicePolicyMobileExtraVerification) Ptr() *EnumMFADevicePolicyMobileExtraVerification {
	return &v
}

type NullableEnumMFADevicePolicyMobileExtraVerification struct {
	value *EnumMFADevicePolicyMobileExtraVerification
	isSet bool
}

func (v NullableEnumMFADevicePolicyMobileExtraVerification) Get() *EnumMFADevicePolicyMobileExtraVerification {
	return v.value
}

func (v *NullableEnumMFADevicePolicyMobileExtraVerification) Set(val *EnumMFADevicePolicyMobileExtraVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumMFADevicePolicyMobileExtraVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumMFADevicePolicyMobileExtraVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumMFADevicePolicyMobileExtraVerification(val *EnumMFADevicePolicyMobileExtraVerification) *NullableEnumMFADevicePolicyMobileExtraVerification {
	return &NullableEnumMFADevicePolicyMobileExtraVerification{value: val, isSet: true}
}

func (v NullableEnumMFADevicePolicyMobileExtraVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumMFADevicePolicyMobileExtraVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
