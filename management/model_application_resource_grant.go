/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the ApplicationResourceGrant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationResourceGrant{}

// ApplicationResourceGrant struct for ApplicationResourceGrant
type ApplicationResourceGrant struct {
	Links       *map[string]LinksHATEOASValue        `json:"_links,omitempty"`
	Application *ApplicationResourceGrantApplication `json:"application,omitempty"`
	// The time the resource was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// A string that specifies the application resource grant ID.
	Id       *string                               `json:"id,omitempty"`
	Resource ApplicationResourceGrantResource      `json:"resource"`
	Scopes   []ApplicationResourceGrantScopesInner `json:"scopes"`
	// The time the resource was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewApplicationResourceGrant instantiates a new ApplicationResourceGrant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationResourceGrant(resource ApplicationResourceGrantResource, scopes []ApplicationResourceGrantScopesInner) *ApplicationResourceGrant {
	this := ApplicationResourceGrant{}
	this.Resource = resource
	this.Scopes = scopes
	return &this
}

// NewApplicationResourceGrantWithDefaults instantiates a new ApplicationResourceGrant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationResourceGrantWithDefaults() *ApplicationResourceGrant {
	this := ApplicationResourceGrant{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApplicationResourceGrant) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApplicationResourceGrant) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *ApplicationResourceGrant) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *ApplicationResourceGrant) GetApplication() ApplicationResourceGrantApplication {
	if o == nil || IsNil(o.Application) {
		var ret ApplicationResourceGrantApplication
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetApplicationOk() (*ApplicationResourceGrantApplication, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *ApplicationResourceGrant) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given ApplicationResourceGrantApplication and assigns it to the Application field.
func (o *ApplicationResourceGrant) SetApplication(v ApplicationResourceGrantApplication) {
	o.Application = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApplicationResourceGrant) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApplicationResourceGrant) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ApplicationResourceGrant) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationResourceGrant) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationResourceGrant) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationResourceGrant) SetId(v string) {
	o.Id = &v
}

// GetResource returns the Resource field value
func (o *ApplicationResourceGrant) GetResource() ApplicationResourceGrantResource {
	if o == nil {
		var ret ApplicationResourceGrantResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetResourceOk() (*ApplicationResourceGrantResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *ApplicationResourceGrant) SetResource(v ApplicationResourceGrantResource) {
	o.Resource = v
}

// GetScopes returns the Scopes field value
func (o *ApplicationResourceGrant) GetScopes() []ApplicationResourceGrantScopesInner {
	if o == nil {
		var ret []ApplicationResourceGrantScopesInner
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetScopesOk() ([]ApplicationResourceGrantScopesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *ApplicationResourceGrant) SetScopes(v []ApplicationResourceGrantScopesInner) {
	o.Scopes = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApplicationResourceGrant) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResourceGrant) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApplicationResourceGrant) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ApplicationResourceGrant) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ApplicationResourceGrant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationResourceGrant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["resource"] = o.Resource
	toSerialize["scopes"] = o.Scopes
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableApplicationResourceGrant struct {
	value *ApplicationResourceGrant
	isSet bool
}

func (v NullableApplicationResourceGrant) Get() *ApplicationResourceGrant {
	return v.value
}

func (v *NullableApplicationResourceGrant) Set(val *ApplicationResourceGrant) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationResourceGrant) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationResourceGrant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationResourceGrant(val *ApplicationResourceGrant) *NullableApplicationResourceGrant {
	return &NullableApplicationResourceGrant{value: val, isSet: true}
}

func (v NullableApplicationResourceGrant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationResourceGrant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
