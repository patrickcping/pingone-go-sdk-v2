/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo{}

// NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo Contains the \"reply-to\" information to use for the notifications.
type NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo struct {
	// The \"reply-to\" name to use in the notifications that are sent.
	Name *string `json:"name,omitempty"`
	// The \"reply-to\" address to use in the notifications that are sent.
	Address *string `json:"address,omitempty"`
}

// NewNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo instantiates a new NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo() *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo {
	this := NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo{}
	return &this
}

// NewNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyToWithDefaults instantiates a new NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyToWithDefaults() *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo {
	this := NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) SetAddress(v string) {
	o.Address = &v
}

func (o NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo struct {
	value *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo
	isSet bool
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) Get() *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo {
	return v.value
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) Set(val *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo(val *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) *NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo {
	return &NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo{value: val, isSet: true}
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
