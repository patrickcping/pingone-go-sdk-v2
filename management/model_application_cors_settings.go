/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationCorsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationCorsSettings{}

// ApplicationCorsSettings Allows customization of how the Authorization and Authentication APIs interact with CORS requests that reference the application.  If omitted, the application allows CORS requests from any origin except for operations that expose sensitive information (e.g. `/as/authorize` and `/as/token`).  This is legacy behavior, and it is recommended that applications migrate to include specific `corsSettings`.
type ApplicationCorsSettings struct {
	Behavior EnumApplicationCorsSettingsBehavior `json:"behavior"`
	// Must be non-empty when `corsSettings.behavior` is `ALLOW_SPECIFIC_ORIGINS` and must be omitted or empty when `corsSettings.behavior` is `ALLOW_NO_ORIGINS`.  Limited to 20 values.  Values are the origins from which CORS requests to the Authorization and Authentication APIs are allowed.  Each value is an `http` or `https` URL without a path.  The host may be a domain name (including `localhost`), or an IPv4 address.  Subdomains may use the wildcard (*) to match any string.
	Origins []string `json:"origins,omitempty"`
}

// NewApplicationCorsSettings instantiates a new ApplicationCorsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationCorsSettings(behavior EnumApplicationCorsSettingsBehavior) *ApplicationCorsSettings {
	this := ApplicationCorsSettings{}
	this.Behavior = behavior
	return &this
}

// NewApplicationCorsSettingsWithDefaults instantiates a new ApplicationCorsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationCorsSettingsWithDefaults() *ApplicationCorsSettings {
	this := ApplicationCorsSettings{}
	return &this
}

// GetBehavior returns the Behavior field value
func (o *ApplicationCorsSettings) GetBehavior() EnumApplicationCorsSettingsBehavior {
	if o == nil {
		var ret EnumApplicationCorsSettingsBehavior
		return ret
	}

	return o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value
// and a boolean to check if the value has been set.
func (o *ApplicationCorsSettings) GetBehaviorOk() (*EnumApplicationCorsSettingsBehavior, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Behavior, true
}

// SetBehavior sets field value
func (o *ApplicationCorsSettings) SetBehavior(v EnumApplicationCorsSettingsBehavior) {
	o.Behavior = v
}

// GetOrigins returns the Origins field value if set, zero value otherwise.
func (o *ApplicationCorsSettings) GetOrigins() []string {
	if o == nil || IsNil(o.Origins) {
		var ret []string
		return ret
	}
	return o.Origins
}

// GetOriginsOk returns a tuple with the Origins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationCorsSettings) GetOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.Origins) {
		return nil, false
	}
	return o.Origins, true
}

// HasOrigins returns a boolean if a field has been set.
func (o *ApplicationCorsSettings) HasOrigins() bool {
	if o != nil && !IsNil(o.Origins) {
		return true
	}

	return false
}

// SetOrigins gets a reference to the given []string and assigns it to the Origins field.
func (o *ApplicationCorsSettings) SetOrigins(v []string) {
	o.Origins = v
}

func (o ApplicationCorsSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationCorsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["behavior"] = o.Behavior
	if !IsNil(o.Origins) {
		toSerialize["origins"] = o.Origins
	}
	return toSerialize, nil
}

type NullableApplicationCorsSettings struct {
	value *ApplicationCorsSettings
	isSet bool
}

func (v NullableApplicationCorsSettings) Get() *ApplicationCorsSettings {
	return v.value
}

func (v *NullableApplicationCorsSettings) Set(val *ApplicationCorsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationCorsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationCorsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationCorsSettings(val *ApplicationCorsSettings) *NullableApplicationCorsSettings {
	return &NullableApplicationCorsSettings{value: val, isSet: true}
}

func (v NullableApplicationCorsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationCorsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
