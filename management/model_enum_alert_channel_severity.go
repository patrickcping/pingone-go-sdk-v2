/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumAlertChannelSeverity Alert channel severity. Possible values are `INFO`, `WARNING`, and `ERROR`.
type EnumAlertChannelSeverity string

// List of EnumAlertChannelSeverity
const (
	ENUMALERTCHANNELSEVERITY_INFO    EnumAlertChannelSeverity = "INFO"
	ENUMALERTCHANNELSEVERITY_WARNING EnumAlertChannelSeverity = "WARNING"
	ENUMALERTCHANNELSEVERITY_ERROR   EnumAlertChannelSeverity = "ERROR"
)

// All allowed values of EnumAlertChannelSeverity enum
var AllowedEnumAlertChannelSeverityEnumValues = []EnumAlertChannelSeverity{
	"INFO",
	"WARNING",
	"ERROR",
}

func (v *EnumAlertChannelSeverity) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumAlertChannelSeverity(value)
	for _, existing := range AllowedEnumAlertChannelSeverityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumAlertChannelSeverity(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumAlertChannelSeverityFromValue returns a pointer to a valid EnumAlertChannelSeverity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumAlertChannelSeverityFromValue(v string) (*EnumAlertChannelSeverity, error) {
	ev := EnumAlertChannelSeverity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumAlertChannelSeverity: valid values are %v", v, AllowedEnumAlertChannelSeverityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumAlertChannelSeverity) IsValid() bool {
	for _, existing := range AllowedEnumAlertChannelSeverityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumAlertChannelSeverity value
func (v EnumAlertChannelSeverity) Ptr() *EnumAlertChannelSeverity {
	return &v
}

type NullableEnumAlertChannelSeverity struct {
	value *EnumAlertChannelSeverity
	isSet bool
}

func (v NullableEnumAlertChannelSeverity) Get() *EnumAlertChannelSeverity {
	return v.value
}

func (v *NullableEnumAlertChannelSeverity) Set(val *EnumAlertChannelSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumAlertChannelSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumAlertChannelSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumAlertChannelSeverity(val *EnumAlertChannelSeverity) *NullableEnumAlertChannelSeverity {
	return &NullableEnumAlertChannelSeverity{value: val, isSet: true}
}

func (v NullableEnumAlertChannelSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumAlertChannelSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
