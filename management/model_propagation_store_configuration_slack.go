/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the PropagationStoreConfigurationSlack type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropagationStoreConfigurationSlack{}

// PropagationStoreConfigurationSlack struct for PropagationStoreConfigurationSlack
type PropagationStoreConfigurationSlack struct {
	// Whether or not users are allowed to be created.
	CREATE_USERS *bool `json:"CREATE_USERS,omitempty"`
	// Whether or not users are allowed to be deprovisioned (removed) following action specified in `REMOVE_ACTION`.
	DEPROVISION_USERS *bool `json:"DEPROVISION_USERS,omitempty"`
	// Whether or not users are allowed to be disabled. Must be set to `true`.
	DISABLE_USERS *bool `json:"DISABLE_USERS,omitempty"`
	// OAuth 2 access token.
	OAUTH_ACCESS_TOKEN     string                                            `json:"OAUTH_ACCESS_TOKEN"`
	REMOVE_ACTION          *EnumPropagationStoreTypeRemoveActionDisable      `json:"REMOVE_ACTION,omitempty"`
	UNIQUE_USER_IDENTIFIER EnumPropagationStoreTypeSlackUniqueUserIdentifier `json:"UNIQUE_USER_IDENTIFIER"`
	// Whether or not users are allowed to be updated.
	UPDATE_USERS *bool `json:"UPDATE_USERS,omitempty"`
}

// NewPropagationStoreConfigurationSlack instantiates a new PropagationStoreConfigurationSlack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropagationStoreConfigurationSlack(oAUTHACCESSTOKEN string, uNIQUEUSERIDENTIFIER EnumPropagationStoreTypeSlackUniqueUserIdentifier) *PropagationStoreConfigurationSlack {
	this := PropagationStoreConfigurationSlack{}
	this.OAUTH_ACCESS_TOKEN = oAUTHACCESSTOKEN
	this.UNIQUE_USER_IDENTIFIER = uNIQUEUSERIDENTIFIER
	return &this
}

// NewPropagationStoreConfigurationSlackWithDefaults instantiates a new PropagationStoreConfigurationSlack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropagationStoreConfigurationSlackWithDefaults() *PropagationStoreConfigurationSlack {
	this := PropagationStoreConfigurationSlack{}
	return &this
}

// GetCREATE_USERS returns the CREATE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSlack) GetCREATE_USERS() bool {
	if o == nil || IsNil(o.CREATE_USERS) {
		var ret bool
		return ret
	}
	return *o.CREATE_USERS
}

// GetCREATE_USERSOk returns a tuple with the CREATE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetCREATE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.CREATE_USERS) {
		return nil, false
	}
	return o.CREATE_USERS, true
}

// HasCREATE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSlack) HasCREATE_USERS() bool {
	if o != nil && !IsNil(o.CREATE_USERS) {
		return true
	}

	return false
}

// SetCREATE_USERS gets a reference to the given bool and assigns it to the CREATE_USERS field.
func (o *PropagationStoreConfigurationSlack) SetCREATE_USERS(v bool) {
	o.CREATE_USERS = &v
}

// GetDEPROVISION_USERS returns the DEPROVISION_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSlack) GetDEPROVISION_USERS() bool {
	if o == nil || IsNil(o.DEPROVISION_USERS) {
		var ret bool
		return ret
	}
	return *o.DEPROVISION_USERS
}

// GetDEPROVISION_USERSOk returns a tuple with the DEPROVISION_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetDEPROVISION_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.DEPROVISION_USERS) {
		return nil, false
	}
	return o.DEPROVISION_USERS, true
}

// HasDEPROVISION_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSlack) HasDEPROVISION_USERS() bool {
	if o != nil && !IsNil(o.DEPROVISION_USERS) {
		return true
	}

	return false
}

// SetDEPROVISION_USERS gets a reference to the given bool and assigns it to the DEPROVISION_USERS field.
func (o *PropagationStoreConfigurationSlack) SetDEPROVISION_USERS(v bool) {
	o.DEPROVISION_USERS = &v
}

// GetDISABLE_USERS returns the DISABLE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSlack) GetDISABLE_USERS() bool {
	if o == nil || IsNil(o.DISABLE_USERS) {
		var ret bool
		return ret
	}
	return *o.DISABLE_USERS
}

// GetDISABLE_USERSOk returns a tuple with the DISABLE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetDISABLE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.DISABLE_USERS) {
		return nil, false
	}
	return o.DISABLE_USERS, true
}

// HasDISABLE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSlack) HasDISABLE_USERS() bool {
	if o != nil && !IsNil(o.DISABLE_USERS) {
		return true
	}

	return false
}

// SetDISABLE_USERS gets a reference to the given bool and assigns it to the DISABLE_USERS field.
func (o *PropagationStoreConfigurationSlack) SetDISABLE_USERS(v bool) {
	o.DISABLE_USERS = &v
}

// GetOAUTH_ACCESS_TOKEN returns the OAUTH_ACCESS_TOKEN field value
func (o *PropagationStoreConfigurationSlack) GetOAUTH_ACCESS_TOKEN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OAUTH_ACCESS_TOKEN
}

// GetOAUTH_ACCESS_TOKENOk returns a tuple with the OAUTH_ACCESS_TOKEN field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetOAUTH_ACCESS_TOKENOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OAUTH_ACCESS_TOKEN, true
}

// SetOAUTH_ACCESS_TOKEN sets field value
func (o *PropagationStoreConfigurationSlack) SetOAUTH_ACCESS_TOKEN(v string) {
	o.OAUTH_ACCESS_TOKEN = v
}

// GetREMOVE_ACTION returns the REMOVE_ACTION field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSlack) GetREMOVE_ACTION() EnumPropagationStoreTypeRemoveActionDisable {
	if o == nil || IsNil(o.REMOVE_ACTION) {
		var ret EnumPropagationStoreTypeRemoveActionDisable
		return ret
	}
	return *o.REMOVE_ACTION
}

// GetREMOVE_ACTIONOk returns a tuple with the REMOVE_ACTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetREMOVE_ACTIONOk() (*EnumPropagationStoreTypeRemoveActionDisable, bool) {
	if o == nil || IsNil(o.REMOVE_ACTION) {
		return nil, false
	}
	return o.REMOVE_ACTION, true
}

// HasREMOVE_ACTION returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSlack) HasREMOVE_ACTION() bool {
	if o != nil && !IsNil(o.REMOVE_ACTION) {
		return true
	}

	return false
}

// SetREMOVE_ACTION gets a reference to the given EnumPropagationStoreTypeRemoveActionDisable and assigns it to the REMOVE_ACTION field.
func (o *PropagationStoreConfigurationSlack) SetREMOVE_ACTION(v EnumPropagationStoreTypeRemoveActionDisable) {
	o.REMOVE_ACTION = &v
}

// GetUNIQUE_USER_IDENTIFIER returns the UNIQUE_USER_IDENTIFIER field value
func (o *PropagationStoreConfigurationSlack) GetUNIQUE_USER_IDENTIFIER() EnumPropagationStoreTypeSlackUniqueUserIdentifier {
	if o == nil {
		var ret EnumPropagationStoreTypeSlackUniqueUserIdentifier
		return ret
	}

	return o.UNIQUE_USER_IDENTIFIER
}

// GetUNIQUE_USER_IDENTIFIEROk returns a tuple with the UNIQUE_USER_IDENTIFIER field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetUNIQUE_USER_IDENTIFIEROk() (*EnumPropagationStoreTypeSlackUniqueUserIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UNIQUE_USER_IDENTIFIER, true
}

// SetUNIQUE_USER_IDENTIFIER sets field value
func (o *PropagationStoreConfigurationSlack) SetUNIQUE_USER_IDENTIFIER(v EnumPropagationStoreTypeSlackUniqueUserIdentifier) {
	o.UNIQUE_USER_IDENTIFIER = v
}

// GetUPDATE_USERS returns the UPDATE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSlack) GetUPDATE_USERS() bool {
	if o == nil || IsNil(o.UPDATE_USERS) {
		var ret bool
		return ret
	}
	return *o.UPDATE_USERS
}

// GetUPDATE_USERSOk returns a tuple with the UPDATE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSlack) GetUPDATE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.UPDATE_USERS) {
		return nil, false
	}
	return o.UPDATE_USERS, true
}

// HasUPDATE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSlack) HasUPDATE_USERS() bool {
	if o != nil && !IsNil(o.UPDATE_USERS) {
		return true
	}

	return false
}

// SetUPDATE_USERS gets a reference to the given bool and assigns it to the UPDATE_USERS field.
func (o *PropagationStoreConfigurationSlack) SetUPDATE_USERS(v bool) {
	o.UPDATE_USERS = &v
}

func (o PropagationStoreConfigurationSlack) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropagationStoreConfigurationSlack) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CREATE_USERS) {
		toSerialize["CREATE_USERS"] = o.CREATE_USERS
	}
	if !IsNil(o.DEPROVISION_USERS) {
		toSerialize["DEPROVISION_USERS"] = o.DEPROVISION_USERS
	}
	if !IsNil(o.DISABLE_USERS) {
		toSerialize["DISABLE_USERS"] = o.DISABLE_USERS
	}
	toSerialize["OAUTH_ACCESS_TOKEN"] = o.OAUTH_ACCESS_TOKEN
	if !IsNil(o.REMOVE_ACTION) {
		toSerialize["REMOVE_ACTION"] = o.REMOVE_ACTION
	}
	toSerialize["UNIQUE_USER_IDENTIFIER"] = o.UNIQUE_USER_IDENTIFIER
	if !IsNil(o.UPDATE_USERS) {
		toSerialize["UPDATE_USERS"] = o.UPDATE_USERS
	}
	return toSerialize, nil
}

type NullablePropagationStoreConfigurationSlack struct {
	value *PropagationStoreConfigurationSlack
	isSet bool
}

func (v NullablePropagationStoreConfigurationSlack) Get() *PropagationStoreConfigurationSlack {
	return v.value
}

func (v *NullablePropagationStoreConfigurationSlack) Set(val *PropagationStoreConfigurationSlack) {
	v.value = val
	v.isSet = true
}

func (v NullablePropagationStoreConfigurationSlack) IsSet() bool {
	return v.isSet
}

func (v *NullablePropagationStoreConfigurationSlack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropagationStoreConfigurationSlack(val *PropagationStoreConfigurationSlack) *NullablePropagationStoreConfigurationSlack {
	return &NullablePropagationStoreConfigurationSlack{value: val, isSet: true}
}

func (v NullablePropagationStoreConfigurationSlack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropagationStoreConfigurationSlack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
