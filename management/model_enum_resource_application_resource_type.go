/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumResourceApplicationResourceType The application resource's parent type. Options are `PING_ONE_RESOURCE`.
type EnumResourceApplicationResourceType string

// List of EnumResourceApplicationResourceType
const (
	ENUMRESOURCEAPPLICATIONRESOURCETYPE_PING_ONE_RESOURCE EnumResourceApplicationResourceType = "PING_ONE_RESOURCE"
)

// All allowed values of EnumResourceApplicationResourceType enum
var AllowedEnumResourceApplicationResourceTypeEnumValues = []EnumResourceApplicationResourceType{
	"PING_ONE_RESOURCE",
}

func (v *EnumResourceApplicationResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumResourceApplicationResourceType(value)
	for _, existing := range AllowedEnumResourceApplicationResourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumResourceApplicationResourceType(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumResourceApplicationResourceTypeFromValue returns a pointer to a valid EnumResourceApplicationResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumResourceApplicationResourceTypeFromValue(v string) (*EnumResourceApplicationResourceType, error) {
	ev := EnumResourceApplicationResourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumResourceApplicationResourceType: valid values are %v", v, AllowedEnumResourceApplicationResourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumResourceApplicationResourceType) IsValid() bool {
	for _, existing := range AllowedEnumResourceApplicationResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumResourceApplicationResourceType value
func (v EnumResourceApplicationResourceType) Ptr() *EnumResourceApplicationResourceType {
	return &v
}

type NullableEnumResourceApplicationResourceType struct {
	value *EnumResourceApplicationResourceType
	isSet bool
}

func (v NullableEnumResourceApplicationResourceType) Get() *EnumResourceApplicationResourceType {
	return v.value
}

func (v *NullableEnumResourceApplicationResourceType) Set(val *EnumResourceApplicationResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumResourceApplicationResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumResourceApplicationResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumResourceApplicationResourceType(val *EnumResourceApplicationResourceType) *NullableEnumResourceApplicationResourceType {
	return &NullableEnumResourceApplicationResourceType{value: val, isSet: true}
}

func (v NullableEnumResourceApplicationResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumResourceApplicationResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
