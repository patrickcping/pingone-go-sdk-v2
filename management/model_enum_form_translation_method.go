/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumFormTranslationMethod A string that specifies how to translate the text strings in the form.
type EnumFormTranslationMethod string

// List of EnumFormTranslationMethod
const (
	ENUMFORMTRANSLATIONMETHOD_TRANSLATE     EnumFormTranslationMethod = "TRANSLATE"
	ENUMFORMTRANSLATIONMETHOD_DEFAULT_VALUE EnumFormTranslationMethod = "DEFAULT_VALUE"
	ENUMFORMTRANSLATIONMETHOD_KEY           EnumFormTranslationMethod = "KEY"
)

// All allowed values of EnumFormTranslationMethod enum
var AllowedEnumFormTranslationMethodEnumValues = []EnumFormTranslationMethod{
	"TRANSLATE",
	"DEFAULT_VALUE",
	"KEY",
}

func (v *EnumFormTranslationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFormTranslationMethod(value)
	for _, existing := range AllowedEnumFormTranslationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumFormTranslationMethod(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumFormTranslationMethodFromValue returns a pointer to a valid EnumFormTranslationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFormTranslationMethodFromValue(v string) (*EnumFormTranslationMethod, error) {
	ev := EnumFormTranslationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFormTranslationMethod: valid values are %v", v, AllowedEnumFormTranslationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFormTranslationMethod) IsValid() bool {
	for _, existing := range AllowedEnumFormTranslationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFormTranslationMethod value
func (v EnumFormTranslationMethod) Ptr() *EnumFormTranslationMethod {
	return &v
}

type NullableEnumFormTranslationMethod struct {
	value *EnumFormTranslationMethod
	isSet bool
}

func (v NullableEnumFormTranslationMethod) Get() *EnumFormTranslationMethod {
	return v.value
}

func (v *NullableEnumFormTranslationMethod) Set(val *EnumFormTranslationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFormTranslationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFormTranslationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFormTranslationMethod(val *EnumFormTranslationMethod) *NullableEnumFormTranslationMethod {
	return &NullableEnumFormTranslationMethod{value: val, isSet: true}
}

func (v NullableEnumFormTranslationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFormTranslationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
