/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds{}

// ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds struct for ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds
type ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds struct {
	// This must be a valid SAML entity ID.
	VsId string `json:"vsId"`
	// Indicates whether the virtual server identified by the associated `vsId` is to be used as the default virtual server.
	Default *bool `json:"default,omitempty"`
}

// NewApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds instantiates a new ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds(vsId string) *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds {
	this := ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds{}
	this.VsId = vsId
	return &this
}

// NewApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIdsWithDefaults instantiates a new ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIdsWithDefaults() *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds {
	this := ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds{}
	return &this
}

// GetVsId returns the VsId field value
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) GetVsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VsId
}

// GetVsIdOk returns a tuple with the VsId field value
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) GetVsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VsId, true
}

// SetVsId sets field value
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) SetVsId(v string) {
	o.VsId = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) SetDefault(v bool) {
	o.Default = &v
}

func (o ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vsId"] = o.VsId
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	return toSerialize, nil
}

type NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds struct {
	value *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds
	isSet bool
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) Get() *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds {
	return v.value
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) Set(val *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds(val *ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) *NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds {
	return &NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds{value: val, isSet: true}
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
