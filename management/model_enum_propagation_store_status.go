/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumPropagationStoreStatus The status of the identity store. The default value is INACTIVE.
type EnumPropagationStoreStatus string

// List of EnumPropagationStoreStatus
const (
	ENUMPROPAGATIONSTORESTATUS_INACTIVE EnumPropagationStoreStatus = "INACTIVE"
)

// All allowed values of EnumPropagationStoreStatus enum
var AllowedEnumPropagationStoreStatusEnumValues = []EnumPropagationStoreStatus{
	"INACTIVE",
}

func (v *EnumPropagationStoreStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumPropagationStoreStatus(value)
	for _, existing := range AllowedEnumPropagationStoreStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumPropagationStoreStatus(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumPropagationStoreStatusFromValue returns a pointer to a valid EnumPropagationStoreStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumPropagationStoreStatusFromValue(v string) (*EnumPropagationStoreStatus, error) {
	ev := EnumPropagationStoreStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumPropagationStoreStatus: valid values are %v", v, AllowedEnumPropagationStoreStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumPropagationStoreStatus) IsValid() bool {
	for _, existing := range AllowedEnumPropagationStoreStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumPropagationStoreStatus value
func (v EnumPropagationStoreStatus) Ptr() *EnumPropagationStoreStatus {
	return &v
}

type NullableEnumPropagationStoreStatus struct {
	value *EnumPropagationStoreStatus
	isSet bool
}

func (v NullableEnumPropagationStoreStatus) Get() *EnumPropagationStoreStatus {
	return v.value
}

func (v *NullableEnumPropagationStoreStatus) Set(val *EnumPropagationStoreStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumPropagationStoreStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumPropagationStoreStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumPropagationStoreStatus(val *EnumPropagationStoreStatus) *NullableEnumPropagationStoreStatus {
	return &NullableEnumPropagationStoreStatus{value: val, isSet: true}
}

func (v NullableEnumPropagationStoreStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumPropagationStoreStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
