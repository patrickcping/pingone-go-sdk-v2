/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the GatewayTypeRADIUSAllOfBlastRadiusMitigation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTypeRADIUSAllOfBlastRadiusMitigation{}

// GatewayTypeRADIUSAllOfBlastRadiusMitigation This object contains two optional fields that can be used to block Blast RADIUS attacks. Since these two options use different approaches to deal with the same issue, you should not set more than one of them to `true`. If both are set to `true`, an error is returned.
type GatewayTypeRADIUSAllOfBlastRadiusMitigation struct {
	// Set to `true` to require that all requests from the client include the Message-Authenticator attribute. Any requests without the attribute will be ignored.
	RequireMsgAuth *bool `json:"requireMsgAuth,omitempty"`
	// For older clients that don't support sending the Message-Authenticator attribute, you can set this field to `true`. This instructs the gateway to ignore requests that don't contain the Message-Authenticator attribute but contain the Proxy-State attribute.
	LimitProxyState *bool `json:"limitProxyState,omitempty"`
}

// NewGatewayTypeRADIUSAllOfBlastRadiusMitigation instantiates a new GatewayTypeRADIUSAllOfBlastRadiusMitigation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTypeRADIUSAllOfBlastRadiusMitigation() *GatewayTypeRADIUSAllOfBlastRadiusMitigation {
	this := GatewayTypeRADIUSAllOfBlastRadiusMitigation{}
	return &this
}

// NewGatewayTypeRADIUSAllOfBlastRadiusMitigationWithDefaults instantiates a new GatewayTypeRADIUSAllOfBlastRadiusMitigation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTypeRADIUSAllOfBlastRadiusMitigationWithDefaults() *GatewayTypeRADIUSAllOfBlastRadiusMitigation {
	this := GatewayTypeRADIUSAllOfBlastRadiusMitigation{}
	return &this
}

// GetRequireMsgAuth returns the RequireMsgAuth field value if set, zero value otherwise.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) GetRequireMsgAuth() bool {
	if o == nil || IsNil(o.RequireMsgAuth) {
		var ret bool
		return ret
	}
	return *o.RequireMsgAuth
}

// GetRequireMsgAuthOk returns a tuple with the RequireMsgAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) GetRequireMsgAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMsgAuth) {
		return nil, false
	}
	return o.RequireMsgAuth, true
}

// HasRequireMsgAuth returns a boolean if a field has been set.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) HasRequireMsgAuth() bool {
	if o != nil && !IsNil(o.RequireMsgAuth) {
		return true
	}

	return false
}

// SetRequireMsgAuth gets a reference to the given bool and assigns it to the RequireMsgAuth field.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) SetRequireMsgAuth(v bool) {
	o.RequireMsgAuth = &v
}

// GetLimitProxyState returns the LimitProxyState field value if set, zero value otherwise.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) GetLimitProxyState() bool {
	if o == nil || IsNil(o.LimitProxyState) {
		var ret bool
		return ret
	}
	return *o.LimitProxyState
}

// GetLimitProxyStateOk returns a tuple with the LimitProxyState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) GetLimitProxyStateOk() (*bool, bool) {
	if o == nil || IsNil(o.LimitProxyState) {
		return nil, false
	}
	return o.LimitProxyState, true
}

// HasLimitProxyState returns a boolean if a field has been set.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) HasLimitProxyState() bool {
	if o != nil && !IsNil(o.LimitProxyState) {
		return true
	}

	return false
}

// SetLimitProxyState gets a reference to the given bool and assigns it to the LimitProxyState field.
func (o *GatewayTypeRADIUSAllOfBlastRadiusMitigation) SetLimitProxyState(v bool) {
	o.LimitProxyState = &v
}

func (o GatewayTypeRADIUSAllOfBlastRadiusMitigation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTypeRADIUSAllOfBlastRadiusMitigation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequireMsgAuth) {
		toSerialize["requireMsgAuth"] = o.RequireMsgAuth
	}
	if !IsNil(o.LimitProxyState) {
		toSerialize["limitProxyState"] = o.LimitProxyState
	}
	return toSerialize, nil
}

type NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation struct {
	value *GatewayTypeRADIUSAllOfBlastRadiusMitigation
	isSet bool
}

func (v NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) Get() *GatewayTypeRADIUSAllOfBlastRadiusMitigation {
	return v.value
}

func (v *NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) Set(val *GatewayTypeRADIUSAllOfBlastRadiusMitigation) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTypeRADIUSAllOfBlastRadiusMitigation(val *GatewayTypeRADIUSAllOfBlastRadiusMitigation) *NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation {
	return &NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation{value: val, isSet: true}
}

func (v NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTypeRADIUSAllOfBlastRadiusMitigation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
