/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumPropagationStoreTypeAqueraAuthenticationMethod The account authentication method. For example, `OAuth Bearer Token` or `Basic Auth`.
type EnumPropagationStoreTypeAqueraAuthenticationMethod string

// List of EnumPropagationStoreTypeAqueraAuthenticationMethod
const (
	ENUMPROPAGATIONSTORETYPEAQUERAAUTHENTICATIONMETHOD_O_AUTH_BEARER_TOKEN EnumPropagationStoreTypeAqueraAuthenticationMethod = "OAuth Bearer Token"
	ENUMPROPAGATIONSTORETYPEAQUERAAUTHENTICATIONMETHOD_BASIC_AUTH          EnumPropagationStoreTypeAqueraAuthenticationMethod = "Basic Auth"
)

// All allowed values of EnumPropagationStoreTypeAqueraAuthenticationMethod enum
var AllowedEnumPropagationStoreTypeAqueraAuthenticationMethodEnumValues = []EnumPropagationStoreTypeAqueraAuthenticationMethod{
	"OAuth Bearer Token",
	"Basic Auth",
}

func (v *EnumPropagationStoreTypeAqueraAuthenticationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumPropagationStoreTypeAqueraAuthenticationMethod(value)
	for _, existing := range AllowedEnumPropagationStoreTypeAqueraAuthenticationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumPropagationStoreTypeAqueraAuthenticationMethod(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumPropagationStoreTypeAqueraAuthenticationMethodFromValue returns a pointer to a valid EnumPropagationStoreTypeAqueraAuthenticationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumPropagationStoreTypeAqueraAuthenticationMethodFromValue(v string) (*EnumPropagationStoreTypeAqueraAuthenticationMethod, error) {
	ev := EnumPropagationStoreTypeAqueraAuthenticationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumPropagationStoreTypeAqueraAuthenticationMethod: valid values are %v", v, AllowedEnumPropagationStoreTypeAqueraAuthenticationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumPropagationStoreTypeAqueraAuthenticationMethod) IsValid() bool {
	for _, existing := range AllowedEnumPropagationStoreTypeAqueraAuthenticationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumPropagationStoreTypeAqueraAuthenticationMethod value
func (v EnumPropagationStoreTypeAqueraAuthenticationMethod) Ptr() *EnumPropagationStoreTypeAqueraAuthenticationMethod {
	return &v
}

type NullableEnumPropagationStoreTypeAqueraAuthenticationMethod struct {
	value *EnumPropagationStoreTypeAqueraAuthenticationMethod
	isSet bool
}

func (v NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) Get() *EnumPropagationStoreTypeAqueraAuthenticationMethod {
	return v.value
}

func (v *NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) Set(val *EnumPropagationStoreTypeAqueraAuthenticationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumPropagationStoreTypeAqueraAuthenticationMethod(val *EnumPropagationStoreTypeAqueraAuthenticationMethod) *NullableEnumPropagationStoreTypeAqueraAuthenticationMethod {
	return &NullableEnumPropagationStoreTypeAqueraAuthenticationMethod{value: val, isSet: true}
}

func (v NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumPropagationStoreTypeAqueraAuthenticationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
