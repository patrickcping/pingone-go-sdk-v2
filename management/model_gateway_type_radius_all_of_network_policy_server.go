/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the GatewayTypeRADIUSAllOfNetworkPolicyServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTypeRADIUSAllOfNetworkPolicyServer{}

// GatewayTypeRADIUSAllOfNetworkPolicyServer If specified, the RADIUS gateway authenticates using the MS-CHAP v2 protocol.
type GatewayTypeRADIUSAllOfNetworkPolicyServer struct {
	// The IP address of the Network Policy Server (NPS).
	Ip string `json:"ip"`
	// The port number of the NPS.
	Port int32 `json:"port"`
}

// NewGatewayTypeRADIUSAllOfNetworkPolicyServer instantiates a new GatewayTypeRADIUSAllOfNetworkPolicyServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTypeRADIUSAllOfNetworkPolicyServer(ip string, port int32) *GatewayTypeRADIUSAllOfNetworkPolicyServer {
	this := GatewayTypeRADIUSAllOfNetworkPolicyServer{}
	this.Ip = ip
	this.Port = port
	return &this
}

// NewGatewayTypeRADIUSAllOfNetworkPolicyServerWithDefaults instantiates a new GatewayTypeRADIUSAllOfNetworkPolicyServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTypeRADIUSAllOfNetworkPolicyServerWithDefaults() *GatewayTypeRADIUSAllOfNetworkPolicyServer {
	this := GatewayTypeRADIUSAllOfNetworkPolicyServer{}
	return &this
}

// GetIp returns the Ip field value
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) SetIp(v string) {
	o.Ip = v
}

// GetPort returns the Port field value
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *GatewayTypeRADIUSAllOfNetworkPolicyServer) SetPort(v int32) {
	o.Port = v
}

func (o GatewayTypeRADIUSAllOfNetworkPolicyServer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTypeRADIUSAllOfNetworkPolicyServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ip"] = o.Ip
	toSerialize["port"] = o.Port
	return toSerialize, nil
}

type NullableGatewayTypeRADIUSAllOfNetworkPolicyServer struct {
	value *GatewayTypeRADIUSAllOfNetworkPolicyServer
	isSet bool
}

func (v NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) Get() *GatewayTypeRADIUSAllOfNetworkPolicyServer {
	return v.value
}

func (v *NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) Set(val *GatewayTypeRADIUSAllOfNetworkPolicyServer) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTypeRADIUSAllOfNetworkPolicyServer(val *GatewayTypeRADIUSAllOfNetworkPolicyServer) *NullableGatewayTypeRADIUSAllOfNetworkPolicyServer {
	return &NullableGatewayTypeRADIUSAllOfNetworkPolicyServer{value: val, isSet: true}
}

func (v NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTypeRADIUSAllOfNetworkPolicyServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
