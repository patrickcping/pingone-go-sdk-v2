/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the Resource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Resource{}

// Resource struct for Resource
type Resource struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	// An integer that specifies the number of seconds that the access token is valid. If a value is not specified, the default is 3600. The minimum value is 300 seconds (5 minutes); the maximum value is 2592000 seconds (30 days).
	AccessTokenValiditySeconds     *int32                                  `json:"accessTokenValiditySeconds,omitempty"`
	ApplicationPermissionsSettings *ResourceApplicationPermissionsSettings `json:"applicationPermissionsSettings,omitempty"`
	// A string that specifies a URL without a fragment or `@ObjectName` and must not contain `pingone` or `pingidentity` (for example, `https://api.bxretail.org`). If a URL is not specified, the resource name is used.
	Audience *string `json:"audience,omitempty"`
	// (Required when `clientSecret` is specified.) Supported only for the `POST` operation. This is the UUID of an external resource that is being migrated to PingOne. The UUID must be a minimum of 8 alpha-numeric characters, and must be globally unique in PingOne.
	ClientId *string `json:"clientId,omitempty"`
	// (Required when clientId is specified.) Supported only for the POST operation. This is the client secret associated with clientId for an external resource that is being migrated to PingOne. This must be a minimum of 8 alpha-numeric characters.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// The time the resource was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// A string that specifies the description of the resource.
	Description *string                                    `json:"description,omitempty"`
	Environment *ObjectEnvironment                         `json:"environment,omitempty"`
	Resource    *IdentityProviderAttributeIdentityProvider `json:"resource,omitempty"`
	// A string that specifies the resourceâ€™s unique identifier.
	Id *string `json:"id,omitempty"`
	// A string that specifies the resource name, which must be provided and must be unique within an environment.
	Name                         string                                    `json:"name"`
	IntrospectEndpointAuthMethod *EnumResourceIntrospectEndpointAuthMethod `json:"introspectEndpointAuthMethod,omitempty"`
	Type                         *EnumResourceType                         `json:"type,omitempty"`
	// The time the resource was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewResource instantiates a new Resource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResource(name string) *Resource {
	this := Resource{}
	this.Name = name
	return &this
}

// NewResourceWithDefaults instantiates a new Resource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceWithDefaults() *Resource {
	this := Resource{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Resource) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Resource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *Resource) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetAccessTokenValiditySeconds returns the AccessTokenValiditySeconds field value if set, zero value otherwise.
func (o *Resource) GetAccessTokenValiditySeconds() int32 {
	if o == nil || IsNil(o.AccessTokenValiditySeconds) {
		var ret int32
		return ret
	}
	return *o.AccessTokenValiditySeconds
}

// GetAccessTokenValiditySecondsOk returns a tuple with the AccessTokenValiditySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAccessTokenValiditySecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessTokenValiditySeconds) {
		return nil, false
	}
	return o.AccessTokenValiditySeconds, true
}

// HasAccessTokenValiditySeconds returns a boolean if a field has been set.
func (o *Resource) HasAccessTokenValiditySeconds() bool {
	if o != nil && !IsNil(o.AccessTokenValiditySeconds) {
		return true
	}

	return false
}

// SetAccessTokenValiditySeconds gets a reference to the given int32 and assigns it to the AccessTokenValiditySeconds field.
func (o *Resource) SetAccessTokenValiditySeconds(v int32) {
	o.AccessTokenValiditySeconds = &v
}

// GetApplicationPermissionsSettings returns the ApplicationPermissionsSettings field value if set, zero value otherwise.
func (o *Resource) GetApplicationPermissionsSettings() ResourceApplicationPermissionsSettings {
	if o == nil || IsNil(o.ApplicationPermissionsSettings) {
		var ret ResourceApplicationPermissionsSettings
		return ret
	}
	return *o.ApplicationPermissionsSettings
}

// GetApplicationPermissionsSettingsOk returns a tuple with the ApplicationPermissionsSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetApplicationPermissionsSettingsOk() (*ResourceApplicationPermissionsSettings, bool) {
	if o == nil || IsNil(o.ApplicationPermissionsSettings) {
		return nil, false
	}
	return o.ApplicationPermissionsSettings, true
}

// HasApplicationPermissionsSettings returns a boolean if a field has been set.
func (o *Resource) HasApplicationPermissionsSettings() bool {
	if o != nil && !IsNil(o.ApplicationPermissionsSettings) {
		return true
	}

	return false
}

// SetApplicationPermissionsSettings gets a reference to the given ResourceApplicationPermissionsSettings and assigns it to the ApplicationPermissionsSettings field.
func (o *Resource) SetApplicationPermissionsSettings(v ResourceApplicationPermissionsSettings) {
	o.ApplicationPermissionsSettings = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *Resource) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *Resource) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *Resource) SetAudience(v string) {
	o.Audience = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Resource) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Resource) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Resource) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *Resource) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *Resource) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *Resource) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Resource) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Resource) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Resource) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Resource) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Resource) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Resource) SetDescription(v string) {
	o.Description = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *Resource) GetEnvironment() ObjectEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *Resource) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *Resource) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *Resource) GetResource() IdentityProviderAttributeIdentityProvider {
	if o == nil || IsNil(o.Resource) {
		var ret IdentityProviderAttributeIdentityProvider
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetResourceOk() (*IdentityProviderAttributeIdentityProvider, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *Resource) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given IdentityProviderAttributeIdentityProvider and assigns it to the Resource field.
func (o *Resource) SetResource(v IdentityProviderAttributeIdentityProvider) {
	o.Resource = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Resource) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Resource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Resource) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *Resource) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Resource) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Resource) SetName(v string) {
	o.Name = v
}

// GetIntrospectEndpointAuthMethod returns the IntrospectEndpointAuthMethod field value if set, zero value otherwise.
func (o *Resource) GetIntrospectEndpointAuthMethod() EnumResourceIntrospectEndpointAuthMethod {
	if o == nil || IsNil(o.IntrospectEndpointAuthMethod) {
		var ret EnumResourceIntrospectEndpointAuthMethod
		return ret
	}
	return *o.IntrospectEndpointAuthMethod
}

// GetIntrospectEndpointAuthMethodOk returns a tuple with the IntrospectEndpointAuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetIntrospectEndpointAuthMethodOk() (*EnumResourceIntrospectEndpointAuthMethod, bool) {
	if o == nil || IsNil(o.IntrospectEndpointAuthMethod) {
		return nil, false
	}
	return o.IntrospectEndpointAuthMethod, true
}

// HasIntrospectEndpointAuthMethod returns a boolean if a field has been set.
func (o *Resource) HasIntrospectEndpointAuthMethod() bool {
	if o != nil && !IsNil(o.IntrospectEndpointAuthMethod) {
		return true
	}

	return false
}

// SetIntrospectEndpointAuthMethod gets a reference to the given EnumResourceIntrospectEndpointAuthMethod and assigns it to the IntrospectEndpointAuthMethod field.
func (o *Resource) SetIntrospectEndpointAuthMethod(v EnumResourceIntrospectEndpointAuthMethod) {
	o.IntrospectEndpointAuthMethod = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Resource) GetType() EnumResourceType {
	if o == nil || IsNil(o.Type) {
		var ret EnumResourceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetTypeOk() (*EnumResourceType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Resource) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given EnumResourceType and assigns it to the Type field.
func (o *Resource) SetType(v EnumResourceType) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Resource) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Resource) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Resource) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Resource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Resource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.AccessTokenValiditySeconds) {
		toSerialize["accessTokenValiditySeconds"] = o.AccessTokenValiditySeconds
	}
	if !IsNil(o.ApplicationPermissionsSettings) {
		toSerialize["applicationPermissionsSettings"] = o.ApplicationPermissionsSettings
	}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.IntrospectEndpointAuthMethod) {
		toSerialize["introspectEndpointAuthMethod"] = o.IntrospectEndpointAuthMethod
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableResource struct {
	value *Resource
	isSet bool
}

func (v NullableResource) Get() *Resource {
	return v.value
}

func (v *NullableResource) Set(val *Resource) {
	v.value = val
	v.isSet = true
}

func (v NullableResource) IsSet() bool {
	return v.isSet
}

func (v *NullableResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResource(val *Resource) *NullableResource {
	return &NullableResource{value: val, isSet: true}
}

func (v NullableResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
