/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationSAMLAllOfSpVerification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSAMLAllOfSpVerification{}

// ApplicationSAMLAllOfSpVerification struct for ApplicationSAMLAllOfSpVerification
type ApplicationSAMLAllOfSpVerification struct {
	// Whether the Authn Request signing should be enforced. Default is `false`.
	AuthnRequestSigned *bool                                            `json:"authnRequestSigned,omitempty"`
	Certificates       []ApplicationSAMLAllOfSpVerificationCertificates `json:"certificates"`
}

// NewApplicationSAMLAllOfSpVerification instantiates a new ApplicationSAMLAllOfSpVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSAMLAllOfSpVerification(certificates []ApplicationSAMLAllOfSpVerificationCertificates) *ApplicationSAMLAllOfSpVerification {
	this := ApplicationSAMLAllOfSpVerification{}
	var authnRequestSigned bool = false
	this.AuthnRequestSigned = &authnRequestSigned
	this.Certificates = certificates
	return &this
}

// NewApplicationSAMLAllOfSpVerificationWithDefaults instantiates a new ApplicationSAMLAllOfSpVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSAMLAllOfSpVerificationWithDefaults() *ApplicationSAMLAllOfSpVerification {
	this := ApplicationSAMLAllOfSpVerification{}
	var authnRequestSigned bool = false
	this.AuthnRequestSigned = &authnRequestSigned
	return &this
}

// GetAuthnRequestSigned returns the AuthnRequestSigned field value if set, zero value otherwise.
func (o *ApplicationSAMLAllOfSpVerification) GetAuthnRequestSigned() bool {
	if o == nil || IsNil(o.AuthnRequestSigned) {
		var ret bool
		return ret
	}
	return *o.AuthnRequestSigned
}

// GetAuthnRequestSignedOk returns a tuple with the AuthnRequestSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfSpVerification) GetAuthnRequestSignedOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthnRequestSigned) {
		return nil, false
	}
	return o.AuthnRequestSigned, true
}

// HasAuthnRequestSigned returns a boolean if a field has been set.
func (o *ApplicationSAMLAllOfSpVerification) HasAuthnRequestSigned() bool {
	if o != nil && !IsNil(o.AuthnRequestSigned) {
		return true
	}

	return false
}

// SetAuthnRequestSigned gets a reference to the given bool and assigns it to the AuthnRequestSigned field.
func (o *ApplicationSAMLAllOfSpVerification) SetAuthnRequestSigned(v bool) {
	o.AuthnRequestSigned = &v
}

// GetCertificates returns the Certificates field value
func (o *ApplicationSAMLAllOfSpVerification) GetCertificates() []ApplicationSAMLAllOfSpVerificationCertificates {
	if o == nil {
		var ret []ApplicationSAMLAllOfSpVerificationCertificates
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfSpVerification) GetCertificatesOk() ([]ApplicationSAMLAllOfSpVerificationCertificates, bool) {
	if o == nil {
		return nil, false
	}
	return o.Certificates, true
}

// SetCertificates sets field value
func (o *ApplicationSAMLAllOfSpVerification) SetCertificates(v []ApplicationSAMLAllOfSpVerificationCertificates) {
	o.Certificates = v
}

func (o ApplicationSAMLAllOfSpVerification) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSAMLAllOfSpVerification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthnRequestSigned) {
		toSerialize["authnRequestSigned"] = o.AuthnRequestSigned
	}
	toSerialize["certificates"] = o.Certificates
	return toSerialize, nil
}

type NullableApplicationSAMLAllOfSpVerification struct {
	value *ApplicationSAMLAllOfSpVerification
	isSet bool
}

func (v NullableApplicationSAMLAllOfSpVerification) Get() *ApplicationSAMLAllOfSpVerification {
	return v.value
}

func (v *NullableApplicationSAMLAllOfSpVerification) Set(val *ApplicationSAMLAllOfSpVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSAMLAllOfSpVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSAMLAllOfSpVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSAMLAllOfSpVerification(val *ApplicationSAMLAllOfSpVerification) *NullableApplicationSAMLAllOfSpVerification {
	return &NullableApplicationSAMLAllOfSpVerification{value: val, isSet: true}
}

func (v NullableApplicationSAMLAllOfSpVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSAMLAllOfSpVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
