/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationSAMLAllOfVirtualServerIdSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSAMLAllOfVirtualServerIdSettings{}

// ApplicationSAMLAllOfVirtualServerIdSettings Contains the virtual server ID or IDs to be used.
type ApplicationSAMLAllOfVirtualServerIdSettings struct {
	// Indicates whether the virtual server ID or IDs specified are to be used. Defaults to `false`.
	Enabled *bool `json:"enabled,omitempty"`
	// Required if `enabled` is `true`. Contains the list of virtual ID or IDs to be used.
	VirtualServerIds []ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds `json:"virtualServerIds,omitempty"`
}

// NewApplicationSAMLAllOfVirtualServerIdSettings instantiates a new ApplicationSAMLAllOfVirtualServerIdSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSAMLAllOfVirtualServerIdSettings() *ApplicationSAMLAllOfVirtualServerIdSettings {
	this := ApplicationSAMLAllOfVirtualServerIdSettings{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewApplicationSAMLAllOfVirtualServerIdSettingsWithDefaults instantiates a new ApplicationSAMLAllOfVirtualServerIdSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSAMLAllOfVirtualServerIdSettingsWithDefaults() *ApplicationSAMLAllOfVirtualServerIdSettings {
	this := ApplicationSAMLAllOfVirtualServerIdSettings{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVirtualServerIds returns the VirtualServerIds field value if set, zero value otherwise.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) GetVirtualServerIds() []ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds {
	if o == nil || IsNil(o.VirtualServerIds) {
		var ret []ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds
		return ret
	}
	return o.VirtualServerIds
}

// GetVirtualServerIdsOk returns a tuple with the VirtualServerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) GetVirtualServerIdsOk() ([]ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds, bool) {
	if o == nil || IsNil(o.VirtualServerIds) {
		return nil, false
	}
	return o.VirtualServerIds, true
}

// HasVirtualServerIds returns a boolean if a field has been set.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) HasVirtualServerIds() bool {
	if o != nil && !IsNil(o.VirtualServerIds) {
		return true
	}

	return false
}

// SetVirtualServerIds gets a reference to the given []ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds and assigns it to the VirtualServerIds field.
func (o *ApplicationSAMLAllOfVirtualServerIdSettings) SetVirtualServerIds(v []ApplicationSAMLAllOfVirtualServerIdSettingsVirtualServerIds) {
	o.VirtualServerIds = v
}

func (o ApplicationSAMLAllOfVirtualServerIdSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSAMLAllOfVirtualServerIdSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.VirtualServerIds) {
		toSerialize["virtualServerIds"] = o.VirtualServerIds
	}
	return toSerialize, nil
}

type NullableApplicationSAMLAllOfVirtualServerIdSettings struct {
	value *ApplicationSAMLAllOfVirtualServerIdSettings
	isSet bool
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettings) Get() *ApplicationSAMLAllOfVirtualServerIdSettings {
	return v.value
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettings) Set(val *ApplicationSAMLAllOfVirtualServerIdSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSAMLAllOfVirtualServerIdSettings(val *ApplicationSAMLAllOfVirtualServerIdSettings) *NullableApplicationSAMLAllOfVirtualServerIdSettings {
	return &NullableApplicationSAMLAllOfVirtualServerIdSettings{value: val, isSet: true}
}

func (v NullableApplicationSAMLAllOfVirtualServerIdSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSAMLAllOfVirtualServerIdSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
