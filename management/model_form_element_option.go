/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the FormElementOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormElementOption{}

// FormElementOption struct for FormElementOption
type FormElementOption struct {
	// A string that specifies the label shown to the end user for this option.
	Label string `json:"label"`
	// A string that specifies the value of the field if this option is selected.
	Value string `json:"value"`
}

// NewFormElementOption instantiates a new FormElementOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormElementOption(label string, value string) *FormElementOption {
	this := FormElementOption{}
	this.Label = label
	this.Value = value
	return &this
}

// NewFormElementOptionWithDefaults instantiates a new FormElementOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormElementOptionWithDefaults() *FormElementOption {
	this := FormElementOption{}
	return &this
}

// GetLabel returns the Label field value
func (o *FormElementOption) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *FormElementOption) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *FormElementOption) SetLabel(v string) {
	o.Label = v
}

// GetValue returns the Value field value
func (o *FormElementOption) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FormElementOption) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FormElementOption) SetValue(v string) {
	o.Value = v
}

func (o FormElementOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormElementOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableFormElementOption struct {
	value *FormElementOption
	isSet bool
}

func (v NullableFormElementOption) Get() *FormElementOption {
	return v.value
}

func (v *NullableFormElementOption) Set(val *FormElementOption) {
	v.value = val
	v.isSet = true
}

func (v NullableFormElementOption) IsSet() bool {
	return v.isSet
}

func (v *NullableFormElementOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormElementOption(val *FormElementOption) *NullableFormElementOption {
	return &NullableFormElementOption{value: val, isSet: true}
}

func (v NullableFormElementOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormElementOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
