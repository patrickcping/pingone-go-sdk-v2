/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumFormStylesWidthUnit the model 'EnumFormStylesWidthUnit'
type EnumFormStylesWidthUnit string

// List of EnumFormStylesWidthUnit
const (
	ENUMFORMSTYLESWIDTHUNIT_PERCENT EnumFormStylesWidthUnit = "PERCENT"
	ENUMFORMSTYLESWIDTHUNIT_PIXELS  EnumFormStylesWidthUnit = "PIXELS"
)

// All allowed values of EnumFormStylesWidthUnit enum
var AllowedEnumFormStylesWidthUnitEnumValues = []EnumFormStylesWidthUnit{
	"PERCENT",
	"PIXELS",
}

func (v *EnumFormStylesWidthUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFormStylesWidthUnit(value)
	for _, existing := range AllowedEnumFormStylesWidthUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumFormStylesWidthUnit(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumFormStylesWidthUnitFromValue returns a pointer to a valid EnumFormStylesWidthUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFormStylesWidthUnitFromValue(v string) (*EnumFormStylesWidthUnit, error) {
	ev := EnumFormStylesWidthUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFormStylesWidthUnit: valid values are %v", v, AllowedEnumFormStylesWidthUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFormStylesWidthUnit) IsValid() bool {
	for _, existing := range AllowedEnumFormStylesWidthUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFormStylesWidthUnit value
func (v EnumFormStylesWidthUnit) Ptr() *EnumFormStylesWidthUnit {
	return &v
}

type NullableEnumFormStylesWidthUnit struct {
	value *EnumFormStylesWidthUnit
	isSet bool
}

func (v NullableEnumFormStylesWidthUnit) Get() *EnumFormStylesWidthUnit {
	return v.value
}

func (v *NullableEnumFormStylesWidthUnit) Set(val *EnumFormStylesWidthUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFormStylesWidthUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFormStylesWidthUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFormStylesWidthUnit(val *EnumFormStylesWidthUnit) *NullableEnumFormStylesWidthUnit {
	return &NullableEnumFormStylesWidthUnit{value: val, isSet: true}
}

func (v NullableEnumFormStylesWidthUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFormStylesWidthUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
