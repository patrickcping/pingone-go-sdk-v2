/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumFormElementLayout A string that specifies layout attributes for radio button and checkbox fields. This is a required property when the type is `RADIO` or `CHECKBOX`.
type EnumFormElementLayout string

// List of EnumFormElementLayout
const (
	ENUMFORMELEMENTLAYOUT_HORIZONTAL EnumFormElementLayout = "HORIZONTAL"
	ENUMFORMELEMENTLAYOUT_VERTICAL   EnumFormElementLayout = "VERTICAL"
)

// All allowed values of EnumFormElementLayout enum
var AllowedEnumFormElementLayoutEnumValues = []EnumFormElementLayout{
	"HORIZONTAL",
	"VERTICAL",
}

func (v *EnumFormElementLayout) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFormElementLayout(value)
	for _, existing := range AllowedEnumFormElementLayoutEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumFormElementLayout(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumFormElementLayoutFromValue returns a pointer to a valid EnumFormElementLayout
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFormElementLayoutFromValue(v string) (*EnumFormElementLayout, error) {
	ev := EnumFormElementLayout(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFormElementLayout: valid values are %v", v, AllowedEnumFormElementLayoutEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFormElementLayout) IsValid() bool {
	for _, existing := range AllowedEnumFormElementLayoutEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFormElementLayout value
func (v EnumFormElementLayout) Ptr() *EnumFormElementLayout {
	return &v
}

type NullableEnumFormElementLayout struct {
	value *EnumFormElementLayout
	isSet bool
}

func (v NullableEnumFormElementLayout) Get() *EnumFormElementLayout {
	return v.value
}

func (v *NullableEnumFormElementLayout) Set(val *EnumFormElementLayout) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFormElementLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFormElementLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFormElementLayout(val *EnumFormElementLayout) *NullableEnumFormElementLayout {
	return &NullableEnumFormElementLayout{value: val, isSet: true}
}

func (v NullableEnumFormElementLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFormElementLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
