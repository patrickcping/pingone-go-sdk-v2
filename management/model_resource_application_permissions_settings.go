/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ResourceApplicationPermissionsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceApplicationPermissionsSettings{}

// ResourceApplicationPermissionsSettings An object that specifies whether to add application permissions to access tokens generated by PingOne.
type ResourceApplicationPermissionsSettings struct {
	// A setting to enable application permission claims in the access token. If this property is omitted, the value is set to `false`.
	ClaimEnabled *bool `json:"claimEnabled,omitempty"`
}

// NewResourceApplicationPermissionsSettings instantiates a new ResourceApplicationPermissionsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceApplicationPermissionsSettings() *ResourceApplicationPermissionsSettings {
	this := ResourceApplicationPermissionsSettings{}
	return &this
}

// NewResourceApplicationPermissionsSettingsWithDefaults instantiates a new ResourceApplicationPermissionsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceApplicationPermissionsSettingsWithDefaults() *ResourceApplicationPermissionsSettings {
	this := ResourceApplicationPermissionsSettings{}
	return &this
}

// GetClaimEnabled returns the ClaimEnabled field value if set, zero value otherwise.
func (o *ResourceApplicationPermissionsSettings) GetClaimEnabled() bool {
	if o == nil || IsNil(o.ClaimEnabled) {
		var ret bool
		return ret
	}
	return *o.ClaimEnabled
}

// GetClaimEnabledOk returns a tuple with the ClaimEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceApplicationPermissionsSettings) GetClaimEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ClaimEnabled) {
		return nil, false
	}
	return o.ClaimEnabled, true
}

// HasClaimEnabled returns a boolean if a field has been set.
func (o *ResourceApplicationPermissionsSettings) HasClaimEnabled() bool {
	if o != nil && !IsNil(o.ClaimEnabled) {
		return true
	}

	return false
}

// SetClaimEnabled gets a reference to the given bool and assigns it to the ClaimEnabled field.
func (o *ResourceApplicationPermissionsSettings) SetClaimEnabled(v bool) {
	o.ClaimEnabled = &v
}

func (o ResourceApplicationPermissionsSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceApplicationPermissionsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClaimEnabled) {
		toSerialize["claimEnabled"] = o.ClaimEnabled
	}
	return toSerialize, nil
}

type NullableResourceApplicationPermissionsSettings struct {
	value *ResourceApplicationPermissionsSettings
	isSet bool
}

func (v NullableResourceApplicationPermissionsSettings) Get() *ResourceApplicationPermissionsSettings {
	return v.value
}

func (v *NullableResourceApplicationPermissionsSettings) Set(val *ResourceApplicationPermissionsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceApplicationPermissionsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceApplicationPermissionsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceApplicationPermissionsSettings(val *ResourceApplicationPermissionsSettings) *NullableResourceApplicationPermissionsSettings {
	return &NullableResourceApplicationPermissionsSettings{value: val, isSet: true}
}

func (v NullableResourceApplicationPermissionsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceApplicationPermissionsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
