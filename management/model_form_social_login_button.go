/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the FormSocialLoginButton type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormSocialLoginButton{}

// FormSocialLoginButton struct for FormSocialLoginButton
type FormSocialLoginButton struct {
	// A string that specifies an identifier for the field component.
	Key *string `json:"key,omitempty"`
	// A string that specifies the social login button label.
	Label   string                     `json:"label"`
	Styles  *FormStyles                `json:"styles,omitempty"`
	IdpType EnumFormSocialLoginIdpType `json:"idpType"`
	// A string that specifies the external identity provider name.
	IdpName string `json:"idpName"`
	// A string that specifies the external identity provider's ID.
	IdpId string `json:"idpId"`
	// A boolean that specifies whether the external identity provider is enabled.
	IdpEnabled bool `json:"idpEnabled"`
}

// NewFormSocialLoginButton instantiates a new FormSocialLoginButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormSocialLoginButton(label string, idpType EnumFormSocialLoginIdpType, idpName string, idpId string, idpEnabled bool) *FormSocialLoginButton {
	this := FormSocialLoginButton{}
	this.Label = label
	this.IdpType = idpType
	this.IdpName = idpName
	this.IdpId = idpId
	this.IdpEnabled = idpEnabled
	return &this
}

// NewFormSocialLoginButtonWithDefaults instantiates a new FormSocialLoginButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormSocialLoginButtonWithDefaults() *FormSocialLoginButton {
	this := FormSocialLoginButton{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *FormSocialLoginButton) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *FormSocialLoginButton) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *FormSocialLoginButton) SetKey(v string) {
	o.Key = &v
}

// GetLabel returns the Label field value
func (o *FormSocialLoginButton) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *FormSocialLoginButton) SetLabel(v string) {
	o.Label = v
}

// GetStyles returns the Styles field value if set, zero value otherwise.
func (o *FormSocialLoginButton) GetStyles() FormStyles {
	if o == nil || IsNil(o.Styles) {
		var ret FormStyles
		return ret
	}
	return *o.Styles
}

// GetStylesOk returns a tuple with the Styles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetStylesOk() (*FormStyles, bool) {
	if o == nil || IsNil(o.Styles) {
		return nil, false
	}
	return o.Styles, true
}

// HasStyles returns a boolean if a field has been set.
func (o *FormSocialLoginButton) HasStyles() bool {
	if o != nil && !IsNil(o.Styles) {
		return true
	}

	return false
}

// SetStyles gets a reference to the given FormStyles and assigns it to the Styles field.
func (o *FormSocialLoginButton) SetStyles(v FormStyles) {
	o.Styles = &v
}

// GetIdpType returns the IdpType field value
func (o *FormSocialLoginButton) GetIdpType() EnumFormSocialLoginIdpType {
	if o == nil {
		var ret EnumFormSocialLoginIdpType
		return ret
	}

	return o.IdpType
}

// GetIdpTypeOk returns a tuple with the IdpType field value
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetIdpTypeOk() (*EnumFormSocialLoginIdpType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpType, true
}

// SetIdpType sets field value
func (o *FormSocialLoginButton) SetIdpType(v EnumFormSocialLoginIdpType) {
	o.IdpType = v
}

// GetIdpName returns the IdpName field value
func (o *FormSocialLoginButton) GetIdpName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpName
}

// GetIdpNameOk returns a tuple with the IdpName field value
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetIdpNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpName, true
}

// SetIdpName sets field value
func (o *FormSocialLoginButton) SetIdpName(v string) {
	o.IdpName = v
}

// GetIdpId returns the IdpId field value
func (o *FormSocialLoginButton) GetIdpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpId
}

// GetIdpIdOk returns a tuple with the IdpId field value
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetIdpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpId, true
}

// SetIdpId sets field value
func (o *FormSocialLoginButton) SetIdpId(v string) {
	o.IdpId = v
}

// GetIdpEnabled returns the IdpEnabled field value
func (o *FormSocialLoginButton) GetIdpEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IdpEnabled
}

// GetIdpEnabledOk returns a tuple with the IdpEnabled field value
// and a boolean to check if the value has been set.
func (o *FormSocialLoginButton) GetIdpEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpEnabled, true
}

// SetIdpEnabled sets field value
func (o *FormSocialLoginButton) SetIdpEnabled(v bool) {
	o.IdpEnabled = v
}

func (o FormSocialLoginButton) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormSocialLoginButton) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	toSerialize["label"] = o.Label
	if !IsNil(o.Styles) {
		toSerialize["styles"] = o.Styles
	}
	toSerialize["idpType"] = o.IdpType
	toSerialize["idpName"] = o.IdpName
	toSerialize["idpId"] = o.IdpId
	toSerialize["idpEnabled"] = o.IdpEnabled
	return toSerialize, nil
}

type NullableFormSocialLoginButton struct {
	value *FormSocialLoginButton
	isSet bool
}

func (v NullableFormSocialLoginButton) Get() *FormSocialLoginButton {
	return v.value
}

func (v *NullableFormSocialLoginButton) Set(val *FormSocialLoginButton) {
	v.value = val
	v.isSet = true
}

func (v NullableFormSocialLoginButton) IsSet() bool {
	return v.isSet
}

func (v *NullableFormSocialLoginButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormSocialLoginButton(val *FormSocialLoginButton) *NullableFormSocialLoginButton {
	return &NullableFormSocialLoginButton{value: val, isSet: true}
}

func (v NullableFormSocialLoginButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormSocialLoginButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
