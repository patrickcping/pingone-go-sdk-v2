/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the Integration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Integration{}

// Integration struct for Integration
type Integration struct {
	// The list of categories used to classify the integration. Valid strings include alphanumeric characters, underscore, hyphen, and space.
	Categories []string `json:"categories,omitempty"`
	// Creation date of the integration.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The description of the integration in HTML to be used for the integration listing. You can use class and style attributes for inline styling. There's a 4000 character limit for the description.
	Description *string `json:"description,omitempty"`
	// The platform-generated ID of this integration.
	Id   *string          `json:"id,omitempty"`
	Logo *IntegrationLogo `json:"logo,omitempty"`
	// Absolute URL link to the marketing landing page.
	MarketingLandingPageUrl *string `json:"marketingLandingPageUrl,omitempty"`
	// Name of the integration.
	Name string `json:"name"`
	// The Ping product associated with the integration. Can include `PINGID`, `PINGONE_ENTERPRISE`, `PINGONE`, `PINGACCESS`, `PINGFEDERATE`, `PINGDIRECTORY`, `PINGDATAGOVERNANCE`, `PINGINTELLIGENCE_FOR_APIS` or `PINGONE_ADVANCED_SERVICES`
	PingProductNames []EnumIntegrationPingProductName `json:"pingProductNames"`
	// Name of the publisher.
	Publisher string `json:"publisher"`
	// Tags to apply to the integration metadata. Can include `SSO`, `AUTHENTICATION`, `MFA`, `INTELLIGENCE`, `GOVERNANCE`, `IDAAS`, `ACCESS`, `DIRECTORY`, or `PROVISIONING`.
	Tags       []EnumIntegrationTag   `json:"tags,omitempty"`
	ThirdParty *IntegrationThirdParty `json:"thirdParty,omitempty"`
}

// NewIntegration instantiates a new Integration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegration(name string, pingProductNames []EnumIntegrationPingProductName, publisher string) *Integration {
	this := Integration{}
	this.Name = name
	this.PingProductNames = pingProductNames
	this.Publisher = publisher
	return &this
}

// NewIntegrationWithDefaults instantiates a new Integration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationWithDefaults() *Integration {
	this := Integration{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *Integration) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *Integration) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *Integration) SetCategories(v []string) {
	o.Categories = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Integration) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Integration) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Integration) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Integration) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Integration) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Integration) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Integration) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Integration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Integration) SetId(v string) {
	o.Id = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *Integration) GetLogo() IntegrationLogo {
	if o == nil || IsNil(o.Logo) {
		var ret IntegrationLogo
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetLogoOk() (*IntegrationLogo, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *Integration) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given IntegrationLogo and assigns it to the Logo field.
func (o *Integration) SetLogo(v IntegrationLogo) {
	o.Logo = &v
}

// GetMarketingLandingPageUrl returns the MarketingLandingPageUrl field value if set, zero value otherwise.
func (o *Integration) GetMarketingLandingPageUrl() string {
	if o == nil || IsNil(o.MarketingLandingPageUrl) {
		var ret string
		return ret
	}
	return *o.MarketingLandingPageUrl
}

// GetMarketingLandingPageUrlOk returns a tuple with the MarketingLandingPageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetMarketingLandingPageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingLandingPageUrl) {
		return nil, false
	}
	return o.MarketingLandingPageUrl, true
}

// HasMarketingLandingPageUrl returns a boolean if a field has been set.
func (o *Integration) HasMarketingLandingPageUrl() bool {
	if o != nil && !IsNil(o.MarketingLandingPageUrl) {
		return true
	}

	return false
}

// SetMarketingLandingPageUrl gets a reference to the given string and assigns it to the MarketingLandingPageUrl field.
func (o *Integration) SetMarketingLandingPageUrl(v string) {
	o.MarketingLandingPageUrl = &v
}

// GetName returns the Name field value
func (o *Integration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Integration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Integration) SetName(v string) {
	o.Name = v
}

// GetPingProductNames returns the PingProductNames field value
func (o *Integration) GetPingProductNames() []EnumIntegrationPingProductName {
	if o == nil {
		var ret []EnumIntegrationPingProductName
		return ret
	}

	return o.PingProductNames
}

// GetPingProductNamesOk returns a tuple with the PingProductNames field value
// and a boolean to check if the value has been set.
func (o *Integration) GetPingProductNamesOk() ([]EnumIntegrationPingProductName, bool) {
	if o == nil {
		return nil, false
	}
	return o.PingProductNames, true
}

// SetPingProductNames sets field value
func (o *Integration) SetPingProductNames(v []EnumIntegrationPingProductName) {
	o.PingProductNames = v
}

// GetPublisher returns the Publisher field value
func (o *Integration) GetPublisher() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value
// and a boolean to check if the value has been set.
func (o *Integration) GetPublisherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Publisher, true
}

// SetPublisher sets field value
func (o *Integration) SetPublisher(v string) {
	o.Publisher = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Integration) GetTags() []EnumIntegrationTag {
	if o == nil || IsNil(o.Tags) {
		var ret []EnumIntegrationTag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetTagsOk() ([]EnumIntegrationTag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Integration) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []EnumIntegrationTag and assigns it to the Tags field.
func (o *Integration) SetTags(v []EnumIntegrationTag) {
	o.Tags = v
}

// GetThirdParty returns the ThirdParty field value if set, zero value otherwise.
func (o *Integration) GetThirdParty() IntegrationThirdParty {
	if o == nil || IsNil(o.ThirdParty) {
		var ret IntegrationThirdParty
		return ret
	}
	return *o.ThirdParty
}

// GetThirdPartyOk returns a tuple with the ThirdParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetThirdPartyOk() (*IntegrationThirdParty, bool) {
	if o == nil || IsNil(o.ThirdParty) {
		return nil, false
	}
	return o.ThirdParty, true
}

// HasThirdParty returns a boolean if a field has been set.
func (o *Integration) HasThirdParty() bool {
	if o != nil && !IsNil(o.ThirdParty) {
		return true
	}

	return false
}

// SetThirdParty gets a reference to the given IntegrationThirdParty and assigns it to the ThirdParty field.
func (o *Integration) SetThirdParty(v IntegrationThirdParty) {
	o.ThirdParty = &v
}

func (o Integration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Integration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.MarketingLandingPageUrl) {
		toSerialize["marketingLandingPageUrl"] = o.MarketingLandingPageUrl
	}
	toSerialize["name"] = o.Name
	toSerialize["pingProductNames"] = o.PingProductNames
	toSerialize["publisher"] = o.Publisher
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.ThirdParty) {
		toSerialize["thirdParty"] = o.ThirdParty
	}
	return toSerialize, nil
}

type NullableIntegration struct {
	value *Integration
	isSet bool
}

func (v NullableIntegration) Get() *Integration {
	return v.value
}

func (v *NullableIntegration) Set(val *Integration) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegration(val *Integration) *NullableIntegration {
	return &NullableIntegration{value: val, isSet: true}
}

func (v NullableIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
