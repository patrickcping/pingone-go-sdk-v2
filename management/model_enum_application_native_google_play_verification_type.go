/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumApplicationNativeGooglePlayVerificationType The type of verification that should be used. The possible values are `GOOGLE` and `INTERNAL`. Using internal verification will not count against your Google API call quota. The value you select for `verificationType` determines what other parameters you must provide. When set to `GOOGLE`, you must provide `serviceAccountCredentials`. When set to `INTERNAL`, you must provide `decryptionKey` and `verificationKey`.
type EnumApplicationNativeGooglePlayVerificationType string

// List of EnumApplicationNativeGooglePlayVerificationType
const (
	ENUMAPPLICATIONNATIVEGOOGLEPLAYVERIFICATIONTYPE_GOOGLE   EnumApplicationNativeGooglePlayVerificationType = "GOOGLE"
	ENUMAPPLICATIONNATIVEGOOGLEPLAYVERIFICATIONTYPE_INTERNAL EnumApplicationNativeGooglePlayVerificationType = "INTERNAL"
)

// All allowed values of EnumApplicationNativeGooglePlayVerificationType enum
var AllowedEnumApplicationNativeGooglePlayVerificationTypeEnumValues = []EnumApplicationNativeGooglePlayVerificationType{
	"GOOGLE",
	"INTERNAL",
}

func (v *EnumApplicationNativeGooglePlayVerificationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumApplicationNativeGooglePlayVerificationType(value)
	for _, existing := range AllowedEnumApplicationNativeGooglePlayVerificationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumApplicationNativeGooglePlayVerificationType(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumApplicationNativeGooglePlayVerificationTypeFromValue returns a pointer to a valid EnumApplicationNativeGooglePlayVerificationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumApplicationNativeGooglePlayVerificationTypeFromValue(v string) (*EnumApplicationNativeGooglePlayVerificationType, error) {
	ev := EnumApplicationNativeGooglePlayVerificationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumApplicationNativeGooglePlayVerificationType: valid values are %v", v, AllowedEnumApplicationNativeGooglePlayVerificationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumApplicationNativeGooglePlayVerificationType) IsValid() bool {
	for _, existing := range AllowedEnumApplicationNativeGooglePlayVerificationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumApplicationNativeGooglePlayVerificationType value
func (v EnumApplicationNativeGooglePlayVerificationType) Ptr() *EnumApplicationNativeGooglePlayVerificationType {
	return &v
}

type NullableEnumApplicationNativeGooglePlayVerificationType struct {
	value *EnumApplicationNativeGooglePlayVerificationType
	isSet bool
}

func (v NullableEnumApplicationNativeGooglePlayVerificationType) Get() *EnumApplicationNativeGooglePlayVerificationType {
	return v.value
}

func (v *NullableEnumApplicationNativeGooglePlayVerificationType) Set(val *EnumApplicationNativeGooglePlayVerificationType) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumApplicationNativeGooglePlayVerificationType) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumApplicationNativeGooglePlayVerificationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumApplicationNativeGooglePlayVerificationType(val *EnumApplicationNativeGooglePlayVerificationType) *NullableEnumApplicationNativeGooglePlayVerificationType {
	return &NullableEnumApplicationNativeGooglePlayVerificationType{value: val, isSet: true}
}

func (v NullableEnumApplicationNativeGooglePlayVerificationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumApplicationNativeGooglePlayVerificationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
