/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumPasscodeRefreshTimeUnit The type of time unit for `mobile.passcodeRefreshDuration.duration`.  Must be SECONDS.
type EnumPasscodeRefreshTimeUnit string

// List of EnumPasscodeRefreshTimeUnit
const (
	ENUMPASSCODEREFRESHTIMEUNIT_SECONDS EnumPasscodeRefreshTimeUnit = "SECONDS"
)

// All allowed values of EnumPasscodeRefreshTimeUnit enum
var AllowedEnumPasscodeRefreshTimeUnitEnumValues = []EnumPasscodeRefreshTimeUnit{
	"SECONDS",
}

func (v *EnumPasscodeRefreshTimeUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumPasscodeRefreshTimeUnit(value)
	for _, existing := range AllowedEnumPasscodeRefreshTimeUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumPasscodeRefreshTimeUnit(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumPasscodeRefreshTimeUnitFromValue returns a pointer to a valid EnumPasscodeRefreshTimeUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumPasscodeRefreshTimeUnitFromValue(v string) (*EnumPasscodeRefreshTimeUnit, error) {
	ev := EnumPasscodeRefreshTimeUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumPasscodeRefreshTimeUnit: valid values are %v", v, AllowedEnumPasscodeRefreshTimeUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumPasscodeRefreshTimeUnit) IsValid() bool {
	for _, existing := range AllowedEnumPasscodeRefreshTimeUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumPasscodeRefreshTimeUnit value
func (v EnumPasscodeRefreshTimeUnit) Ptr() *EnumPasscodeRefreshTimeUnit {
	return &v
}

type NullableEnumPasscodeRefreshTimeUnit struct {
	value *EnumPasscodeRefreshTimeUnit
	isSet bool
}

func (v NullableEnumPasscodeRefreshTimeUnit) Get() *EnumPasscodeRefreshTimeUnit {
	return v.value
}

func (v *NullableEnumPasscodeRefreshTimeUnit) Set(val *EnumPasscodeRefreshTimeUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumPasscodeRefreshTimeUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumPasscodeRefreshTimeUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumPasscodeRefreshTimeUnit(val *EnumPasscodeRefreshTimeUnit) *NullableEnumPasscodeRefreshTimeUnit {
	return &NullableEnumPasscodeRefreshTimeUnit{value: val, isSet: true}
}

func (v NullableEnumPasscodeRefreshTimeUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumPasscodeRefreshTimeUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
