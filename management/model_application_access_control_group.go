/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationAccessControlGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationAccessControlGroup{}

// ApplicationAccessControlGroup struct for ApplicationAccessControlGroup
type ApplicationAccessControlGroup struct {
	Type EnumApplicationAccessControlGroupType `json:"type"`
	// A set that specifies the group IDs for the groups the actor must belong to for access to the application.
	Groups []ApplicationAccessControlGroupGroupsInner `json:"groups"`
}

// NewApplicationAccessControlGroup instantiates a new ApplicationAccessControlGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationAccessControlGroup(type_ EnumApplicationAccessControlGroupType, groups []ApplicationAccessControlGroupGroupsInner) *ApplicationAccessControlGroup {
	this := ApplicationAccessControlGroup{}
	this.Type = type_
	this.Groups = groups
	return &this
}

// NewApplicationAccessControlGroupWithDefaults instantiates a new ApplicationAccessControlGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationAccessControlGroupWithDefaults() *ApplicationAccessControlGroup {
	this := ApplicationAccessControlGroup{}
	return &this
}

// GetType returns the Type field value
func (o *ApplicationAccessControlGroup) GetType() EnumApplicationAccessControlGroupType {
	if o == nil {
		var ret EnumApplicationAccessControlGroupType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationAccessControlGroup) GetTypeOk() (*EnumApplicationAccessControlGroupType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationAccessControlGroup) SetType(v EnumApplicationAccessControlGroupType) {
	o.Type = v
}

// GetGroups returns the Groups field value
func (o *ApplicationAccessControlGroup) GetGroups() []ApplicationAccessControlGroupGroupsInner {
	if o == nil {
		var ret []ApplicationAccessControlGroupGroupsInner
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ApplicationAccessControlGroup) GetGroupsOk() ([]ApplicationAccessControlGroupGroupsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ApplicationAccessControlGroup) SetGroups(v []ApplicationAccessControlGroupGroupsInner) {
	o.Groups = v
}

func (o ApplicationAccessControlGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationAccessControlGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["groups"] = o.Groups
	return toSerialize, nil
}

type NullableApplicationAccessControlGroup struct {
	value *ApplicationAccessControlGroup
	isSet bool
}

func (v NullableApplicationAccessControlGroup) Get() *ApplicationAccessControlGroup {
	return v.value
}

func (v *NullableApplicationAccessControlGroup) Set(val *ApplicationAccessControlGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationAccessControlGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationAccessControlGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationAccessControlGroup(val *ApplicationAccessControlGroup) *NullableApplicationAccessControlGroup {
	return &NullableApplicationAccessControlGroup{value: val, isSet: true}
}

func (v NullableApplicationAccessControlGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationAccessControlGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
