/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the IntegrationVersionIntegrationKitAllOfIntegratedWith type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationVersionIntegrationKitAllOfIntegratedWith{}

// IntegrationVersionIntegrationKitAllOfIntegratedWith Ping product integration details.
type IntegrationVersionIntegrationKitAllOfIntegratedWith struct {
	Name EnumIntegrationVersionIntegrationKitIntegratedWithName `json:"name"`
	// Earliest version of the integrated Ping product.
	MinVersion *string `json:"minVersion,omitempty"`
	// Latest version of the integrated Ping product.
	MaxVersion *string `json:"maxVersion,omitempty"`
}

// NewIntegrationVersionIntegrationKitAllOfIntegratedWith instantiates a new IntegrationVersionIntegrationKitAllOfIntegratedWith object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationVersionIntegrationKitAllOfIntegratedWith(name EnumIntegrationVersionIntegrationKitIntegratedWithName) *IntegrationVersionIntegrationKitAllOfIntegratedWith {
	this := IntegrationVersionIntegrationKitAllOfIntegratedWith{}
	this.Name = name
	return &this
}

// NewIntegrationVersionIntegrationKitAllOfIntegratedWithWithDefaults instantiates a new IntegrationVersionIntegrationKitAllOfIntegratedWith object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationVersionIntegrationKitAllOfIntegratedWithWithDefaults() *IntegrationVersionIntegrationKitAllOfIntegratedWith {
	this := IntegrationVersionIntegrationKitAllOfIntegratedWith{}
	return &this
}

// GetName returns the Name field value
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetName() EnumIntegrationVersionIntegrationKitIntegratedWithName {
	if o == nil {
		var ret EnumIntegrationVersionIntegrationKitIntegratedWithName
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetNameOk() (*EnumIntegrationVersionIntegrationKitIntegratedWithName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) SetName(v EnumIntegrationVersionIntegrationKitIntegratedWithName) {
	o.Name = v
}

// GetMinVersion returns the MinVersion field value if set, zero value otherwise.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetMinVersion() string {
	if o == nil || IsNil(o.MinVersion) {
		var ret string
		return ret
	}
	return *o.MinVersion
}

// GetMinVersionOk returns a tuple with the MinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetMinVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MinVersion) {
		return nil, false
	}
	return o.MinVersion, true
}

// HasMinVersion returns a boolean if a field has been set.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) HasMinVersion() bool {
	if o != nil && !IsNil(o.MinVersion) {
		return true
	}

	return false
}

// SetMinVersion gets a reference to the given string and assigns it to the MinVersion field.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) SetMinVersion(v string) {
	o.MinVersion = &v
}

// GetMaxVersion returns the MaxVersion field value if set, zero value otherwise.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetMaxVersion() string {
	if o == nil || IsNil(o.MaxVersion) {
		var ret string
		return ret
	}
	return *o.MaxVersion
}

// GetMaxVersionOk returns a tuple with the MaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) GetMaxVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MaxVersion) {
		return nil, false
	}
	return o.MaxVersion, true
}

// HasMaxVersion returns a boolean if a field has been set.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) HasMaxVersion() bool {
	if o != nil && !IsNil(o.MaxVersion) {
		return true
	}

	return false
}

// SetMaxVersion gets a reference to the given string and assigns it to the MaxVersion field.
func (o *IntegrationVersionIntegrationKitAllOfIntegratedWith) SetMaxVersion(v string) {
	o.MaxVersion = &v
}

func (o IntegrationVersionIntegrationKitAllOfIntegratedWith) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationVersionIntegrationKitAllOfIntegratedWith) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.MinVersion) {
		toSerialize["minVersion"] = o.MinVersion
	}
	if !IsNil(o.MaxVersion) {
		toSerialize["maxVersion"] = o.MaxVersion
	}
	return toSerialize, nil
}

type NullableIntegrationVersionIntegrationKitAllOfIntegratedWith struct {
	value *IntegrationVersionIntegrationKitAllOfIntegratedWith
	isSet bool
}

func (v NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) Get() *IntegrationVersionIntegrationKitAllOfIntegratedWith {
	return v.value
}

func (v *NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) Set(val *IntegrationVersionIntegrationKitAllOfIntegratedWith) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationVersionIntegrationKitAllOfIntegratedWith(val *IntegrationVersionIntegrationKitAllOfIntegratedWith) *NullableIntegrationVersionIntegrationKitAllOfIntegratedWith {
	return &NullableIntegrationVersionIntegrationKitAllOfIntegratedWith{value: val, isSet: true}
}

func (v NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationVersionIntegrationKitAllOfIntegratedWith) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
