/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the IntegrationVersionSAMLAllOfThirdParty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationVersionSAMLAllOfThirdParty{}

// IntegrationVersionSAMLAllOfThirdParty Third-party IdP information.
type IntegrationVersionSAMLAllOfThirdParty struct {
	Metadata     *IntegrationVersionSAMLAllOfThirdPartyMetadata     `json:"metadata,omitempty"`
	Instructions *IntegrationVersionSAMLAllOfThirdPartyInstructions `json:"instructions,omitempty"`
}

// NewIntegrationVersionSAMLAllOfThirdParty instantiates a new IntegrationVersionSAMLAllOfThirdParty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationVersionSAMLAllOfThirdParty() *IntegrationVersionSAMLAllOfThirdParty {
	this := IntegrationVersionSAMLAllOfThirdParty{}
	return &this
}

// NewIntegrationVersionSAMLAllOfThirdPartyWithDefaults instantiates a new IntegrationVersionSAMLAllOfThirdParty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationVersionSAMLAllOfThirdPartyWithDefaults() *IntegrationVersionSAMLAllOfThirdParty {
	this := IntegrationVersionSAMLAllOfThirdParty{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IntegrationVersionSAMLAllOfThirdParty) GetMetadata() IntegrationVersionSAMLAllOfThirdPartyMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret IntegrationVersionSAMLAllOfThirdPartyMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationVersionSAMLAllOfThirdParty) GetMetadataOk() (*IntegrationVersionSAMLAllOfThirdPartyMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IntegrationVersionSAMLAllOfThirdParty) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given IntegrationVersionSAMLAllOfThirdPartyMetadata and assigns it to the Metadata field.
func (o *IntegrationVersionSAMLAllOfThirdParty) SetMetadata(v IntegrationVersionSAMLAllOfThirdPartyMetadata) {
	o.Metadata = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *IntegrationVersionSAMLAllOfThirdParty) GetInstructions() IntegrationVersionSAMLAllOfThirdPartyInstructions {
	if o == nil || IsNil(o.Instructions) {
		var ret IntegrationVersionSAMLAllOfThirdPartyInstructions
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationVersionSAMLAllOfThirdParty) GetInstructionsOk() (*IntegrationVersionSAMLAllOfThirdPartyInstructions, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *IntegrationVersionSAMLAllOfThirdParty) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given IntegrationVersionSAMLAllOfThirdPartyInstructions and assigns it to the Instructions field.
func (o *IntegrationVersionSAMLAllOfThirdParty) SetInstructions(v IntegrationVersionSAMLAllOfThirdPartyInstructions) {
	o.Instructions = &v
}

func (o IntegrationVersionSAMLAllOfThirdParty) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationVersionSAMLAllOfThirdParty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	return toSerialize, nil
}

type NullableIntegrationVersionSAMLAllOfThirdParty struct {
	value *IntegrationVersionSAMLAllOfThirdParty
	isSet bool
}

func (v NullableIntegrationVersionSAMLAllOfThirdParty) Get() *IntegrationVersionSAMLAllOfThirdParty {
	return v.value
}

func (v *NullableIntegrationVersionSAMLAllOfThirdParty) Set(val *IntegrationVersionSAMLAllOfThirdParty) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationVersionSAMLAllOfThirdParty) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationVersionSAMLAllOfThirdParty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationVersionSAMLAllOfThirdParty(val *IntegrationVersionSAMLAllOfThirdParty) *NullableIntegrationVersionSAMLAllOfThirdParty {
	return &NullableIntegrationVersionSAMLAllOfThirdParty{value: val, isSet: true}
}

func (v NullableIntegrationVersionSAMLAllOfThirdParty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationVersionSAMLAllOfThirdParty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
