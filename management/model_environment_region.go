/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnvironmentRegion - struct for EnvironmentRegion
type EnvironmentRegion struct {
	EnumRegionCode *EnumRegionCode
	String *string
}

// EnumRegionCodeAsEnvironmentRegion is a convenience function that returns EnumRegionCode wrapped in EnvironmentRegion
func EnumRegionCodeAsEnvironmentRegion(v *EnumRegionCode) EnvironmentRegion {
	return EnvironmentRegion{
		EnumRegionCode: v,
	}
}

// stringAsEnvironmentRegion is a convenience function that returns string wrapped in EnvironmentRegion
func StringAsEnvironmentRegion(v *string) EnvironmentRegion {
	return EnvironmentRegion{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *EnvironmentRegion) UnmarshalJSON(data []byte) error {

	var err error
	match := false
	// try to unmarshal data into EnumRegionCode
	err = newStrictDecoder(data).Decode(&dst.EnumRegionCode)
	if err == nil {
		jsonEnumRegionCode, _ := json.Marshal(dst.EnumRegionCode)
		if string(jsonEnumRegionCode) == "{}" || dst.EnumRegionCode == nil || *dst.EnumRegionCode == "UNKNOWN" { // empty struct
			dst.EnumRegionCode = nil
		} else {
			match = true
		}
	} else {
		dst.EnumRegionCode = nil
	}
	
	if !match {
		// try to unmarshal data into String
		err = newStrictDecoder(data).Decode(&dst.String)
		if err == nil {
			jsonString, _ := json.Marshal(dst.String)
			if string(jsonString) == "{}" { // empty struct
				dst.String = nil
			} else {
				match = true
			}
		} else {
			dst.String = nil
		}
	}
			
	if !match { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EnvironmentRegion)")
	}
			
	return nil
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EnvironmentRegion) MarshalJSON() ([]byte, error) {
	if src.EnumRegionCode != nil {
		return json.Marshal(&src.EnumRegionCode)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EnvironmentRegion) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.EnumRegionCode != nil {
		return obj.EnumRegionCode
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableEnvironmentRegion struct {
	value *EnvironmentRegion
	isSet bool
}

func (v NullableEnvironmentRegion) Get() *EnvironmentRegion {
	return v.value
}

func (v *NullableEnvironmentRegion) Set(val *EnvironmentRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentRegion(val *EnvironmentRegion) *NullableEnvironmentRegion {
	return &NullableEnvironmentRegion{value: val, isSet: true}
}

func (v NullableEnvironmentRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


