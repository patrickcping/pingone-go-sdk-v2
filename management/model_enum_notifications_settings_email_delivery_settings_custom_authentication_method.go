/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod Use the value `BASIC` if your authentication with the email provider uses a username and password. Use `BEARER` if your authentication is based on the use of a bearer token.
type EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod string

// List of EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod
const (
	ENUMNOTIFICATIONSSETTINGSEMAILDELIVERYSETTINGSCUSTOMAUTHENTICATIONMETHOD_BASIC  EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod = "BASIC"
	ENUMNOTIFICATIONSSETTINGSEMAILDELIVERYSETTINGSCUSTOMAUTHENTICATIONMETHOD_BEARER EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod = "BEARER"
)

// All allowed values of EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod enum
var AllowedEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodEnumValues = []EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod{
	"BASIC",
	"BEARER",
}

func (v *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod(value)
	for _, existing := range AllowedEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodFromValue returns a pointer to a valid EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodFromValue(v string) (*EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod, error) {
	ev := EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod: valid values are %v", v, AllowedEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) IsValid() bool {
	for _, existing := range AllowedEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod value
func (v EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) Ptr() *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod {
	return &v
}

type NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod struct {
	value *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod
	isSet bool
}

func (v NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) Get() *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod {
	return v.value
}

func (v *NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) Set(val *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod(val *EnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) *NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod {
	return &NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod{value: val, isSet: true}
}

func (v NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumNotificationsSettingsEmailDeliverySettingsCustomAuthenticationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
