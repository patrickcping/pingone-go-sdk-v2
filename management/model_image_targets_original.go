/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ImageTargetsOriginal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageTargetsOriginal{}

// ImageTargetsOriginal struct for ImageTargetsOriginal
type ImageTargetsOriginal struct {
	// A string that specifies the URL or fully qualified path to the image source file.
	Href *string `json:"href,omitempty"`
	// A string that specifies the UUID of the target image.
	Id   *string          `json:"id,omitempty"`
	Type *EnumImageFormat `json:"type,omitempty"`
	// The width of the image (in pixels).
	Width *int32 `json:"width,omitempty"`
	// The height of the image (in pixels).
	Height *int32 `json:"height,omitempty"`
}

// NewImageTargetsOriginal instantiates a new ImageTargetsOriginal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageTargetsOriginal() *ImageTargetsOriginal {
	this := ImageTargetsOriginal{}
	return &this
}

// NewImageTargetsOriginalWithDefaults instantiates a new ImageTargetsOriginal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageTargetsOriginalWithDefaults() *ImageTargetsOriginal {
	this := ImageTargetsOriginal{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ImageTargetsOriginal) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageTargetsOriginal) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ImageTargetsOriginal) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ImageTargetsOriginal) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageTargetsOriginal) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageTargetsOriginal) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageTargetsOriginal) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageTargetsOriginal) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ImageTargetsOriginal) GetType() EnumImageFormat {
	if o == nil || IsNil(o.Type) {
		var ret EnumImageFormat
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageTargetsOriginal) GetTypeOk() (*EnumImageFormat, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ImageTargetsOriginal) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given EnumImageFormat and assigns it to the Type field.
func (o *ImageTargetsOriginal) SetType(v EnumImageFormat) {
	o.Type = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ImageTargetsOriginal) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageTargetsOriginal) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ImageTargetsOriginal) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ImageTargetsOriginal) SetWidth(v int32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ImageTargetsOriginal) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageTargetsOriginal) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ImageTargetsOriginal) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ImageTargetsOriginal) SetHeight(v int32) {
	o.Height = &v
}

func (o ImageTargetsOriginal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageTargetsOriginal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return toSerialize, nil
}

type NullableImageTargetsOriginal struct {
	value *ImageTargetsOriginal
	isSet bool
}

func (v NullableImageTargetsOriginal) Get() *ImageTargetsOriginal {
	return v.value
}

func (v *NullableImageTargetsOriginal) Set(val *ImageTargetsOriginal) {
	v.value = val
	v.isSet = true
}

func (v NullableImageTargetsOriginal) IsSet() bool {
	return v.isSet
}

func (v *NullableImageTargetsOriginal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageTargetsOriginal(val *ImageTargetsOriginal) *NullableImageTargetsOriginal {
	return &NullableImageTargetsOriginal{value: val, isSet: true}
}

func (v NullableImageTargetsOriginal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageTargetsOriginal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
