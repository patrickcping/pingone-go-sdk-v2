/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumResourceIntrospectEndpointAuthMethod The client authentication methods supported by the token endpoint. Options are `NONE`, `CLIENT_SECRET_BASIC`, and `CLIENT_SECRET_POST`.
type EnumResourceIntrospectEndpointAuthMethod string

// List of EnumResourceIntrospectEndpointAuthMethod
const (
	ENUMRESOURCEINTROSPECTENDPOINTAUTHMETHOD_NONE                EnumResourceIntrospectEndpointAuthMethod = "NONE"
	ENUMRESOURCEINTROSPECTENDPOINTAUTHMETHOD_CLIENT_SECRET_BASIC EnumResourceIntrospectEndpointAuthMethod = "CLIENT_SECRET_BASIC"
	ENUMRESOURCEINTROSPECTENDPOINTAUTHMETHOD_CLIENT_SECRET_POST  EnumResourceIntrospectEndpointAuthMethod = "CLIENT_SECRET_POST"
)

// All allowed values of EnumResourceIntrospectEndpointAuthMethod enum
var AllowedEnumResourceIntrospectEndpointAuthMethodEnumValues = []EnumResourceIntrospectEndpointAuthMethod{
	"NONE",
	"CLIENT_SECRET_BASIC",
	"CLIENT_SECRET_POST",
}

func (v *EnumResourceIntrospectEndpointAuthMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumResourceIntrospectEndpointAuthMethod(value)
	for _, existing := range AllowedEnumResourceIntrospectEndpointAuthMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumResourceIntrospectEndpointAuthMethod(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumResourceIntrospectEndpointAuthMethodFromValue returns a pointer to a valid EnumResourceIntrospectEndpointAuthMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumResourceIntrospectEndpointAuthMethodFromValue(v string) (*EnumResourceIntrospectEndpointAuthMethod, error) {
	ev := EnumResourceIntrospectEndpointAuthMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumResourceIntrospectEndpointAuthMethod: valid values are %v", v, AllowedEnumResourceIntrospectEndpointAuthMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumResourceIntrospectEndpointAuthMethod) IsValid() bool {
	for _, existing := range AllowedEnumResourceIntrospectEndpointAuthMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumResourceIntrospectEndpointAuthMethod value
func (v EnumResourceIntrospectEndpointAuthMethod) Ptr() *EnumResourceIntrospectEndpointAuthMethod {
	return &v
}

type NullableEnumResourceIntrospectEndpointAuthMethod struct {
	value *EnumResourceIntrospectEndpointAuthMethod
	isSet bool
}

func (v NullableEnumResourceIntrospectEndpointAuthMethod) Get() *EnumResourceIntrospectEndpointAuthMethod {
	return v.value
}

func (v *NullableEnumResourceIntrospectEndpointAuthMethod) Set(val *EnumResourceIntrospectEndpointAuthMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumResourceIntrospectEndpointAuthMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumResourceIntrospectEndpointAuthMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumResourceIntrospectEndpointAuthMethod(val *EnumResourceIntrospectEndpointAuthMethod) *NullableEnumResourceIntrospectEndpointAuthMethod {
	return &NullableEnumResourceIntrospectEndpointAuthMethod{value: val, isSet: true}
}

func (v NullableEnumResourceIntrospectEndpointAuthMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumResourceIntrospectEndpointAuthMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
