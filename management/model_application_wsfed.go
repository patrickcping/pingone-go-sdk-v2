/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the ApplicationWSFED type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationWSFED{}

// ApplicationWSFED struct for ApplicationWSFED
type ApplicationWSFED struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	AccessControl *ApplicationAccessControl `json:"accessControl,omitempty"`
	// The time the resource was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// A string that specifies the description of the application.
	Description *string `json:"description,omitempty"`
	// A string that specifies the current enabled state of the application. Options are ENABLED or DISABLED.
	Enabled bool `json:"enabled"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	// A boolean to specify whether the application is hidden in the application portal despite the configured group access policy.
	HiddenFromAppPortal *bool `json:"hiddenFromAppPortal,omitempty"`
	Icon *ApplicationIcon `json:"icon,omitempty"`
	// A string that specifies the application ID.
	Id *string `json:"id,omitempty"`
	// A string that specifies the custom login page URL for the application. If you set the loginPageUrl property for applications in an environment that sets a custom domain, the URL should include the top-level domain and at least one additional domain level. Warning To avoid issues with third-party cookies in some browsers, a custom domain must be used, giving your PingOne environment the same parent domain as your authentication application. For more information about custom domains, see Custom domains.
	LoginPageUrl *string `json:"loginPageUrl,omitempty"`
	// A string that specifies the name of the application. This is a required property.
	Name string `json:"name"`
	Protocol EnumApplicationProtocol `json:"protocol"`
	Type EnumApplicationType `json:"type"`
	// The time the resource was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// The service provider ID. Defaults to `urn:federation:MicrosoftOnline`.
	AudienceRestriction *string `json:"audienceRestriction,omitempty"`
	CorsSettings *ApplicationCorsSettings `json:"corsSettings,omitempty"`
	// The federated domain name (for example, the Azure custom domain).
	DomainName string `json:"domainName"`
	IdpSigning ApplicationWSFEDAllOfIdpSigning `json:"idpSigning"`
	Kerberos *ApplicationWSFEDAllOfKerberos `json:"kerberos,omitempty"`
	// The URL that the replying party (such as, Office365) uses to accept submissions of RequestSecurityTokenResponse messages that are a result of SSO requests.
	ReplyUrl string `json:"replyUrl"`
	// The single logout endpoint URL.
	SloEndpoint *string `json:"sloEndpoint,omitempty"`
	SubjectNameIdentifierFormat *EnumApplicationWSFEDSubjectNameIdentifierFormat `json:"subjectNameIdentifierFormat,omitempty"`
}

// NewApplicationWSFED instantiates a new ApplicationWSFED object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationWSFED(enabled bool, name string, protocol EnumApplicationProtocol, type_ EnumApplicationType, domainName string, idpSigning ApplicationWSFEDAllOfIdpSigning, replyUrl string) *ApplicationWSFED {
	this := ApplicationWSFED{}
	this.Enabled = enabled
	this.Name = name
	this.Protocol = protocol
	this.Type = type_
	var audienceRestriction string = "urn:federation:MicrosoftOnline"
	this.AudienceRestriction = &audienceRestriction
	this.DomainName = domainName
	this.IdpSigning = idpSigning
	this.ReplyUrl = replyUrl
	return &this
}

// NewApplicationWSFEDWithDefaults instantiates a new ApplicationWSFED object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWSFEDWithDefaults() *ApplicationWSFED {
	this := ApplicationWSFED{}
	var audienceRestriction string = "urn:federation:MicrosoftOnline"
	this.AudienceRestriction = &audienceRestriction
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *ApplicationWSFED) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetAccessControl returns the AccessControl field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetAccessControl() ApplicationAccessControl {
	if o == nil || IsNil(o.AccessControl) {
		var ret ApplicationAccessControl
		return ret
	}
	return *o.AccessControl
}

// GetAccessControlOk returns a tuple with the AccessControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetAccessControlOk() (*ApplicationAccessControl, bool) {
	if o == nil || IsNil(o.AccessControl) {
		return nil, false
	}
	return o.AccessControl, true
}

// HasAccessControl returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasAccessControl() bool {
	if o != nil && !IsNil(o.AccessControl) {
		return true
	}

	return false
}

// SetAccessControl gets a reference to the given ApplicationAccessControl and assigns it to the AccessControl field.
func (o *ApplicationWSFED) SetAccessControl(v ApplicationAccessControl) {
	o.AccessControl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ApplicationWSFED) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApplicationWSFED) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ApplicationWSFED) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ApplicationWSFED) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetEnvironment() ObjectEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *ApplicationWSFED) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetHiddenFromAppPortal returns the HiddenFromAppPortal field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetHiddenFromAppPortal() bool {
	if o == nil || IsNil(o.HiddenFromAppPortal) {
		var ret bool
		return ret
	}
	return *o.HiddenFromAppPortal
}

// GetHiddenFromAppPortalOk returns a tuple with the HiddenFromAppPortal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetHiddenFromAppPortalOk() (*bool, bool) {
	if o == nil || IsNil(o.HiddenFromAppPortal) {
		return nil, false
	}
	return o.HiddenFromAppPortal, true
}

// HasHiddenFromAppPortal returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasHiddenFromAppPortal() bool {
	if o != nil && !IsNil(o.HiddenFromAppPortal) {
		return true
	}

	return false
}

// SetHiddenFromAppPortal gets a reference to the given bool and assigns it to the HiddenFromAppPortal field.
func (o *ApplicationWSFED) SetHiddenFromAppPortal(v bool) {
	o.HiddenFromAppPortal = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetIcon() ApplicationIcon {
	if o == nil || IsNil(o.Icon) {
		var ret ApplicationIcon
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetIconOk() (*ApplicationIcon, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given ApplicationIcon and assigns it to the Icon field.
func (o *ApplicationWSFED) SetIcon(v ApplicationIcon) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationWSFED) SetId(v string) {
	o.Id = &v
}

// GetLoginPageUrl returns the LoginPageUrl field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetLoginPageUrl() string {
	if o == nil || IsNil(o.LoginPageUrl) {
		var ret string
		return ret
	}
	return *o.LoginPageUrl
}

// GetLoginPageUrlOk returns a tuple with the LoginPageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetLoginPageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LoginPageUrl) {
		return nil, false
	}
	return o.LoginPageUrl, true
}

// HasLoginPageUrl returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasLoginPageUrl() bool {
	if o != nil && !IsNil(o.LoginPageUrl) {
		return true
	}

	return false
}

// SetLoginPageUrl gets a reference to the given string and assigns it to the LoginPageUrl field.
func (o *ApplicationWSFED) SetLoginPageUrl(v string) {
	o.LoginPageUrl = &v
}

// GetName returns the Name field value
func (o *ApplicationWSFED) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationWSFED) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *ApplicationWSFED) GetProtocol() EnumApplicationProtocol {
	if o == nil {
		var ret EnumApplicationProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetProtocolOk() (*EnumApplicationProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ApplicationWSFED) SetProtocol(v EnumApplicationProtocol) {
	o.Protocol = v
}

// GetType returns the Type field value
func (o *ApplicationWSFED) GetType() EnumApplicationType {
	if o == nil {
		var ret EnumApplicationType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetTypeOk() (*EnumApplicationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationWSFED) SetType(v EnumApplicationType) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ApplicationWSFED) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetAudienceRestriction returns the AudienceRestriction field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetAudienceRestriction() string {
	if o == nil || IsNil(o.AudienceRestriction) {
		var ret string
		return ret
	}
	return *o.AudienceRestriction
}

// GetAudienceRestrictionOk returns a tuple with the AudienceRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetAudienceRestrictionOk() (*string, bool) {
	if o == nil || IsNil(o.AudienceRestriction) {
		return nil, false
	}
	return o.AudienceRestriction, true
}

// HasAudienceRestriction returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasAudienceRestriction() bool {
	if o != nil && !IsNil(o.AudienceRestriction) {
		return true
	}

	return false
}

// SetAudienceRestriction gets a reference to the given string and assigns it to the AudienceRestriction field.
func (o *ApplicationWSFED) SetAudienceRestriction(v string) {
	o.AudienceRestriction = &v
}

// GetCorsSettings returns the CorsSettings field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetCorsSettings() ApplicationCorsSettings {
	if o == nil || IsNil(o.CorsSettings) {
		var ret ApplicationCorsSettings
		return ret
	}
	return *o.CorsSettings
}

// GetCorsSettingsOk returns a tuple with the CorsSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetCorsSettingsOk() (*ApplicationCorsSettings, bool) {
	if o == nil || IsNil(o.CorsSettings) {
		return nil, false
	}
	return o.CorsSettings, true
}

// HasCorsSettings returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasCorsSettings() bool {
	if o != nil && !IsNil(o.CorsSettings) {
		return true
	}

	return false
}

// SetCorsSettings gets a reference to the given ApplicationCorsSettings and assigns it to the CorsSettings field.
func (o *ApplicationWSFED) SetCorsSettings(v ApplicationCorsSettings) {
	o.CorsSettings = &v
}

// GetDomainName returns the DomainName field value
func (o *ApplicationWSFED) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *ApplicationWSFED) SetDomainName(v string) {
	o.DomainName = v
}

// GetIdpSigning returns the IdpSigning field value
func (o *ApplicationWSFED) GetIdpSigning() ApplicationWSFEDAllOfIdpSigning {
	if o == nil {
		var ret ApplicationWSFEDAllOfIdpSigning
		return ret
	}

	return o.IdpSigning
}

// GetIdpSigningOk returns a tuple with the IdpSigning field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetIdpSigningOk() (*ApplicationWSFEDAllOfIdpSigning, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpSigning, true
}

// SetIdpSigning sets field value
func (o *ApplicationWSFED) SetIdpSigning(v ApplicationWSFEDAllOfIdpSigning) {
	o.IdpSigning = v
}

// GetKerberos returns the Kerberos field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetKerberos() ApplicationWSFEDAllOfKerberos {
	if o == nil || IsNil(o.Kerberos) {
		var ret ApplicationWSFEDAllOfKerberos
		return ret
	}
	return *o.Kerberos
}

// GetKerberosOk returns a tuple with the Kerberos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetKerberosOk() (*ApplicationWSFEDAllOfKerberos, bool) {
	if o == nil || IsNil(o.Kerberos) {
		return nil, false
	}
	return o.Kerberos, true
}

// HasKerberos returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasKerberos() bool {
	if o != nil && !IsNil(o.Kerberos) {
		return true
	}

	return false
}

// SetKerberos gets a reference to the given ApplicationWSFEDAllOfKerberos and assigns it to the Kerberos field.
func (o *ApplicationWSFED) SetKerberos(v ApplicationWSFEDAllOfKerberos) {
	o.Kerberos = &v
}

// GetReplyUrl returns the ReplyUrl field value
func (o *ApplicationWSFED) GetReplyUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplyUrl
}

// GetReplyUrlOk returns a tuple with the ReplyUrl field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetReplyUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplyUrl, true
}

// SetReplyUrl sets field value
func (o *ApplicationWSFED) SetReplyUrl(v string) {
	o.ReplyUrl = v
}

// GetSloEndpoint returns the SloEndpoint field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetSloEndpoint() string {
	if o == nil || IsNil(o.SloEndpoint) {
		var ret string
		return ret
	}
	return *o.SloEndpoint
}

// GetSloEndpointOk returns a tuple with the SloEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetSloEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.SloEndpoint) {
		return nil, false
	}
	return o.SloEndpoint, true
}

// HasSloEndpoint returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasSloEndpoint() bool {
	if o != nil && !IsNil(o.SloEndpoint) {
		return true
	}

	return false
}

// SetSloEndpoint gets a reference to the given string and assigns it to the SloEndpoint field.
func (o *ApplicationWSFED) SetSloEndpoint(v string) {
	o.SloEndpoint = &v
}

// GetSubjectNameIdentifierFormat returns the SubjectNameIdentifierFormat field value if set, zero value otherwise.
func (o *ApplicationWSFED) GetSubjectNameIdentifierFormat() EnumApplicationWSFEDSubjectNameIdentifierFormat {
	if o == nil || IsNil(o.SubjectNameIdentifierFormat) {
		var ret EnumApplicationWSFEDSubjectNameIdentifierFormat
		return ret
	}
	return *o.SubjectNameIdentifierFormat
}

// GetSubjectNameIdentifierFormatOk returns a tuple with the SubjectNameIdentifierFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFED) GetSubjectNameIdentifierFormatOk() (*EnumApplicationWSFEDSubjectNameIdentifierFormat, bool) {
	if o == nil || IsNil(o.SubjectNameIdentifierFormat) {
		return nil, false
	}
	return o.SubjectNameIdentifierFormat, true
}

// HasSubjectNameIdentifierFormat returns a boolean if a field has been set.
func (o *ApplicationWSFED) HasSubjectNameIdentifierFormat() bool {
	if o != nil && !IsNil(o.SubjectNameIdentifierFormat) {
		return true
	}

	return false
}

// SetSubjectNameIdentifierFormat gets a reference to the given EnumApplicationWSFEDSubjectNameIdentifierFormat and assigns it to the SubjectNameIdentifierFormat field.
func (o *ApplicationWSFED) SetSubjectNameIdentifierFormat(v EnumApplicationWSFEDSubjectNameIdentifierFormat) {
	o.SubjectNameIdentifierFormat = &v
}

func (o ApplicationWSFED) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationWSFED) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.AccessControl) {
		toSerialize["accessControl"] = o.AccessControl
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.HiddenFromAppPortal) {
		toSerialize["hiddenFromAppPortal"] = o.HiddenFromAppPortal
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LoginPageUrl) {
		toSerialize["loginPageUrl"] = o.LoginPageUrl
	}
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	toSerialize["type"] = o.Type
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.AudienceRestriction) {
		toSerialize["audienceRestriction"] = o.AudienceRestriction
	}
	if !IsNil(o.CorsSettings) {
		toSerialize["corsSettings"] = o.CorsSettings
	}
	toSerialize["domainName"] = o.DomainName
	toSerialize["idpSigning"] = o.IdpSigning
	if !IsNil(o.Kerberos) {
		toSerialize["kerberos"] = o.Kerberos
	}
	toSerialize["replyUrl"] = o.ReplyUrl
	if !IsNil(o.SloEndpoint) {
		toSerialize["sloEndpoint"] = o.SloEndpoint
	}
	if !IsNil(o.SubjectNameIdentifierFormat) {
		toSerialize["subjectNameIdentifierFormat"] = o.SubjectNameIdentifierFormat
	}
	return toSerialize, nil
}

type NullableApplicationWSFED struct {
	value *ApplicationWSFED
	isSet bool
}

func (v NullableApplicationWSFED) Get() *ApplicationWSFED {
	return v.value
}

func (v *NullableApplicationWSFED) Set(val *ApplicationWSFED) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationWSFED) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationWSFED) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationWSFED(val *ApplicationWSFED) *NullableApplicationWSFED {
	return &NullableApplicationWSFED{value: val, isSet: true}
}

func (v NullableApplicationWSFED) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationWSFED) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


