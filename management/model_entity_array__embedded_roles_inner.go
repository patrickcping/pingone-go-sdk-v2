/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EntityArrayEmbeddedRolesInner - struct for EntityArrayEmbeddedRolesInner
type EntityArrayEmbeddedRolesInner struct {
	CustomAdminRole               *CustomAdminRole
	Role                          *Role
	UserApplicationRoleAssignment *UserApplicationRoleAssignment
}

// CustomAdminRoleAsEntityArrayEmbeddedRolesInner is a convenience function that returns CustomAdminRole wrapped in EntityArrayEmbeddedRolesInner
func CustomAdminRoleAsEntityArrayEmbeddedRolesInner(v *CustomAdminRole) EntityArrayEmbeddedRolesInner {
	return EntityArrayEmbeddedRolesInner{
		CustomAdminRole: v,
	}
}

// RoleAsEntityArrayEmbeddedRolesInner is a convenience function that returns Role wrapped in EntityArrayEmbeddedRolesInner
func RoleAsEntityArrayEmbeddedRolesInner(v *Role) EntityArrayEmbeddedRolesInner {
	return EntityArrayEmbeddedRolesInner{
		Role: v,
	}
}

// UserApplicationRoleAssignmentAsEntityArrayEmbeddedRolesInner is a convenience function that returns UserApplicationRoleAssignment wrapped in EntityArrayEmbeddedRolesInner
func UserApplicationRoleAssignmentAsEntityArrayEmbeddedRolesInner(v *UserApplicationRoleAssignment) EntityArrayEmbeddedRolesInner {
	return EntityArrayEmbeddedRolesInner{
		UserApplicationRoleAssignment: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *EntityArrayEmbeddedRolesInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CustomAdminRole
	err = json.Unmarshal(data, &dst.CustomAdminRole)
	if err == nil {
		if dst.CustomAdminRole.Type != nil && *dst.CustomAdminRole.Type == ENUMCUSTOMADMINROLETYPE_CUSTOM { // custom role type
			return nil // data stored in dst.CustomAdminRole, return on the first match
		} else {
			dst.CustomAdminRole = nil
		}
	} else {
		dst.CustomAdminRole = nil
	}
	// try to unmarshal JSON data into Role
	err = json.Unmarshal(data, &dst.Role)
	if err == nil {
		jsonRole, _ := json.Marshal(dst.Role)
		if string(jsonRole) == "{}" { // empty struct
			dst.Role = nil
		} else {
			if dst.Role.Permissions == nil { // we expect an action for this data type
				dst.Role = nil
			} else {
				return nil // data stored in dst.Role, return on the first match
			}
		}
	} else {
		dst.Role = nil
	}
	// try to unmarshal JSON data into UserApplicationRoleAssignment
	err = json.Unmarshal(data, &dst.UserApplicationRoleAssignment)
	if err == nil {
		jsonUserApplicationRoleAssignment, _ := json.Marshal(dst.UserApplicationRoleAssignment)
		if string(jsonUserApplicationRoleAssignment) == "{}" { // empty struct
			dst.UserApplicationRoleAssignment = nil
		} else {
				return nil // data stored in dst.UserApplicationRoleAssignment, return on the first match
		}
	} else {
		dst.UserApplicationRoleAssignment = nil
	}
	return fmt.Errorf("Data failed to match schemas in oneOf(EntityArrayEmbeddedRolesInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EntityArrayEmbeddedRolesInner) MarshalJSON() ([]byte, error) {
	if src.CustomAdminRole != nil {
		return json.Marshal(&src.CustomAdminRole)
	}

	if src.Role != nil {
		return json.Marshal(&src.Role)
	}

	if src.UserApplicationRoleAssignment != nil {
		return json.Marshal(&src.UserApplicationRoleAssignment)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EntityArrayEmbeddedRolesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CustomAdminRole != nil {
		return obj.CustomAdminRole
	}

	if obj.Role != nil {
		return obj.Role
	}

	if obj.UserApplicationRoleAssignment != nil {
		return obj.UserApplicationRoleAssignment
	}

	// all schemas are nil
	return nil
}

type NullableEntityArrayEmbeddedRolesInner struct {
	value *EntityArrayEmbeddedRolesInner
	isSet bool
}

func (v NullableEntityArrayEmbeddedRolesInner) Get() *EntityArrayEmbeddedRolesInner {
	return v.value
}

func (v *NullableEntityArrayEmbeddedRolesInner) Set(val *EntityArrayEmbeddedRolesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityArrayEmbeddedRolesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityArrayEmbeddedRolesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityArrayEmbeddedRolesInner(val *EntityArrayEmbeddedRolesInner) *NullableEntityArrayEmbeddedRolesInner {
	return &NullableEntityArrayEmbeddedRolesInner{value: val, isSet: true}
}

func (v NullableEntityArrayEmbeddedRolesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityArrayEmbeddedRolesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
