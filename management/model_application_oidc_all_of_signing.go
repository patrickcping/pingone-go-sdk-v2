/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationOIDCAllOfSigning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationOIDCAllOfSigning{}

// ApplicationOIDCAllOfSigning Configuration for the signing key. If absent, application tokens will be signed and verified by the PingOne default key at runtime. This property only applies to OIDC applications of type `WEB_APP`, `NATIVE_APP`, `SINGLE_PAGE_APP`, and `CUSTOM_APP`.
type ApplicationOIDCAllOfSigning struct {
	KeyRotationPolicy ApplicationOIDCAllOfSigningKeyRotationPolicy `json:"keyRotationPolicy"`
}

// NewApplicationOIDCAllOfSigning instantiates a new ApplicationOIDCAllOfSigning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationOIDCAllOfSigning(keyRotationPolicy ApplicationOIDCAllOfSigningKeyRotationPolicy) *ApplicationOIDCAllOfSigning {
	this := ApplicationOIDCAllOfSigning{}
	this.KeyRotationPolicy = keyRotationPolicy
	return &this
}

// NewApplicationOIDCAllOfSigningWithDefaults instantiates a new ApplicationOIDCAllOfSigning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationOIDCAllOfSigningWithDefaults() *ApplicationOIDCAllOfSigning {
	this := ApplicationOIDCAllOfSigning{}
	return &this
}

// GetKeyRotationPolicy returns the KeyRotationPolicy field value
func (o *ApplicationOIDCAllOfSigning) GetKeyRotationPolicy() ApplicationOIDCAllOfSigningKeyRotationPolicy {
	if o == nil {
		var ret ApplicationOIDCAllOfSigningKeyRotationPolicy
		return ret
	}

	return o.KeyRotationPolicy
}

// GetKeyRotationPolicyOk returns a tuple with the KeyRotationPolicy field value
// and a boolean to check if the value has been set.
func (o *ApplicationOIDCAllOfSigning) GetKeyRotationPolicyOk() (*ApplicationOIDCAllOfSigningKeyRotationPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyRotationPolicy, true
}

// SetKeyRotationPolicy sets field value
func (o *ApplicationOIDCAllOfSigning) SetKeyRotationPolicy(v ApplicationOIDCAllOfSigningKeyRotationPolicy) {
	o.KeyRotationPolicy = v
}

func (o ApplicationOIDCAllOfSigning) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationOIDCAllOfSigning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyRotationPolicy"] = o.KeyRotationPolicy
	return toSerialize, nil
}

type NullableApplicationOIDCAllOfSigning struct {
	value *ApplicationOIDCAllOfSigning
	isSet bool
}

func (v NullableApplicationOIDCAllOfSigning) Get() *ApplicationOIDCAllOfSigning {
	return v.value
}

func (v *NullableApplicationOIDCAllOfSigning) Set(val *ApplicationOIDCAllOfSigning) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationOIDCAllOfSigning) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationOIDCAllOfSigning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationOIDCAllOfSigning(val *ApplicationOIDCAllOfSigning) *NullableApplicationOIDCAllOfSigning {
	return &NullableApplicationOIDCAllOfSigning{value: val, isSet: true}
}

func (v NullableApplicationOIDCAllOfSigning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationOIDCAllOfSigning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
