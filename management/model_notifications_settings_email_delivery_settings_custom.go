/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the NotificationsSettingsEmailDeliverySettingsCustom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsSettingsEmailDeliverySettingsCustom{}

// NotificationsSettingsEmailDeliverySettingsCustom struct for NotificationsSettingsEmailDeliverySettingsCustom
type NotificationsSettingsEmailDeliverySettingsCustom struct {
	Links       *map[string]LinksHATEOASValue                          `json:"_links,omitempty"`
	Environment *ObjectEnvironment                                     `json:"environment,omitempty"`
	Protocol    EnumNotificationsSettingsEmailDeliverySettingsProtocol `json:"protocol"`
	// The time the resource was last updated.
	UpdatedAt      *time.Time                                                          `json:"updatedAt,omitempty"`
	Authentication NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication `json:"authentication"`
	From           *NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom          `json:"from,omitempty"`
	// Name to use to identify the provider.
	Name     string                                                        `json:"name"`
	Provider *EnumNotificationsSettingsEmailDeliverySettingsCustomProvider `json:"provider,omitempty"`
	ReplyTo  *NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo `json:"replyTo,omitempty"`
	// Contains the object that is used to configure the API requests sent to the email provider.
	Requests []NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests `json:"requests"`
}

// NewNotificationsSettingsEmailDeliverySettingsCustom instantiates a new NotificationsSettingsEmailDeliverySettingsCustom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsSettingsEmailDeliverySettingsCustom(protocol EnumNotificationsSettingsEmailDeliverySettingsProtocol, authentication NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication, name string, requests []NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests) *NotificationsSettingsEmailDeliverySettingsCustom {
	this := NotificationsSettingsEmailDeliverySettingsCustom{}
	this.Protocol = protocol
	this.Authentication = authentication
	this.Name = name
	this.Requests = requests
	return &this
}

// NewNotificationsSettingsEmailDeliverySettingsCustomWithDefaults instantiates a new NotificationsSettingsEmailDeliverySettingsCustom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsSettingsEmailDeliverySettingsCustomWithDefaults() *NotificationsSettingsEmailDeliverySettingsCustom {
	this := NotificationsSettingsEmailDeliverySettingsCustom{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetEnvironment() ObjectEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetProtocol returns the Protocol field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetProtocol() EnumNotificationsSettingsEmailDeliverySettingsProtocol {
	if o == nil {
		var ret EnumNotificationsSettingsEmailDeliverySettingsProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetProtocolOk() (*EnumNotificationsSettingsEmailDeliverySettingsProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetProtocol(v EnumNotificationsSettingsEmailDeliverySettingsProtocol) {
	o.Protocol = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetAuthentication returns the Authentication field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetAuthentication() NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication {
	if o == nil {
		var ret NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication
		return ret
	}

	return o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetAuthenticationOk() (*NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authentication, true
}

// SetAuthentication sets field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetAuthentication(v NotificationsSettingsEmailDeliverySettingsCustomAllOfAuthentication) {
	o.Authentication = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetFrom() NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom {
	if o == nil || IsNil(o.From) {
		var ret NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetFromOk() (*NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom and assigns it to the From field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetFrom(v NotificationsSettingsEmailDeliverySettingsCustomAllOfFrom) {
	o.From = &v
}

// GetName returns the Name field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetName(v string) {
	o.Name = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetProvider() EnumNotificationsSettingsEmailDeliverySettingsCustomProvider {
	if o == nil || IsNil(o.Provider) {
		var ret EnumNotificationsSettingsEmailDeliverySettingsCustomProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetProviderOk() (*EnumNotificationsSettingsEmailDeliverySettingsCustomProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given EnumNotificationsSettingsEmailDeliverySettingsCustomProvider and assigns it to the Provider field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetProvider(v EnumNotificationsSettingsEmailDeliverySettingsCustomProvider) {
	o.Provider = &v
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetReplyTo() NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo {
	if o == nil || IsNil(o.ReplyTo) {
		var ret NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetReplyToOk() (*NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo, bool) {
	if o == nil || IsNil(o.ReplyTo) {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) HasReplyTo() bool {
	if o != nil && !IsNil(o.ReplyTo) {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo and assigns it to the ReplyTo field.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetReplyTo(v NotificationsSettingsEmailDeliverySettingsCustomAllOfReplyTo) {
	o.ReplyTo = &v
}

// GetRequests returns the Requests field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetRequests() []NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests {
	if o == nil {
		var ret []NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsCustom) GetRequestsOk() ([]NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests, true
}

// SetRequests sets field value
func (o *NotificationsSettingsEmailDeliverySettingsCustom) SetRequests(v []NotificationsSettingsEmailDeliverySettingsCustomAllOfRequests) {
	o.Requests = v
}

func (o NotificationsSettingsEmailDeliverySettingsCustom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsSettingsEmailDeliverySettingsCustom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	toSerialize["authentication"] = o.Authentication
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ReplyTo) {
		toSerialize["replyTo"] = o.ReplyTo
	}
	toSerialize["requests"] = o.Requests
	return toSerialize, nil
}

type NullableNotificationsSettingsEmailDeliverySettingsCustom struct {
	value *NotificationsSettingsEmailDeliverySettingsCustom
	isSet bool
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustom) Get() *NotificationsSettingsEmailDeliverySettingsCustom {
	return v.value
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustom) Set(val *NotificationsSettingsEmailDeliverySettingsCustom) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustom) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsSettingsEmailDeliverySettingsCustom(val *NotificationsSettingsEmailDeliverySettingsCustom) *NullableNotificationsSettingsEmailDeliverySettingsCustom {
	return &NullableNotificationsSettingsEmailDeliverySettingsCustom{value: val, isSet: true}
}

func (v NullableNotificationsSettingsEmailDeliverySettingsCustom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsCustom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
