/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the PropagationStoreConfigurationSalesforceContacts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropagationStoreConfigurationSalesforceContacts{}

// PropagationStoreConfigurationSalesforceContacts struct for PropagationStoreConfigurationSalesforceContacts
type PropagationStoreConfigurationSalesforceContacts struct {
	// The Salesforce account ID.
	ACCOUNT_ID *string `json:"ACCOUNT_ID,omitempty"`
	// Unique identifier (UUID) of the Salesforce client associated with the propagation store.
	CLIENT_ID string `json:"CLIENT_ID"`
	// The Salesforce client secret.
	CLIENT_SECRET string `json:"CLIENT_SECRET"`
	// Whether or not users are allowed to be created.
	CREATE_USERS *bool `json:"CREATE_USERS,omitempty"`
	// Whether or not users are allowed to be disabled.
	DISABLE_USERS *bool `json:"DISABLE_USERS,omitempty"`
	// Whether or not to enable Salesforce communities.
	ENABLE_COMMUNITIES *bool `json:"ENABLE_COMMUNITIES,omitempty"`
	// Whether the user account is frozen.
	FREEZE_USER_FLAG *bool `json:"FREEZE_USER_FLAG,omitempty"`
	// OAuth access token for account authentication.
	OAUTH_ACCESS_TOKEN string `json:"OAUTH_ACCESS_TOKEN"`
	// OAuth refresh token for account authentication.
	OAUTH_REFRESH_TOKEN string `json:"OAUTH_REFRESH_TOKEN"`
	// The permission sets to be merged with Salesforce.
	PERMISSION_SET_MANAGEMENT *string `json:"PERMISSION_SET_MANAGEMENT,omitempty"`
	// The Salesforce profile ID.
	PROFILE_ID *string `json:"PROFILE_ID,omitempty"`
	// Whether or not disabled users can be provisioned.
	PROVISION_DISABLED_USERS *bool                                                `json:"PROVISION_DISABLED_USERS,omitempty"`
	RECORD_TYPE              EnumPropagationStoreTypeSalesforceContactsRecordType `json:"RECORD_TYPE"`
	// The account's salesforce.com domain.
	SALESFORCE_DOMAIN string `json:"SALESFORCE_DOMAIN"`
	// Whether or not users are allowed to be updated.
	UPDATE_USERS *bool `json:"UPDATE_USERS,omitempty"`
}

// NewPropagationStoreConfigurationSalesforceContacts instantiates a new PropagationStoreConfigurationSalesforceContacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropagationStoreConfigurationSalesforceContacts(cLIENTID string, cLIENTSECRET string, oAUTHACCESSTOKEN string, oAUTHREFRESHTOKEN string, rECORDTYPE EnumPropagationStoreTypeSalesforceContactsRecordType, sALESFORCEDOMAIN string) *PropagationStoreConfigurationSalesforceContacts {
	this := PropagationStoreConfigurationSalesforceContacts{}
	this.CLIENT_ID = cLIENTID
	this.CLIENT_SECRET = cLIENTSECRET
	this.OAUTH_ACCESS_TOKEN = oAUTHACCESSTOKEN
	this.OAUTH_REFRESH_TOKEN = oAUTHREFRESHTOKEN
	this.RECORD_TYPE = rECORDTYPE
	this.SALESFORCE_DOMAIN = sALESFORCEDOMAIN
	return &this
}

// NewPropagationStoreConfigurationSalesforceContactsWithDefaults instantiates a new PropagationStoreConfigurationSalesforceContacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropagationStoreConfigurationSalesforceContactsWithDefaults() *PropagationStoreConfigurationSalesforceContacts {
	this := PropagationStoreConfigurationSalesforceContacts{}
	return &this
}

// GetACCOUNT_ID returns the ACCOUNT_ID field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetACCOUNT_ID() string {
	if o == nil || IsNil(o.ACCOUNT_ID) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ID
}

// GetACCOUNT_IDOk returns a tuple with the ACCOUNT_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetACCOUNT_IDOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ID) {
		return nil, false
	}
	return o.ACCOUNT_ID, true
}

// HasACCOUNT_ID returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasACCOUNT_ID() bool {
	if o != nil && !IsNil(o.ACCOUNT_ID) {
		return true
	}

	return false
}

// SetACCOUNT_ID gets a reference to the given string and assigns it to the ACCOUNT_ID field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetACCOUNT_ID(v string) {
	o.ACCOUNT_ID = &v
}

// GetCLIENT_ID returns the CLIENT_ID field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetCLIENT_ID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CLIENT_ID
}

// GetCLIENT_IDOk returns a tuple with the CLIENT_ID field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetCLIENT_IDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CLIENT_ID, true
}

// SetCLIENT_ID sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetCLIENT_ID(v string) {
	o.CLIENT_ID = v
}

// GetCLIENT_SECRET returns the CLIENT_SECRET field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetCLIENT_SECRET() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CLIENT_SECRET
}

// GetCLIENT_SECRETOk returns a tuple with the CLIENT_SECRET field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetCLIENT_SECRETOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CLIENT_SECRET, true
}

// SetCLIENT_SECRET sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetCLIENT_SECRET(v string) {
	o.CLIENT_SECRET = v
}

// GetCREATE_USERS returns the CREATE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetCREATE_USERS() bool {
	if o == nil || IsNil(o.CREATE_USERS) {
		var ret bool
		return ret
	}
	return *o.CREATE_USERS
}

// GetCREATE_USERSOk returns a tuple with the CREATE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetCREATE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.CREATE_USERS) {
		return nil, false
	}
	return o.CREATE_USERS, true
}

// HasCREATE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasCREATE_USERS() bool {
	if o != nil && !IsNil(o.CREATE_USERS) {
		return true
	}

	return false
}

// SetCREATE_USERS gets a reference to the given bool and assigns it to the CREATE_USERS field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetCREATE_USERS(v bool) {
	o.CREATE_USERS = &v
}

// GetDISABLE_USERS returns the DISABLE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetDISABLE_USERS() bool {
	if o == nil || IsNil(o.DISABLE_USERS) {
		var ret bool
		return ret
	}
	return *o.DISABLE_USERS
}

// GetDISABLE_USERSOk returns a tuple with the DISABLE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetDISABLE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.DISABLE_USERS) {
		return nil, false
	}
	return o.DISABLE_USERS, true
}

// HasDISABLE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasDISABLE_USERS() bool {
	if o != nil && !IsNil(o.DISABLE_USERS) {
		return true
	}

	return false
}

// SetDISABLE_USERS gets a reference to the given bool and assigns it to the DISABLE_USERS field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetDISABLE_USERS(v bool) {
	o.DISABLE_USERS = &v
}

// GetENABLE_COMMUNITIES returns the ENABLE_COMMUNITIES field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetENABLE_COMMUNITIES() bool {
	if o == nil || IsNil(o.ENABLE_COMMUNITIES) {
		var ret bool
		return ret
	}
	return *o.ENABLE_COMMUNITIES
}

// GetENABLE_COMMUNITIESOk returns a tuple with the ENABLE_COMMUNITIES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetENABLE_COMMUNITIESOk() (*bool, bool) {
	if o == nil || IsNil(o.ENABLE_COMMUNITIES) {
		return nil, false
	}
	return o.ENABLE_COMMUNITIES, true
}

// HasENABLE_COMMUNITIES returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasENABLE_COMMUNITIES() bool {
	if o != nil && !IsNil(o.ENABLE_COMMUNITIES) {
		return true
	}

	return false
}

// SetENABLE_COMMUNITIES gets a reference to the given bool and assigns it to the ENABLE_COMMUNITIES field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetENABLE_COMMUNITIES(v bool) {
	o.ENABLE_COMMUNITIES = &v
}

// GetFREEZE_USER_FLAG returns the FREEZE_USER_FLAG field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetFREEZE_USER_FLAG() bool {
	if o == nil || IsNil(o.FREEZE_USER_FLAG) {
		var ret bool
		return ret
	}
	return *o.FREEZE_USER_FLAG
}

// GetFREEZE_USER_FLAGOk returns a tuple with the FREEZE_USER_FLAG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetFREEZE_USER_FLAGOk() (*bool, bool) {
	if o == nil || IsNil(o.FREEZE_USER_FLAG) {
		return nil, false
	}
	return o.FREEZE_USER_FLAG, true
}

// HasFREEZE_USER_FLAG returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasFREEZE_USER_FLAG() bool {
	if o != nil && !IsNil(o.FREEZE_USER_FLAG) {
		return true
	}

	return false
}

// SetFREEZE_USER_FLAG gets a reference to the given bool and assigns it to the FREEZE_USER_FLAG field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetFREEZE_USER_FLAG(v bool) {
	o.FREEZE_USER_FLAG = &v
}

// GetOAUTH_ACCESS_TOKEN returns the OAUTH_ACCESS_TOKEN field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetOAUTH_ACCESS_TOKEN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OAUTH_ACCESS_TOKEN
}

// GetOAUTH_ACCESS_TOKENOk returns a tuple with the OAUTH_ACCESS_TOKEN field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetOAUTH_ACCESS_TOKENOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OAUTH_ACCESS_TOKEN, true
}

// SetOAUTH_ACCESS_TOKEN sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetOAUTH_ACCESS_TOKEN(v string) {
	o.OAUTH_ACCESS_TOKEN = v
}

// GetOAUTH_REFRESH_TOKEN returns the OAUTH_REFRESH_TOKEN field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetOAUTH_REFRESH_TOKEN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OAUTH_REFRESH_TOKEN
}

// GetOAUTH_REFRESH_TOKENOk returns a tuple with the OAUTH_REFRESH_TOKEN field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetOAUTH_REFRESH_TOKENOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OAUTH_REFRESH_TOKEN, true
}

// SetOAUTH_REFRESH_TOKEN sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetOAUTH_REFRESH_TOKEN(v string) {
	o.OAUTH_REFRESH_TOKEN = v
}

// GetPERMISSION_SET_MANAGEMENT returns the PERMISSION_SET_MANAGEMENT field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPERMISSION_SET_MANAGEMENT() string {
	if o == nil || IsNil(o.PERMISSION_SET_MANAGEMENT) {
		var ret string
		return ret
	}
	return *o.PERMISSION_SET_MANAGEMENT
}

// GetPERMISSION_SET_MANAGEMENTOk returns a tuple with the PERMISSION_SET_MANAGEMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPERMISSION_SET_MANAGEMENTOk() (*string, bool) {
	if o == nil || IsNil(o.PERMISSION_SET_MANAGEMENT) {
		return nil, false
	}
	return o.PERMISSION_SET_MANAGEMENT, true
}

// HasPERMISSION_SET_MANAGEMENT returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasPERMISSION_SET_MANAGEMENT() bool {
	if o != nil && !IsNil(o.PERMISSION_SET_MANAGEMENT) {
		return true
	}

	return false
}

// SetPERMISSION_SET_MANAGEMENT gets a reference to the given string and assigns it to the PERMISSION_SET_MANAGEMENT field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetPERMISSION_SET_MANAGEMENT(v string) {
	o.PERMISSION_SET_MANAGEMENT = &v
}

// GetPROFILE_ID returns the PROFILE_ID field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPROFILE_ID() string {
	if o == nil || IsNil(o.PROFILE_ID) {
		var ret string
		return ret
	}
	return *o.PROFILE_ID
}

// GetPROFILE_IDOk returns a tuple with the PROFILE_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPROFILE_IDOk() (*string, bool) {
	if o == nil || IsNil(o.PROFILE_ID) {
		return nil, false
	}
	return o.PROFILE_ID, true
}

// HasPROFILE_ID returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasPROFILE_ID() bool {
	if o != nil && !IsNil(o.PROFILE_ID) {
		return true
	}

	return false
}

// SetPROFILE_ID gets a reference to the given string and assigns it to the PROFILE_ID field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetPROFILE_ID(v string) {
	o.PROFILE_ID = &v
}

// GetPROVISION_DISABLED_USERS returns the PROVISION_DISABLED_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPROVISION_DISABLED_USERS() bool {
	if o == nil || IsNil(o.PROVISION_DISABLED_USERS) {
		var ret bool
		return ret
	}
	return *o.PROVISION_DISABLED_USERS
}

// GetPROVISION_DISABLED_USERSOk returns a tuple with the PROVISION_DISABLED_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetPROVISION_DISABLED_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.PROVISION_DISABLED_USERS) {
		return nil, false
	}
	return o.PROVISION_DISABLED_USERS, true
}

// HasPROVISION_DISABLED_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasPROVISION_DISABLED_USERS() bool {
	if o != nil && !IsNil(o.PROVISION_DISABLED_USERS) {
		return true
	}

	return false
}

// SetPROVISION_DISABLED_USERS gets a reference to the given bool and assigns it to the PROVISION_DISABLED_USERS field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetPROVISION_DISABLED_USERS(v bool) {
	o.PROVISION_DISABLED_USERS = &v
}

// GetRECORD_TYPE returns the RECORD_TYPE field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetRECORD_TYPE() EnumPropagationStoreTypeSalesforceContactsRecordType {
	if o == nil {
		var ret EnumPropagationStoreTypeSalesforceContactsRecordType
		return ret
	}

	return o.RECORD_TYPE
}

// GetRECORD_TYPEOk returns a tuple with the RECORD_TYPE field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetRECORD_TYPEOk() (*EnumPropagationStoreTypeSalesforceContactsRecordType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RECORD_TYPE, true
}

// SetRECORD_TYPE sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetRECORD_TYPE(v EnumPropagationStoreTypeSalesforceContactsRecordType) {
	o.RECORD_TYPE = v
}

// GetSALESFORCE_DOMAIN returns the SALESFORCE_DOMAIN field value
func (o *PropagationStoreConfigurationSalesforceContacts) GetSALESFORCE_DOMAIN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SALESFORCE_DOMAIN
}

// GetSALESFORCE_DOMAINOk returns a tuple with the SALESFORCE_DOMAIN field value
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetSALESFORCE_DOMAINOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SALESFORCE_DOMAIN, true
}

// SetSALESFORCE_DOMAIN sets field value
func (o *PropagationStoreConfigurationSalesforceContacts) SetSALESFORCE_DOMAIN(v string) {
	o.SALESFORCE_DOMAIN = v
}

// GetUPDATE_USERS returns the UPDATE_USERS field value if set, zero value otherwise.
func (o *PropagationStoreConfigurationSalesforceContacts) GetUPDATE_USERS() bool {
	if o == nil || IsNil(o.UPDATE_USERS) {
		var ret bool
		return ret
	}
	return *o.UPDATE_USERS
}

// GetUPDATE_USERSOk returns a tuple with the UPDATE_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) GetUPDATE_USERSOk() (*bool, bool) {
	if o == nil || IsNil(o.UPDATE_USERS) {
		return nil, false
	}
	return o.UPDATE_USERS, true
}

// HasUPDATE_USERS returns a boolean if a field has been set.
func (o *PropagationStoreConfigurationSalesforceContacts) HasUPDATE_USERS() bool {
	if o != nil && !IsNil(o.UPDATE_USERS) {
		return true
	}

	return false
}

// SetUPDATE_USERS gets a reference to the given bool and assigns it to the UPDATE_USERS field.
func (o *PropagationStoreConfigurationSalesforceContacts) SetUPDATE_USERS(v bool) {
	o.UPDATE_USERS = &v
}

func (o PropagationStoreConfigurationSalesforceContacts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropagationStoreConfigurationSalesforceContacts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ACCOUNT_ID) {
		toSerialize["ACCOUNT_ID"] = o.ACCOUNT_ID
	}
	toSerialize["CLIENT_ID"] = o.CLIENT_ID
	toSerialize["CLIENT_SECRET"] = o.CLIENT_SECRET
	if !IsNil(o.CREATE_USERS) {
		toSerialize["CREATE_USERS"] = o.CREATE_USERS
	}
	if !IsNil(o.DISABLE_USERS) {
		toSerialize["DISABLE_USERS"] = o.DISABLE_USERS
	}
	if !IsNil(o.ENABLE_COMMUNITIES) {
		toSerialize["ENABLE_COMMUNITIES"] = o.ENABLE_COMMUNITIES
	}
	if !IsNil(o.FREEZE_USER_FLAG) {
		toSerialize["FREEZE_USER_FLAG"] = o.FREEZE_USER_FLAG
	}
	toSerialize["OAUTH_ACCESS_TOKEN"] = o.OAUTH_ACCESS_TOKEN
	toSerialize["OAUTH_REFRESH_TOKEN"] = o.OAUTH_REFRESH_TOKEN
	if !IsNil(o.PERMISSION_SET_MANAGEMENT) {
		toSerialize["PERMISSION_SET_MANAGEMENT"] = o.PERMISSION_SET_MANAGEMENT
	}
	if !IsNil(o.PROFILE_ID) {
		toSerialize["PROFILE_ID"] = o.PROFILE_ID
	}
	if !IsNil(o.PROVISION_DISABLED_USERS) {
		toSerialize["PROVISION_DISABLED_USERS"] = o.PROVISION_DISABLED_USERS
	}
	toSerialize["RECORD_TYPE"] = o.RECORD_TYPE
	toSerialize["SALESFORCE_DOMAIN"] = o.SALESFORCE_DOMAIN
	if !IsNil(o.UPDATE_USERS) {
		toSerialize["UPDATE_USERS"] = o.UPDATE_USERS
	}
	return toSerialize, nil
}

type NullablePropagationStoreConfigurationSalesforceContacts struct {
	value *PropagationStoreConfigurationSalesforceContacts
	isSet bool
}

func (v NullablePropagationStoreConfigurationSalesforceContacts) Get() *PropagationStoreConfigurationSalesforceContacts {
	return v.value
}

func (v *NullablePropagationStoreConfigurationSalesforceContacts) Set(val *PropagationStoreConfigurationSalesforceContacts) {
	v.value = val
	v.isSet = true
}

func (v NullablePropagationStoreConfigurationSalesforceContacts) IsSet() bool {
	return v.isSet
}

func (v *NullablePropagationStoreConfigurationSalesforceContacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropagationStoreConfigurationSalesforceContacts(val *PropagationStoreConfigurationSalesforceContacts) *NullablePropagationStoreConfigurationSalesforceContacts {
	return &NullablePropagationStoreConfigurationSalesforceContacts{value: val, isSet: true}
}

func (v NullablePropagationStoreConfigurationSalesforceContacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropagationStoreConfigurationSalesforceContacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
