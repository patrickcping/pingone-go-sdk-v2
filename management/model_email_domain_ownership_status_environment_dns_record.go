/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the EmailDomainOwnershipStatusEnvironmentDnsRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailDomainOwnershipStatusEnvironmentDnsRecord{}

// EmailDomainOwnershipStatusEnvironmentDnsRecord Contains a key-value pair for a text record that reflects the association of the domain with the specific PingOne environment. If you add this record to your DNS, any sender email address belonging to the domain is set to active status as soon as you create it, with no need for a verification email. In the initial call to check ownership status, \"status\" is returned with the value \"VERIFICATION_REQUIRED\". If you add the record to your DNS, the next time you use the ownership endpoint to check ownership status, the value returned for \"status\" will be \"ACTIVE\".
type EmailDomainOwnershipStatusEnvironmentDnsRecord struct {
	Status *EnumEmailDomainStatus `json:"status,omitempty"`
	// Record name.
	Key *string `json:"key,omitempty"`
	// Record value.
	Value *string `json:"value,omitempty"`
}

// NewEmailDomainOwnershipStatusEnvironmentDnsRecord instantiates a new EmailDomainOwnershipStatusEnvironmentDnsRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailDomainOwnershipStatusEnvironmentDnsRecord() *EmailDomainOwnershipStatusEnvironmentDnsRecord {
	this := EmailDomainOwnershipStatusEnvironmentDnsRecord{}
	return &this
}

// NewEmailDomainOwnershipStatusEnvironmentDnsRecordWithDefaults instantiates a new EmailDomainOwnershipStatusEnvironmentDnsRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailDomainOwnershipStatusEnvironmentDnsRecordWithDefaults() *EmailDomainOwnershipStatusEnvironmentDnsRecord {
	this := EmailDomainOwnershipStatusEnvironmentDnsRecord{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetStatus() EnumEmailDomainStatus {
	if o == nil || IsNil(o.Status) {
		var ret EnumEmailDomainStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetStatusOk() (*EnumEmailDomainStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EnumEmailDomainStatus and assigns it to the Status field.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) SetStatus(v EnumEmailDomainStatus) {
	o.Status = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *EmailDomainOwnershipStatusEnvironmentDnsRecord) SetValue(v string) {
	o.Value = &v
}

func (o EmailDomainOwnershipStatusEnvironmentDnsRecord) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailDomainOwnershipStatusEnvironmentDnsRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableEmailDomainOwnershipStatusEnvironmentDnsRecord struct {
	value *EmailDomainOwnershipStatusEnvironmentDnsRecord
	isSet bool
}

func (v NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) Get() *EmailDomainOwnershipStatusEnvironmentDnsRecord {
	return v.value
}

func (v *NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) Set(val *EmailDomainOwnershipStatusEnvironmentDnsRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailDomainOwnershipStatusEnvironmentDnsRecord(val *EmailDomainOwnershipStatusEnvironmentDnsRecord) *NullableEmailDomainOwnershipStatusEnvironmentDnsRecord {
	return &NullableEmailDomainOwnershipStatusEnvironmentDnsRecord{value: val, isSet: true}
}

func (v NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailDomainOwnershipStatusEnvironmentDnsRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
