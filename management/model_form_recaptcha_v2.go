/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the FormRecaptchaV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormRecaptchaV2{}

// FormRecaptchaV2 struct for FormRecaptchaV2
type FormRecaptchaV2 struct {
	Size      EnumFormRecaptchaV2Size  `json:"size"`
	Theme     EnumFormRecaptchaV2Theme `json:"theme"`
	Alignment EnumFormItemAlignment    `json:"alignment"`
}

// NewFormRecaptchaV2 instantiates a new FormRecaptchaV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormRecaptchaV2(size EnumFormRecaptchaV2Size, theme EnumFormRecaptchaV2Theme, alignment EnumFormItemAlignment) *FormRecaptchaV2 {
	this := FormRecaptchaV2{}
	this.Size = size
	this.Theme = theme
	this.Alignment = alignment
	return &this
}

// NewFormRecaptchaV2WithDefaults instantiates a new FormRecaptchaV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormRecaptchaV2WithDefaults() *FormRecaptchaV2 {
	this := FormRecaptchaV2{}
	return &this
}

// GetSize returns the Size field value
func (o *FormRecaptchaV2) GetSize() EnumFormRecaptchaV2Size {
	if o == nil {
		var ret EnumFormRecaptchaV2Size
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *FormRecaptchaV2) GetSizeOk() (*EnumFormRecaptchaV2Size, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *FormRecaptchaV2) SetSize(v EnumFormRecaptchaV2Size) {
	o.Size = v
}

// GetTheme returns the Theme field value
func (o *FormRecaptchaV2) GetTheme() EnumFormRecaptchaV2Theme {
	if o == nil {
		var ret EnumFormRecaptchaV2Theme
		return ret
	}

	return o.Theme
}

// GetThemeOk returns a tuple with the Theme field value
// and a boolean to check if the value has been set.
func (o *FormRecaptchaV2) GetThemeOk() (*EnumFormRecaptchaV2Theme, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Theme, true
}

// SetTheme sets field value
func (o *FormRecaptchaV2) SetTheme(v EnumFormRecaptchaV2Theme) {
	o.Theme = v
}

// GetAlignment returns the Alignment field value
func (o *FormRecaptchaV2) GetAlignment() EnumFormItemAlignment {
	if o == nil {
		var ret EnumFormItemAlignment
		return ret
	}

	return o.Alignment
}

// GetAlignmentOk returns a tuple with the Alignment field value
// and a boolean to check if the value has been set.
func (o *FormRecaptchaV2) GetAlignmentOk() (*EnumFormItemAlignment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alignment, true
}

// SetAlignment sets field value
func (o *FormRecaptchaV2) SetAlignment(v EnumFormItemAlignment) {
	o.Alignment = v
}

func (o FormRecaptchaV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormRecaptchaV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	toSerialize["theme"] = o.Theme
	toSerialize["alignment"] = o.Alignment
	return toSerialize, nil
}

type NullableFormRecaptchaV2 struct {
	value *FormRecaptchaV2
	isSet bool
}

func (v NullableFormRecaptchaV2) Get() *FormRecaptchaV2 {
	return v.value
}

func (v *NullableFormRecaptchaV2) Set(val *FormRecaptchaV2) {
	v.value = val
	v.isSet = true
}

func (v NullableFormRecaptchaV2) IsSet() bool {
	return v.isSet
}

func (v *NullableFormRecaptchaV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormRecaptchaV2(val *FormRecaptchaV2) *NullableFormRecaptchaV2 {
	return &NullableFormRecaptchaV2{value: val, isSet: true}
}

func (v NullableFormRecaptchaV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormRecaptchaV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
