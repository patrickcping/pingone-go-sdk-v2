/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumFormItemAlignment A string that specifies the alignment of the item.
type EnumFormItemAlignment string

// List of EnumFormItemAlignment
const (
	ENUMFORMITEMALIGNMENT_LEFT   EnumFormItemAlignment = "LEFT"
	ENUMFORMITEMALIGNMENT_CENTER EnumFormItemAlignment = "CENTER"
	ENUMFORMITEMALIGNMENT_RIGHT  EnumFormItemAlignment = "RIGHT"
)

// All allowed values of EnumFormItemAlignment enum
var AllowedEnumFormItemAlignmentEnumValues = []EnumFormItemAlignment{
	"LEFT",
	"CENTER",
	"RIGHT",
}

func (v *EnumFormItemAlignment) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumFormItemAlignment(value)
	for _, existing := range AllowedEnumFormItemAlignmentEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumFormItemAlignment(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumFormItemAlignmentFromValue returns a pointer to a valid EnumFormItemAlignment
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumFormItemAlignmentFromValue(v string) (*EnumFormItemAlignment, error) {
	ev := EnumFormItemAlignment(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumFormItemAlignment: valid values are %v", v, AllowedEnumFormItemAlignmentEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumFormItemAlignment) IsValid() bool {
	for _, existing := range AllowedEnumFormItemAlignmentEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumFormItemAlignment value
func (v EnumFormItemAlignment) Ptr() *EnumFormItemAlignment {
	return &v
}

type NullableEnumFormItemAlignment struct {
	value *EnumFormItemAlignment
	isSet bool
}

func (v NullableEnumFormItemAlignment) Get() *EnumFormItemAlignment {
	return v.value
}

func (v *NullableEnumFormItemAlignment) Set(val *EnumFormItemAlignment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumFormItemAlignment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumFormItemAlignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumFormItemAlignment(val *EnumFormItemAlignment) *NullableEnumFormItemAlignment {
	return &NullableEnumFormItemAlignment{value: val, isSet: true}
}

func (v NullableEnumFormItemAlignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumFormItemAlignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
