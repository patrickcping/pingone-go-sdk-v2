/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay{}

// ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay Object that contains the credentials required for using Google's Play Integrity API for integrity detection.  Required if `excludedPlatforms` does not contain `GOOGLE`.
type ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay struct {
	// Play Integrity verdict decryption key from your Google Play Services account. This parameter must be provided if you have set `mobile.integrityDetection.googlePlay.verificationType` to `INTERNAL`.
	DecryptionKey *string `json:"decryptionKey,omitempty"`
	// Contents of the JSON file that represents your Service Account Credentials. This parameter must be provided if you have set `mobile.integrityDetection.googlePlay.verificationType` to `GOOGLE`.
	ServiceAccountCredentials *string `json:"serviceAccountCredentials,omitempty"`
	// Play Integrity verdict signature verification key from your Google Play Services account. This parameter must be provided if you have set `mobile.integrityDetection.googlePlay.verificationType` to `INTERNAL`.
	VerificationKey  *string                                          `json:"verificationKey,omitempty"`
	VerificationType *EnumApplicationNativeGooglePlayVerificationType `json:"verificationType,omitempty"`
}

// NewApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay instantiates a new ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay() *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay {
	this := ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay{}
	return &this
}

// NewApplicationOIDCAllOfMobileIntegrityDetectionGooglePlayWithDefaults instantiates a new ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationOIDCAllOfMobileIntegrityDetectionGooglePlayWithDefaults() *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay {
	this := ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay{}
	return &this
}

// GetDecryptionKey returns the DecryptionKey field value if set, zero value otherwise.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetDecryptionKey() string {
	if o == nil || IsNil(o.DecryptionKey) {
		var ret string
		return ret
	}
	return *o.DecryptionKey
}

// GetDecryptionKeyOk returns a tuple with the DecryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetDecryptionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DecryptionKey) {
		return nil, false
	}
	return o.DecryptionKey, true
}

// HasDecryptionKey returns a boolean if a field has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) HasDecryptionKey() bool {
	if o != nil && !IsNil(o.DecryptionKey) {
		return true
	}

	return false
}

// SetDecryptionKey gets a reference to the given string and assigns it to the DecryptionKey field.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) SetDecryptionKey(v string) {
	o.DecryptionKey = &v
}

// GetServiceAccountCredentials returns the ServiceAccountCredentials field value if set, zero value otherwise.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetServiceAccountCredentials() string {
	if o == nil || IsNil(o.ServiceAccountCredentials) {
		var ret string
		return ret
	}
	return *o.ServiceAccountCredentials
}

// GetServiceAccountCredentialsOk returns a tuple with the ServiceAccountCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetServiceAccountCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountCredentials) {
		return nil, false
	}
	return o.ServiceAccountCredentials, true
}

// HasServiceAccountCredentials returns a boolean if a field has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) HasServiceAccountCredentials() bool {
	if o != nil && !IsNil(o.ServiceAccountCredentials) {
		return true
	}

	return false
}

// SetServiceAccountCredentials gets a reference to the given string and assigns it to the ServiceAccountCredentials field.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) SetServiceAccountCredentials(v string) {
	o.ServiceAccountCredentials = &v
}

// GetVerificationKey returns the VerificationKey field value if set, zero value otherwise.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetVerificationKey() string {
	if o == nil || IsNil(o.VerificationKey) {
		var ret string
		return ret
	}
	return *o.VerificationKey
}

// GetVerificationKeyOk returns a tuple with the VerificationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetVerificationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationKey) {
		return nil, false
	}
	return o.VerificationKey, true
}

// HasVerificationKey returns a boolean if a field has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) HasVerificationKey() bool {
	if o != nil && !IsNil(o.VerificationKey) {
		return true
	}

	return false
}

// SetVerificationKey gets a reference to the given string and assigns it to the VerificationKey field.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) SetVerificationKey(v string) {
	o.VerificationKey = &v
}

// GetVerificationType returns the VerificationType field value if set, zero value otherwise.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetVerificationType() EnumApplicationNativeGooglePlayVerificationType {
	if o == nil || IsNil(o.VerificationType) {
		var ret EnumApplicationNativeGooglePlayVerificationType
		return ret
	}
	return *o.VerificationType
}

// GetVerificationTypeOk returns a tuple with the VerificationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) GetVerificationTypeOk() (*EnumApplicationNativeGooglePlayVerificationType, bool) {
	if o == nil || IsNil(o.VerificationType) {
		return nil, false
	}
	return o.VerificationType, true
}

// HasVerificationType returns a boolean if a field has been set.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) HasVerificationType() bool {
	if o != nil && !IsNil(o.VerificationType) {
		return true
	}

	return false
}

// SetVerificationType gets a reference to the given EnumApplicationNativeGooglePlayVerificationType and assigns it to the VerificationType field.
func (o *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) SetVerificationType(v EnumApplicationNativeGooglePlayVerificationType) {
	o.VerificationType = &v
}

func (o ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DecryptionKey) {
		toSerialize["decryptionKey"] = o.DecryptionKey
	}
	if !IsNil(o.ServiceAccountCredentials) {
		toSerialize["serviceAccountCredentials"] = o.ServiceAccountCredentials
	}
	if !IsNil(o.VerificationKey) {
		toSerialize["verificationKey"] = o.VerificationKey
	}
	if !IsNil(o.VerificationType) {
		toSerialize["verificationType"] = o.VerificationType
	}
	return toSerialize, nil
}

type NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay struct {
	value *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay
	isSet bool
}

func (v NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) Get() *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay {
	return v.value
}

func (v *NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) Set(val *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay(val *ApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) *NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay {
	return &NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay{value: val, isSet: true}
}

func (v NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationOIDCAllOfMobileIntegrityDetectionGooglePlay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
