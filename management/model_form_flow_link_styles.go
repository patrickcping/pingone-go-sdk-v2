/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the FormFlowLinkStyles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormFlowLinkStyles{}

// FormFlowLinkStyles struct for FormFlowLinkStyles
type FormFlowLinkStyles struct {
	Alignment *EnumFormItemAlignment `json:"alignment,omitempty"`
	// A string that specifies the link text color. The value must be a valid hexadecimal color.
	TextColor *string `json:"textColor,omitempty"`
	// A boolean that specifies whether the link is enabled.
	Enabled *bool              `json:"enabled,omitempty"`
	Padding *FormStylesPadding `json:"padding,omitempty"`
}

// NewFormFlowLinkStyles instantiates a new FormFlowLinkStyles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormFlowLinkStyles() *FormFlowLinkStyles {
	this := FormFlowLinkStyles{}
	return &this
}

// NewFormFlowLinkStylesWithDefaults instantiates a new FormFlowLinkStyles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormFlowLinkStylesWithDefaults() *FormFlowLinkStyles {
	this := FormFlowLinkStyles{}
	return &this
}

// GetAlignment returns the Alignment field value if set, zero value otherwise.
func (o *FormFlowLinkStyles) GetAlignment() EnumFormItemAlignment {
	if o == nil || IsNil(o.Alignment) {
		var ret EnumFormItemAlignment
		return ret
	}
	return *o.Alignment
}

// GetAlignmentOk returns a tuple with the Alignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormFlowLinkStyles) GetAlignmentOk() (*EnumFormItemAlignment, bool) {
	if o == nil || IsNil(o.Alignment) {
		return nil, false
	}
	return o.Alignment, true
}

// HasAlignment returns a boolean if a field has been set.
func (o *FormFlowLinkStyles) HasAlignment() bool {
	if o != nil && !IsNil(o.Alignment) {
		return true
	}

	return false
}

// SetAlignment gets a reference to the given EnumFormItemAlignment and assigns it to the Alignment field.
func (o *FormFlowLinkStyles) SetAlignment(v EnumFormItemAlignment) {
	o.Alignment = &v
}

// GetTextColor returns the TextColor field value if set, zero value otherwise.
func (o *FormFlowLinkStyles) GetTextColor() string {
	if o == nil || IsNil(o.TextColor) {
		var ret string
		return ret
	}
	return *o.TextColor
}

// GetTextColorOk returns a tuple with the TextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormFlowLinkStyles) GetTextColorOk() (*string, bool) {
	if o == nil || IsNil(o.TextColor) {
		return nil, false
	}
	return o.TextColor, true
}

// HasTextColor returns a boolean if a field has been set.
func (o *FormFlowLinkStyles) HasTextColor() bool {
	if o != nil && !IsNil(o.TextColor) {
		return true
	}

	return false
}

// SetTextColor gets a reference to the given string and assigns it to the TextColor field.
func (o *FormFlowLinkStyles) SetTextColor(v string) {
	o.TextColor = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *FormFlowLinkStyles) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormFlowLinkStyles) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *FormFlowLinkStyles) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *FormFlowLinkStyles) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPadding returns the Padding field value if set, zero value otherwise.
func (o *FormFlowLinkStyles) GetPadding() FormStylesPadding {
	if o == nil || IsNil(o.Padding) {
		var ret FormStylesPadding
		return ret
	}
	return *o.Padding
}

// GetPaddingOk returns a tuple with the Padding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormFlowLinkStyles) GetPaddingOk() (*FormStylesPadding, bool) {
	if o == nil || IsNil(o.Padding) {
		return nil, false
	}
	return o.Padding, true
}

// HasPadding returns a boolean if a field has been set.
func (o *FormFlowLinkStyles) HasPadding() bool {
	if o != nil && !IsNil(o.Padding) {
		return true
	}

	return false
}

// SetPadding gets a reference to the given FormStylesPadding and assigns it to the Padding field.
func (o *FormFlowLinkStyles) SetPadding(v FormStylesPadding) {
	o.Padding = &v
}

func (o FormFlowLinkStyles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormFlowLinkStyles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alignment) {
		toSerialize["alignment"] = o.Alignment
	}
	if !IsNil(o.TextColor) {
		toSerialize["textColor"] = o.TextColor
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Padding) {
		toSerialize["padding"] = o.Padding
	}
	return toSerialize, nil
}

type NullableFormFlowLinkStyles struct {
	value *FormFlowLinkStyles
	isSet bool
}

func (v NullableFormFlowLinkStyles) Get() *FormFlowLinkStyles {
	return v.value
}

func (v *NullableFormFlowLinkStyles) Set(val *FormFlowLinkStyles) {
	v.value = val
	v.isSet = true
}

func (v NullableFormFlowLinkStyles) IsSet() bool {
	return v.isSet
}

func (v *NullableFormFlowLinkStyles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormFlowLinkStyles(val *FormFlowLinkStyles) *NullableFormFlowLinkStyles {
	return &NullableFormFlowLinkStyles{value: val, isSet: true}
}

func (v NullableFormFlowLinkStyles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormFlowLinkStyles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
