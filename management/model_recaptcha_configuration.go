/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// checks if the RecaptchaConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecaptchaConfiguration{}

// RecaptchaConfiguration struct for RecaptchaConfiguration
type RecaptchaConfiguration struct {
	// The time the configuration was created.
	Created     *time.Time         `json:"created,omitempty"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	// The time the configuration was last updated.
	Modified *time.Time `json:"modified,omitempty"`
	// A string that specifies the public site key for the Recaptcha configuration provided by Google.
	SiteKey string `json:"siteKey"`
	// A string that specifies the confidential secret key for the Recaptcha configuration provided by Google.
	SecretKey string `json:"secretKey"`
}

// NewRecaptchaConfiguration instantiates a new RecaptchaConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecaptchaConfiguration(siteKey string, secretKey string) *RecaptchaConfiguration {
	this := RecaptchaConfiguration{}
	this.SiteKey = siteKey
	this.SecretKey = secretKey
	return &this
}

// NewRecaptchaConfigurationWithDefaults instantiates a new RecaptchaConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecaptchaConfigurationWithDefaults() *RecaptchaConfiguration {
	this := RecaptchaConfiguration{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *RecaptchaConfiguration) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecaptchaConfiguration) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *RecaptchaConfiguration) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *RecaptchaConfiguration) SetCreated(v time.Time) {
	o.Created = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *RecaptchaConfiguration) GetEnvironment() ObjectEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecaptchaConfiguration) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *RecaptchaConfiguration) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *RecaptchaConfiguration) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *RecaptchaConfiguration) GetModified() time.Time {
	if o == nil || IsNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecaptchaConfiguration) GetModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *RecaptchaConfiguration) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *RecaptchaConfiguration) SetModified(v time.Time) {
	o.Modified = &v
}

// GetSiteKey returns the SiteKey field value
func (o *RecaptchaConfiguration) GetSiteKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteKey
}

// GetSiteKeyOk returns a tuple with the SiteKey field value
// and a boolean to check if the value has been set.
func (o *RecaptchaConfiguration) GetSiteKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteKey, true
}

// SetSiteKey sets field value
func (o *RecaptchaConfiguration) SetSiteKey(v string) {
	o.SiteKey = v
}

// GetSecretKey returns the SecretKey field value
func (o *RecaptchaConfiguration) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *RecaptchaConfiguration) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *RecaptchaConfiguration) SetSecretKey(v string) {
	o.SecretKey = v
}

func (o RecaptchaConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecaptchaConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	toSerialize["siteKey"] = o.SiteKey
	toSerialize["secretKey"] = o.SecretKey
	return toSerialize, nil
}

type NullableRecaptchaConfiguration struct {
	value *RecaptchaConfiguration
	isSet bool
}

func (v NullableRecaptchaConfiguration) Get() *RecaptchaConfiguration {
	return v.value
}

func (v *NullableRecaptchaConfiguration) Set(val *RecaptchaConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableRecaptchaConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableRecaptchaConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecaptchaConfiguration(val *RecaptchaConfiguration) *NullableRecaptchaConfiguration {
	return &NullableRecaptchaConfiguration{value: val, isSet: true}
}

func (v NullableRecaptchaConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecaptchaConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
