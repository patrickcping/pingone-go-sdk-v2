/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataManagedEntityRestrictionsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataManagedEntityRestrictionsDTO{}

// AuthorizeEditorDataManagedEntityRestrictionsDTO struct for AuthorizeEditorDataManagedEntityRestrictionsDTO
type AuthorizeEditorDataManagedEntityRestrictionsDTO struct {
	ReadOnly *bool `json:"readOnly,omitempty"`
	DisallowChildren *bool `json:"disallowChildren,omitempty"`
}

// NewAuthorizeEditorDataManagedEntityRestrictionsDTO instantiates a new AuthorizeEditorDataManagedEntityRestrictionsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataManagedEntityRestrictionsDTO() *AuthorizeEditorDataManagedEntityRestrictionsDTO {
	this := AuthorizeEditorDataManagedEntityRestrictionsDTO{}
	return &this
}

// NewAuthorizeEditorDataManagedEntityRestrictionsDTOWithDefaults instantiates a new AuthorizeEditorDataManagedEntityRestrictionsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataManagedEntityRestrictionsDTOWithDefaults() *AuthorizeEditorDataManagedEntityRestrictionsDTO {
	this := AuthorizeEditorDataManagedEntityRestrictionsDTO{}
	return &this
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetDisallowChildren returns the DisallowChildren field value if set, zero value otherwise.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) GetDisallowChildren() bool {
	if o == nil || IsNil(o.DisallowChildren) {
		var ret bool
		return ret
	}
	return *o.DisallowChildren
}

// GetDisallowChildrenOk returns a tuple with the DisallowChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) GetDisallowChildrenOk() (*bool, bool) {
	if o == nil || IsNil(o.DisallowChildren) {
		return nil, false
	}
	return o.DisallowChildren, true
}

// HasDisallowChildren returns a boolean if a field has been set.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) HasDisallowChildren() bool {
	if o != nil && !IsNil(o.DisallowChildren) {
		return true
	}

	return false
}

// SetDisallowChildren gets a reference to the given bool and assigns it to the DisallowChildren field.
func (o *AuthorizeEditorDataManagedEntityRestrictionsDTO) SetDisallowChildren(v bool) {
	o.DisallowChildren = &v
}

func (o AuthorizeEditorDataManagedEntityRestrictionsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataManagedEntityRestrictionsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReadOnly) {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if !IsNil(o.DisallowChildren) {
		toSerialize["disallowChildren"] = o.DisallowChildren
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataManagedEntityRestrictionsDTO struct {
	value *AuthorizeEditorDataManagedEntityRestrictionsDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) Get() *AuthorizeEditorDataManagedEntityRestrictionsDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) Set(val *AuthorizeEditorDataManagedEntityRestrictionsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataManagedEntityRestrictionsDTO(val *AuthorizeEditorDataManagedEntityRestrictionsDTO) *NullableAuthorizeEditorDataManagedEntityRestrictionsDTO {
	return &NullableAuthorizeEditorDataManagedEntityRestrictionsDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataManagedEntityRestrictionsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


