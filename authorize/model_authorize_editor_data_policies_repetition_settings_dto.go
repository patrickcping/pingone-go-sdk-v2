/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataPoliciesRepetitionSettingsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataPoliciesRepetitionSettingsDTO{}

// AuthorizeEditorDataPoliciesRepetitionSettingsDTO struct for AuthorizeEditorDataPoliciesRepetitionSettingsDTO
type AuthorizeEditorDataPoliciesRepetitionSettingsDTO struct {
	Source AuthorizeEditorDataReferenceObjectDTO `json:"source"`
	Decision EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision `json:"decision"`
}

// NewAuthorizeEditorDataPoliciesRepetitionSettingsDTO instantiates a new AuthorizeEditorDataPoliciesRepetitionSettingsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataPoliciesRepetitionSettingsDTO(source AuthorizeEditorDataReferenceObjectDTO, decision EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision) *AuthorizeEditorDataPoliciesRepetitionSettingsDTO {
	this := AuthorizeEditorDataPoliciesRepetitionSettingsDTO{}
	this.Source = source
	this.Decision = decision
	return &this
}

// NewAuthorizeEditorDataPoliciesRepetitionSettingsDTOWithDefaults instantiates a new AuthorizeEditorDataPoliciesRepetitionSettingsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataPoliciesRepetitionSettingsDTOWithDefaults() *AuthorizeEditorDataPoliciesRepetitionSettingsDTO {
	this := AuthorizeEditorDataPoliciesRepetitionSettingsDTO{}
	return &this
}

// GetSource returns the Source field value
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) GetSource() AuthorizeEditorDataReferenceObjectDTO {
	if o == nil {
		var ret AuthorizeEditorDataReferenceObjectDTO
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) GetSourceOk() (*AuthorizeEditorDataReferenceObjectDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) SetSource(v AuthorizeEditorDataReferenceObjectDTO) {
	o.Source = v
}

// GetDecision returns the Decision field value
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) GetDecision() EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision {
	if o == nil {
		var ret EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision
		return ret
	}

	return o.Decision
}

// GetDecisionOk returns a tuple with the Decision field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) GetDecisionOk() (*EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Decision, true
}

// SetDecision sets field value
func (o *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) SetDecision(v EnumAuthorizeEditorDataPoliciesRepetitionSettingsDTODecision) {
	o.Decision = v
}

func (o AuthorizeEditorDataPoliciesRepetitionSettingsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataPoliciesRepetitionSettingsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["decision"] = o.Decision
	return toSerialize, nil
}

type NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO struct {
	value *AuthorizeEditorDataPoliciesRepetitionSettingsDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) Get() *AuthorizeEditorDataPoliciesRepetitionSettingsDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) Set(val *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO(val *AuthorizeEditorDataPoliciesRepetitionSettingsDTO) *NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO {
	return &NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataPoliciesRepetitionSettingsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


