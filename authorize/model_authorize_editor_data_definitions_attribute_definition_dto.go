/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataDefinitionsAttributeDefinitionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataDefinitionsAttributeDefinitionDTO{}

// AuthorizeEditorDataDefinitionsAttributeDefinitionDTO struct for AuthorizeEditorDataDefinitionsAttributeDefinitionDTO
type AuthorizeEditorDataDefinitionsAttributeDefinitionDTO struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	// HAL embedded resources
	Embedded map[string]map[string]interface{} `json:"_embedded,omitempty"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	// The resource's unique identifier
	Id *string `json:"id,omitempty"`
	Version *string `json:"version,omitempty"`
	Name string `json:"name"`
	FullName *string `json:"fullName,omitempty"`
	Description *string `json:"description,omitempty"`
	Type *EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType `json:"type,omitempty"`
	Parent *AuthorizeEditorDataReferenceObjectDTO `json:"parent,omitempty"`
	Resolvers []AuthorizeEditorDataResolverDTO `json:"resolvers,omitempty"`
	Processor *AuthorizeEditorDataProcessorDTO `json:"processor,omitempty"`
	ValueType AuthorizeEditorDataValueTypeDTO `json:"valueType"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	RepetitionSource *AuthorizeEditorDataReferenceObjectDTO `json:"repetitionSource,omitempty"`
	ValueSchema *string `json:"valueSchema,omitempty"`
	ManagedEntity *AuthorizeEditorDataManagedEntityDTO `json:"managedEntity,omitempty"`
}

// NewAuthorizeEditorDataDefinitionsAttributeDefinitionDTO instantiates a new AuthorizeEditorDataDefinitionsAttributeDefinitionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataDefinitionsAttributeDefinitionDTO(name string, valueType AuthorizeEditorDataValueTypeDTO) *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO {
	this := AuthorizeEditorDataDefinitionsAttributeDefinitionDTO{}
	this.Name = name
	this.ValueType = valueType
	return &this
}

// NewAuthorizeEditorDataDefinitionsAttributeDefinitionDTOWithDefaults instantiates a new AuthorizeEditorDataDefinitionsAttributeDefinitionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataDefinitionsAttributeDefinitionDTOWithDefaults() *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO {
	this := AuthorizeEditorDataDefinitionsAttributeDefinitionDTO{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetEmbedded() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Embedded) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetEmbeddedOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Embedded) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasEmbedded() bool {
	if o != nil && !IsNil(o.Embedded) {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given map[string]map[string]interface{} and assigns it to the Embedded field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetEmbedded(v map[string]map[string]interface{}) {
	o.Embedded = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetEnvironment() ObjectEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetVersion(v string) {
	o.Version = &v
}

// GetName returns the Name field value
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetFullName(v string) {
	o.FullName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetType() EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType {
	if o == nil || IsNil(o.Type) {
		var ret EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetTypeOk() (*EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType and assigns it to the Type field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetType(v EnumAuthorizeEditorDataDefinitionsAttributeDefinitionDTOType) {
	o.Type = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetParent() AuthorizeEditorDataReferenceObjectDTO {
	if o == nil || IsNil(o.Parent) {
		var ret AuthorizeEditorDataReferenceObjectDTO
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetParentOk() (*AuthorizeEditorDataReferenceObjectDTO, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given AuthorizeEditorDataReferenceObjectDTO and assigns it to the Parent field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetParent(v AuthorizeEditorDataReferenceObjectDTO) {
	o.Parent = &v
}

// GetResolvers returns the Resolvers field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetResolvers() []AuthorizeEditorDataResolverDTO {
	if o == nil || IsNil(o.Resolvers) {
		var ret []AuthorizeEditorDataResolverDTO
		return ret
	}
	return o.Resolvers
}

// GetResolversOk returns a tuple with the Resolvers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetResolversOk() ([]AuthorizeEditorDataResolverDTO, bool) {
	if o == nil || IsNil(o.Resolvers) {
		return nil, false
	}
	return o.Resolvers, true
}

// HasResolvers returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasResolvers() bool {
	if o != nil && !IsNil(o.Resolvers) {
		return true
	}

	return false
}

// SetResolvers gets a reference to the given []AuthorizeEditorDataResolverDTO and assigns it to the Resolvers field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetResolvers(v []AuthorizeEditorDataResolverDTO) {
	o.Resolvers = v
}

// GetProcessor returns the Processor field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetProcessor() AuthorizeEditorDataProcessorDTO {
	if o == nil || IsNil(o.Processor) {
		var ret AuthorizeEditorDataProcessorDTO
		return ret
	}
	return *o.Processor
}

// GetProcessorOk returns a tuple with the Processor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetProcessorOk() (*AuthorizeEditorDataProcessorDTO, bool) {
	if o == nil || IsNil(o.Processor) {
		return nil, false
	}
	return o.Processor, true
}

// HasProcessor returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasProcessor() bool {
	if o != nil && !IsNil(o.Processor) {
		return true
	}

	return false
}

// SetProcessor gets a reference to the given AuthorizeEditorDataProcessorDTO and assigns it to the Processor field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetProcessor(v AuthorizeEditorDataProcessorDTO) {
	o.Processor = &v
}

// GetValueType returns the ValueType field value
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetValueType() AuthorizeEditorDataValueTypeDTO {
	if o == nil {
		var ret AuthorizeEditorDataValueTypeDTO
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetValueTypeOk() (*AuthorizeEditorDataValueTypeDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetValueType(v AuthorizeEditorDataValueTypeDTO) {
	o.ValueType = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetRepetitionSource returns the RepetitionSource field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetRepetitionSource() AuthorizeEditorDataReferenceObjectDTO {
	if o == nil || IsNil(o.RepetitionSource) {
		var ret AuthorizeEditorDataReferenceObjectDTO
		return ret
	}
	return *o.RepetitionSource
}

// GetRepetitionSourceOk returns a tuple with the RepetitionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetRepetitionSourceOk() (*AuthorizeEditorDataReferenceObjectDTO, bool) {
	if o == nil || IsNil(o.RepetitionSource) {
		return nil, false
	}
	return o.RepetitionSource, true
}

// HasRepetitionSource returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasRepetitionSource() bool {
	if o != nil && !IsNil(o.RepetitionSource) {
		return true
	}

	return false
}

// SetRepetitionSource gets a reference to the given AuthorizeEditorDataReferenceObjectDTO and assigns it to the RepetitionSource field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetRepetitionSource(v AuthorizeEditorDataReferenceObjectDTO) {
	o.RepetitionSource = &v
}

// GetValueSchema returns the ValueSchema field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetValueSchema() string {
	if o == nil || IsNil(o.ValueSchema) {
		var ret string
		return ret
	}
	return *o.ValueSchema
}

// GetValueSchemaOk returns a tuple with the ValueSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetValueSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.ValueSchema) {
		return nil, false
	}
	return o.ValueSchema, true
}

// HasValueSchema returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasValueSchema() bool {
	if o != nil && !IsNil(o.ValueSchema) {
		return true
	}

	return false
}

// SetValueSchema gets a reference to the given string and assigns it to the ValueSchema field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetValueSchema(v string) {
	o.ValueSchema = &v
}

// GetManagedEntity returns the ManagedEntity field value if set, zero value otherwise.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetManagedEntity() AuthorizeEditorDataManagedEntityDTO {
	if o == nil || IsNil(o.ManagedEntity) {
		var ret AuthorizeEditorDataManagedEntityDTO
		return ret
	}
	return *o.ManagedEntity
}

// GetManagedEntityOk returns a tuple with the ManagedEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) GetManagedEntityOk() (*AuthorizeEditorDataManagedEntityDTO, bool) {
	if o == nil || IsNil(o.ManagedEntity) {
		return nil, false
	}
	return o.ManagedEntity, true
}

// HasManagedEntity returns a boolean if a field has been set.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) HasManagedEntity() bool {
	if o != nil && !IsNil(o.ManagedEntity) {
		return true
	}

	return false
}

// SetManagedEntity gets a reference to the given AuthorizeEditorDataManagedEntityDTO and assigns it to the ManagedEntity field.
func (o *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) SetManagedEntity(v AuthorizeEditorDataManagedEntityDTO) {
	o.ManagedEntity = &v
}

func (o AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Embedded) {
		toSerialize["_embedded"] = o.Embedded
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Resolvers) {
		toSerialize["resolvers"] = o.Resolvers
	}
	if !IsNil(o.Processor) {
		toSerialize["processor"] = o.Processor
	}
	toSerialize["valueType"] = o.ValueType
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if !IsNil(o.RepetitionSource) {
		toSerialize["repetitionSource"] = o.RepetitionSource
	}
	if !IsNil(o.ValueSchema) {
		toSerialize["valueSchema"] = o.ValueSchema
	}
	if !IsNil(o.ManagedEntity) {
		toSerialize["managedEntity"] = o.ManagedEntity
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO struct {
	value *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) Get() *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) Set(val *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO(val *AuthorizeEditorDataDefinitionsAttributeDefinitionDTO) *NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO {
	return &NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataDefinitionsAttributeDefinitionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


