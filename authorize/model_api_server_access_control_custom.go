/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the APIServerAccessControlCustom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIServerAccessControlCustom{}

// APIServerAccessControlCustom Defines if the operation will use custom policy rather than the \"Group\" or \"Scope\" `accessControl` requirement.
type APIServerAccessControlCustom struct {
	// If `TRUE`, custom policy will be used for the endpoint. Defaults to `FALSE`.
	Enabled *bool `json:"enabled,omitempty"`
}

// NewAPIServerAccessControlCustom instantiates a new APIServerAccessControlCustom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIServerAccessControlCustom() *APIServerAccessControlCustom {
	this := APIServerAccessControlCustom{}
	return &this
}

// NewAPIServerAccessControlCustomWithDefaults instantiates a new APIServerAccessControlCustom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIServerAccessControlCustomWithDefaults() *APIServerAccessControlCustom {
	this := APIServerAccessControlCustom{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *APIServerAccessControlCustom) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIServerAccessControlCustom) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *APIServerAccessControlCustom) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *APIServerAccessControlCustom) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o APIServerAccessControlCustom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIServerAccessControlCustom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableAPIServerAccessControlCustom struct {
	value *APIServerAccessControlCustom
	isSet bool
}

func (v NullableAPIServerAccessControlCustom) Get() *APIServerAccessControlCustom {
	return v.value
}

func (v *NullableAPIServerAccessControlCustom) Set(val *APIServerAccessControlCustom) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIServerAccessControlCustom) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIServerAccessControlCustom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIServerAccessControlCustom(val *APIServerAccessControlCustom) *NullableAPIServerAccessControlCustom {
	return &NullableAPIServerAccessControlCustom{value: val, isSet: true}
}

func (v NullableAPIServerAccessControlCustom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIServerAccessControlCustom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
