/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataServiceObjectDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataServiceObjectDTO{}

// AuthorizeEditorDataServiceObjectDTO struct for AuthorizeEditorDataServiceObjectDTO
type AuthorizeEditorDataServiceObjectDTO struct {
	Name string `json:"name"`
}

// NewAuthorizeEditorDataServiceObjectDTO instantiates a new AuthorizeEditorDataServiceObjectDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataServiceObjectDTO(name string) *AuthorizeEditorDataServiceObjectDTO {
	this := AuthorizeEditorDataServiceObjectDTO{}
	this.Name = name
	return &this
}

// NewAuthorizeEditorDataServiceObjectDTOWithDefaults instantiates a new AuthorizeEditorDataServiceObjectDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataServiceObjectDTOWithDefaults() *AuthorizeEditorDataServiceObjectDTO {
	this := AuthorizeEditorDataServiceObjectDTO{}
	return &this
}

// GetName returns the Name field value
func (o *AuthorizeEditorDataServiceObjectDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceObjectDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AuthorizeEditorDataServiceObjectDTO) SetName(v string) {
	o.Name = v
}

func (o AuthorizeEditorDataServiceObjectDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataServiceObjectDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableAuthorizeEditorDataServiceObjectDTO struct {
	value *AuthorizeEditorDataServiceObjectDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataServiceObjectDTO) Get() *AuthorizeEditorDataServiceObjectDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataServiceObjectDTO) Set(val *AuthorizeEditorDataServiceObjectDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataServiceObjectDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataServiceObjectDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataServiceObjectDTO(val *AuthorizeEditorDataServiceObjectDTO) *NullableAuthorizeEditorDataServiceObjectDTO {
	return &NullableAuthorizeEditorDataServiceObjectDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataServiceObjectDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataServiceObjectDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


