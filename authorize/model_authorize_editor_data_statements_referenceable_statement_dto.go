/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataStatementsReferenceableStatementDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataStatementsReferenceableStatementDTO{}

// AuthorizeEditorDataStatementsReferenceableStatementDTO struct for AuthorizeEditorDataStatementsReferenceableStatementDTO
type AuthorizeEditorDataStatementsReferenceableStatementDTO struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	// The resource's unique identifier
	Id string `json:"id"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Code string `json:"code"`
	AppliesTo EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo `json:"appliesTo"`
	AppliesIf EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf `json:"appliesIf"`
	Payload string `json:"payload"`
	Obligatory *bool `json:"obligatory,omitempty"`
	Attributes []AuthorizeEditorDataReferenceObjectDTO `json:"attributes"`
	Version string `json:"version"`
}

// NewAuthorizeEditorDataStatementsReferenceableStatementDTO instantiates a new AuthorizeEditorDataStatementsReferenceableStatementDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataStatementsReferenceableStatementDTO(id string, name string, code string, appliesTo EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo, appliesIf EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf, payload string, attributes []AuthorizeEditorDataReferenceObjectDTO, version string) *AuthorizeEditorDataStatementsReferenceableStatementDTO {
	this := AuthorizeEditorDataStatementsReferenceableStatementDTO{}
	this.Id = id
	this.Name = name
	this.Code = code
	this.AppliesTo = appliesTo
	this.AppliesIf = appliesIf
	this.Payload = payload
	this.Attributes = attributes
	this.Version = version
	return &this
}

// NewAuthorizeEditorDataStatementsReferenceableStatementDTOWithDefaults instantiates a new AuthorizeEditorDataStatementsReferenceableStatementDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataStatementsReferenceableStatementDTOWithDefaults() *AuthorizeEditorDataStatementsReferenceableStatementDTO {
	this := AuthorizeEditorDataStatementsReferenceableStatementDTO{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetId returns the Id field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetDescription(v string) {
	o.Description = &v
}

// GetCode returns the Code field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetCode(v string) {
	o.Code = v
}

// GetAppliesTo returns the AppliesTo field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAppliesTo() EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo {
	if o == nil {
		var ret EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo
		return ret
	}

	return o.AppliesTo
}

// GetAppliesToOk returns a tuple with the AppliesTo field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAppliesToOk() (*EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppliesTo, true
}

// SetAppliesTo sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetAppliesTo(v EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesTo) {
	o.AppliesTo = v
}

// GetAppliesIf returns the AppliesIf field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAppliesIf() EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf {
	if o == nil {
		var ret EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf
		return ret
	}

	return o.AppliesIf
}

// GetAppliesIfOk returns a tuple with the AppliesIf field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAppliesIfOk() (*EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppliesIf, true
}

// SetAppliesIf sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetAppliesIf(v EnumAuthorizeEditorDataStatementsReferenceableStatementDTOAppliesIf) {
	o.AppliesIf = v
}

// GetPayload returns the Payload field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetPayload(v string) {
	o.Payload = v
}

// GetObligatory returns the Obligatory field value if set, zero value otherwise.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetObligatory() bool {
	if o == nil || IsNil(o.Obligatory) {
		var ret bool
		return ret
	}
	return *o.Obligatory
}

// GetObligatoryOk returns a tuple with the Obligatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetObligatoryOk() (*bool, bool) {
	if o == nil || IsNil(o.Obligatory) {
		return nil, false
	}
	return o.Obligatory, true
}

// HasObligatory returns a boolean if a field has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) HasObligatory() bool {
	if o != nil && !IsNil(o.Obligatory) {
		return true
	}

	return false
}

// SetObligatory gets a reference to the given bool and assigns it to the Obligatory field.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetObligatory(v bool) {
	o.Obligatory = &v
}

// GetAttributes returns the Attributes field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAttributes() []AuthorizeEditorDataReferenceObjectDTO {
	if o == nil {
		var ret []AuthorizeEditorDataReferenceObjectDTO
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetAttributesOk() ([]AuthorizeEditorDataReferenceObjectDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetAttributes(v []AuthorizeEditorDataReferenceObjectDTO) {
	o.Attributes = v
}

// GetVersion returns the Version field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AuthorizeEditorDataStatementsReferenceableStatementDTO) SetVersion(v string) {
	o.Version = v
}

func (o AuthorizeEditorDataStatementsReferenceableStatementDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataStatementsReferenceableStatementDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["code"] = o.Code
	toSerialize["appliesTo"] = o.AppliesTo
	toSerialize["appliesIf"] = o.AppliesIf
	toSerialize["payload"] = o.Payload
	if !IsNil(o.Obligatory) {
		toSerialize["obligatory"] = o.Obligatory
	}
	toSerialize["attributes"] = o.Attributes
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableAuthorizeEditorDataStatementsReferenceableStatementDTO struct {
	value *AuthorizeEditorDataStatementsReferenceableStatementDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) Get() *AuthorizeEditorDataStatementsReferenceableStatementDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) Set(val *AuthorizeEditorDataStatementsReferenceableStatementDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataStatementsReferenceableStatementDTO(val *AuthorizeEditorDataStatementsReferenceableStatementDTO) *NullableAuthorizeEditorDataStatementsReferenceableStatementDTO {
	return &NullableAuthorizeEditorDataStatementsReferenceableStatementDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataStatementsReferenceableStatementDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


