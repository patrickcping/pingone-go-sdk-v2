/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataManagedEntityDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataManagedEntityDTO{}

// AuthorizeEditorDataManagedEntityDTO struct for AuthorizeEditorDataManagedEntityDTO
type AuthorizeEditorDataManagedEntityDTO struct {
	Owner AuthorizeEditorDataManagedEntityOwnerDTO `json:"owner"`
	Restrictions *AuthorizeEditorDataManagedEntityRestrictionsDTO `json:"restrictions,omitempty"`
	Reference *AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO `json:"reference,omitempty"`
}

// NewAuthorizeEditorDataManagedEntityDTO instantiates a new AuthorizeEditorDataManagedEntityDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataManagedEntityDTO(owner AuthorizeEditorDataManagedEntityOwnerDTO) *AuthorizeEditorDataManagedEntityDTO {
	this := AuthorizeEditorDataManagedEntityDTO{}
	this.Owner = owner
	return &this
}

// NewAuthorizeEditorDataManagedEntityDTOWithDefaults instantiates a new AuthorizeEditorDataManagedEntityDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataManagedEntityDTOWithDefaults() *AuthorizeEditorDataManagedEntityDTO {
	this := AuthorizeEditorDataManagedEntityDTO{}
	return &this
}

// GetOwner returns the Owner field value
func (o *AuthorizeEditorDataManagedEntityDTO) GetOwner() AuthorizeEditorDataManagedEntityOwnerDTO {
	if o == nil {
		var ret AuthorizeEditorDataManagedEntityOwnerDTO
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataManagedEntityDTO) GetOwnerOk() (*AuthorizeEditorDataManagedEntityOwnerDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *AuthorizeEditorDataManagedEntityDTO) SetOwner(v AuthorizeEditorDataManagedEntityOwnerDTO) {
	o.Owner = v
}

// GetRestrictions returns the Restrictions field value if set, zero value otherwise.
func (o *AuthorizeEditorDataManagedEntityDTO) GetRestrictions() AuthorizeEditorDataManagedEntityRestrictionsDTO {
	if o == nil || IsNil(o.Restrictions) {
		var ret AuthorizeEditorDataManagedEntityRestrictionsDTO
		return ret
	}
	return *o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataManagedEntityDTO) GetRestrictionsOk() (*AuthorizeEditorDataManagedEntityRestrictionsDTO, bool) {
	if o == nil || IsNil(o.Restrictions) {
		return nil, false
	}
	return o.Restrictions, true
}

// HasRestrictions returns a boolean if a field has been set.
func (o *AuthorizeEditorDataManagedEntityDTO) HasRestrictions() bool {
	if o != nil && !IsNil(o.Restrictions) {
		return true
	}

	return false
}

// SetRestrictions gets a reference to the given AuthorizeEditorDataManagedEntityRestrictionsDTO and assigns it to the Restrictions field.
func (o *AuthorizeEditorDataManagedEntityDTO) SetRestrictions(v AuthorizeEditorDataManagedEntityRestrictionsDTO) {
	o.Restrictions = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *AuthorizeEditorDataManagedEntityDTO) GetReference() AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO {
	if o == nil || IsNil(o.Reference) {
		var ret AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataManagedEntityDTO) GetReferenceOk() (*AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *AuthorizeEditorDataManagedEntityDTO) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO and assigns it to the Reference field.
func (o *AuthorizeEditorDataManagedEntityDTO) SetReference(v AuthorizeEditorDataManagedEntityManagedEntityReferenceDTO) {
	o.Reference = &v
}

func (o AuthorizeEditorDataManagedEntityDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataManagedEntityDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["owner"] = o.Owner
	if !IsNil(o.Restrictions) {
		toSerialize["restrictions"] = o.Restrictions
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataManagedEntityDTO struct {
	value *AuthorizeEditorDataManagedEntityDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataManagedEntityDTO) Get() *AuthorizeEditorDataManagedEntityDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataManagedEntityDTO) Set(val *AuthorizeEditorDataManagedEntityDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataManagedEntityDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataManagedEntityDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataManagedEntityDTO(val *AuthorizeEditorDataManagedEntityDTO) *NullableAuthorizeEditorDataManagedEntityDTO {
	return &NullableAuthorizeEditorDataManagedEntityDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataManagedEntityDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataManagedEntityDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


