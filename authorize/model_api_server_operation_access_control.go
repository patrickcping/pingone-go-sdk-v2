/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the APIServerOperationAccessControl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIServerOperationAccessControl{}

// APIServerOperationAccessControl The access control configuration for the operation.
type APIServerOperationAccessControl struct {
	Group      *APIServerOperationAccessControlGroup      `json:"group,omitempty"`
	Permission *APIServerOperationAccessControlPermission `json:"permission,omitempty"`
	Scope      *APIServerOperationAccessControlScope      `json:"scope,omitempty"`
}

// NewAPIServerOperationAccessControl instantiates a new APIServerOperationAccessControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIServerOperationAccessControl() *APIServerOperationAccessControl {
	this := APIServerOperationAccessControl{}
	return &this
}

// NewAPIServerOperationAccessControlWithDefaults instantiates a new APIServerOperationAccessControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIServerOperationAccessControlWithDefaults() *APIServerOperationAccessControl {
	this := APIServerOperationAccessControl{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *APIServerOperationAccessControl) GetGroup() APIServerOperationAccessControlGroup {
	if o == nil || IsNil(o.Group) {
		var ret APIServerOperationAccessControlGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIServerOperationAccessControl) GetGroupOk() (*APIServerOperationAccessControlGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *APIServerOperationAccessControl) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given APIServerOperationAccessControlGroup and assigns it to the Group field.
func (o *APIServerOperationAccessControl) SetGroup(v APIServerOperationAccessControlGroup) {
	o.Group = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *APIServerOperationAccessControl) GetPermission() APIServerOperationAccessControlPermission {
	if o == nil || IsNil(o.Permission) {
		var ret APIServerOperationAccessControlPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIServerOperationAccessControl) GetPermissionOk() (*APIServerOperationAccessControlPermission, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *APIServerOperationAccessControl) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given APIServerOperationAccessControlPermission and assigns it to the Permission field.
func (o *APIServerOperationAccessControl) SetPermission(v APIServerOperationAccessControlPermission) {
	o.Permission = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *APIServerOperationAccessControl) GetScope() APIServerOperationAccessControlScope {
	if o == nil || IsNil(o.Scope) {
		var ret APIServerOperationAccessControlScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIServerOperationAccessControl) GetScopeOk() (*APIServerOperationAccessControlScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *APIServerOperationAccessControl) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given APIServerOperationAccessControlScope and assigns it to the Scope field.
func (o *APIServerOperationAccessControl) SetScope(v APIServerOperationAccessControlScope) {
	o.Scope = &v
}

func (o APIServerOperationAccessControl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIServerOperationAccessControl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableAPIServerOperationAccessControl struct {
	value *APIServerOperationAccessControl
	isSet bool
}

func (v NullableAPIServerOperationAccessControl) Get() *APIServerOperationAccessControl {
	return v.value
}

func (v *NullableAPIServerOperationAccessControl) Set(val *APIServerOperationAccessControl) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIServerOperationAccessControl) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIServerOperationAccessControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIServerOperationAccessControl(val *APIServerOperationAccessControl) *NullableAPIServerOperationAccessControl {
	return &NullableAPIServerOperationAccessControl{value: val, isSet: true}
}

func (v NullableAPIServerOperationAccessControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIServerOperationAccessControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
