/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO{}

// AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO struct for AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO
type AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO struct {
	Type EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType `json:"type"`
	UserId string `json:"userId"`
}

// NewAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO instantiates a new AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO(type_ EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType, userId string) *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO {
	this := AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO{}
	this.Type = type_
	this.UserId = userId
	return &this
}

// NewAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTOWithDefaults instantiates a new AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTOWithDefaults() *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO {
	this := AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO{}
	return &this
}

// GetType returns the Type field value
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) GetType() EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType {
	if o == nil {
		var ret EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) GetTypeOk() (*EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) SetType(v EnumAuthorizeEditorDataAttributeResolversUserQueryDTOType) {
	o.Type = v
}

// GetUserId returns the UserId field value
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) SetUserId(v string) {
	o.UserId = v
}

func (o AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["userId"] = o.UserId
	return toSerialize, nil
}

type NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO struct {
	value *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) Get() *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) Set(val *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO(val *AuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) *NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO {
	return &NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataAttributeResolversUserQueryUserIdQueryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


