/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO{}

// AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO struct for AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO
type AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO struct {
	Type EnumAuthorizeEditorDataRulesEffectSettingsDTOType `json:"type"`
	Condition AuthorizeEditorDataConditionDTO `json:"condition"`
}

// NewAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO instantiates a new AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO(type_ EnumAuthorizeEditorDataRulesEffectSettingsDTOType, condition AuthorizeEditorDataConditionDTO) *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO {
	this := AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO{}
	this.Type = type_
	this.Condition = condition
	return &this
}

// NewAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTOWithDefaults instantiates a new AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTOWithDefaults() *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO {
	this := AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO{}
	return &this
}

// GetType returns the Type field value
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) GetType() EnumAuthorizeEditorDataRulesEffectSettingsDTOType {
	if o == nil {
		var ret EnumAuthorizeEditorDataRulesEffectSettingsDTOType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) GetTypeOk() (*EnumAuthorizeEditorDataRulesEffectSettingsDTOType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) SetType(v EnumAuthorizeEditorDataRulesEffectSettingsDTOType) {
	o.Type = v
}

// GetCondition returns the Condition field value
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) GetCondition() AuthorizeEditorDataConditionDTO {
	if o == nil {
		var ret AuthorizeEditorDataConditionDTO
		return ret
	}

	return o.Condition
}

// GetConditionOk returns a tuple with the Condition field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) GetConditionOk() (*AuthorizeEditorDataConditionDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Condition, true
}

// SetCondition sets field value
func (o *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) SetCondition(v AuthorizeEditorDataConditionDTO) {
	o.Condition = v
}

func (o AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["condition"] = o.Condition
	return toSerialize, nil
}

type NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO struct {
	value *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) Get() *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) Set(val *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO(val *AuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) *NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO {
	return &NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataRulesEffectSettingsConditionalDenyElsePermitDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


