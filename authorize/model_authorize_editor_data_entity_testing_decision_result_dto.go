/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataEntityTestingDecisionResultDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataEntityTestingDecisionResultDTO{}

// AuthorizeEditorDataEntityTestingDecisionResultDTO struct for AuthorizeEditorDataEntityTestingDecisionResultDTO
type AuthorizeEditorDataEntityTestingDecisionResultDTO struct {
	Type *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAuthorizeEditorDataEntityTestingDecisionResultDTO instantiates a new AuthorizeEditorDataEntityTestingDecisionResultDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataEntityTestingDecisionResultDTO() *AuthorizeEditorDataEntityTestingDecisionResultDTO {
	this := AuthorizeEditorDataEntityTestingDecisionResultDTO{}
	return &this
}

// NewAuthorizeEditorDataEntityTestingDecisionResultDTOWithDefaults instantiates a new AuthorizeEditorDataEntityTestingDecisionResultDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataEntityTestingDecisionResultDTOWithDefaults() *AuthorizeEditorDataEntityTestingDecisionResultDTO {
	this := AuthorizeEditorDataEntityTestingDecisionResultDTO{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AuthorizeEditorDataEntityTestingDecisionResultDTO) SetValue(v string) {
	o.Value = &v
}

func (o AuthorizeEditorDataEntityTestingDecisionResultDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataEntityTestingDecisionResultDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataEntityTestingDecisionResultDTO struct {
	value *AuthorizeEditorDataEntityTestingDecisionResultDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) Get() *AuthorizeEditorDataEntityTestingDecisionResultDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) Set(val *AuthorizeEditorDataEntityTestingDecisionResultDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataEntityTestingDecisionResultDTO(val *AuthorizeEditorDataEntityTestingDecisionResultDTO) *NullableAuthorizeEditorDataEntityTestingDecisionResultDTO {
	return &NullableAuthorizeEditorDataEntityTestingDecisionResultDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataEntityTestingDecisionResultDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


