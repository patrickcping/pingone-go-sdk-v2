/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataAuthorizationVersionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataAuthorizationVersionDTO{}

// AuthorizeEditorDataAuthorizationVersionDTO struct for AuthorizeEditorDataAuthorizationVersionDTO
type AuthorizeEditorDataAuthorizationVersionDTO struct {
	Links *map[string]LinksHATEOASValue `json:"_links,omitempty"`
	// HAL embedded resources
	Embedded map[string]map[string]interface{} `json:"_embedded,omitempty"`
	// The resource's unique identifier
	Id *string `json:"id,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	ChangeDetails *AuthorizeEditorDataChangeDetailsDTO `json:"changeDetails,omitempty"`
	Tag *AuthorizeEditorDataTagResponseDTO `json:"tag,omitempty"`
	Environment *AuthorizeEditorDataEnvironmentDTO `json:"environment,omitempty"`
}

// NewAuthorizeEditorDataAuthorizationVersionDTO instantiates a new AuthorizeEditorDataAuthorizationVersionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataAuthorizationVersionDTO() *AuthorizeEditorDataAuthorizationVersionDTO {
	this := AuthorizeEditorDataAuthorizationVersionDTO{}
	return &this
}

// NewAuthorizeEditorDataAuthorizationVersionDTOWithDefaults instantiates a new AuthorizeEditorDataAuthorizationVersionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataAuthorizationVersionDTOWithDefaults() *AuthorizeEditorDataAuthorizationVersionDTO {
	this := AuthorizeEditorDataAuthorizationVersionDTO{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetLinks() map[string]LinksHATEOASValue {
	if o == nil || IsNil(o.Links) {
		var ret map[string]LinksHATEOASValue
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetLinksOk() (*map[string]LinksHATEOASValue, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]LinksHATEOASValue and assigns it to the Links field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetLinks(v map[string]LinksHATEOASValue) {
	o.Links = &v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetEmbedded() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Embedded) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetEmbeddedOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Embedded) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasEmbedded() bool {
	if o != nil && !IsNil(o.Embedded) {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given map[string]map[string]interface{} and assigns it to the Embedded field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetEmbedded(v map[string]map[string]interface{}) {
	o.Embedded = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetChangeDetails returns the ChangeDetails field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetChangeDetails() AuthorizeEditorDataChangeDetailsDTO {
	if o == nil || IsNil(o.ChangeDetails) {
		var ret AuthorizeEditorDataChangeDetailsDTO
		return ret
	}
	return *o.ChangeDetails
}

// GetChangeDetailsOk returns a tuple with the ChangeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetChangeDetailsOk() (*AuthorizeEditorDataChangeDetailsDTO, bool) {
	if o == nil || IsNil(o.ChangeDetails) {
		return nil, false
	}
	return o.ChangeDetails, true
}

// HasChangeDetails returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasChangeDetails() bool {
	if o != nil && !IsNil(o.ChangeDetails) {
		return true
	}

	return false
}

// SetChangeDetails gets a reference to the given AuthorizeEditorDataChangeDetailsDTO and assigns it to the ChangeDetails field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetChangeDetails(v AuthorizeEditorDataChangeDetailsDTO) {
	o.ChangeDetails = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetTag() AuthorizeEditorDataTagResponseDTO {
	if o == nil || IsNil(o.Tag) {
		var ret AuthorizeEditorDataTagResponseDTO
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetTagOk() (*AuthorizeEditorDataTagResponseDTO, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given AuthorizeEditorDataTagResponseDTO and assigns it to the Tag field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetTag(v AuthorizeEditorDataTagResponseDTO) {
	o.Tag = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetEnvironment() AuthorizeEditorDataEnvironmentDTO {
	if o == nil || IsNil(o.Environment) {
		var ret AuthorizeEditorDataEnvironmentDTO
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) GetEnvironmentOk() (*AuthorizeEditorDataEnvironmentDTO, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given AuthorizeEditorDataEnvironmentDTO and assigns it to the Environment field.
func (o *AuthorizeEditorDataAuthorizationVersionDTO) SetEnvironment(v AuthorizeEditorDataEnvironmentDTO) {
	o.Environment = &v
}

func (o AuthorizeEditorDataAuthorizationVersionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataAuthorizationVersionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Embedded) {
		toSerialize["_embedded"] = o.Embedded
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.ChangeDetails) {
		toSerialize["changeDetails"] = o.ChangeDetails
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataAuthorizationVersionDTO struct {
	value *AuthorizeEditorDataAuthorizationVersionDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataAuthorizationVersionDTO) Get() *AuthorizeEditorDataAuthorizationVersionDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataAuthorizationVersionDTO) Set(val *AuthorizeEditorDataAuthorizationVersionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataAuthorizationVersionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataAuthorizationVersionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataAuthorizationVersionDTO(val *AuthorizeEditorDataAuthorizationVersionDTO) *NullableAuthorizeEditorDataAuthorizationVersionDTO {
	return &NullableAuthorizeEditorDataAuthorizationVersionDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataAuthorizationVersionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataAuthorizationVersionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


