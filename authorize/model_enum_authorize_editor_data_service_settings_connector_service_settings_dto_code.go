/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode the model 'EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode'
type EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode string

// List of EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode
const (
	ENUMAUTHORIZEEDITORDATASERVICESETTINGSCONNECTORSERVICESETTINGSDTOCODE_P1_RISK EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode = "P1_RISK"
)

// All allowed values of EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode enum
var AllowedEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeEnumValues = []EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode{
	"P1_RISK",
}

func (v *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode(value)
	for _, existing := range AllowedEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeFromValue returns a pointer to a valid EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeFromValue(v string) (*EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode, error) {
	ev := EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode: valid values are %v", v, AllowedEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) IsValid() bool {
	for _, existing := range AllowedEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode value
func (v EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) Ptr() *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode {
	return &v
}

type NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode struct {
	value *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode
	isSet bool
}

func (v NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) Get() *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode {
	return v.value
}

func (v *NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) Set(val *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode(val *EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) *NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode {
	return &NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode{value: val, isSet: true}
}

func (v NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

