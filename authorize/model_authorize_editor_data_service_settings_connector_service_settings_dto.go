/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO{}

// AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO struct for AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO
type AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO struct {
	MaximumConcurrentRequests *int32 `json:"maximumConcurrentRequests,omitempty"`
	MaximumRequestsPerSecond *float64 `json:"maximumRequestsPerSecond,omitempty"`
	TimeoutMilliseconds *int32 `json:"timeoutMilliseconds,omitempty"`
	Channel EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel `json:"channel"`
	Code EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode `json:"code"`
	Capability string `json:"capability"`
	SchemaVersion *int32 `json:"schemaVersion,omitempty"`
	InputMappings []AuthorizeEditorDataInputMappingDTO `json:"inputMappings"`
}

// NewAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO instantiates a new AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO(channel EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel, code EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode, capability string, inputMappings []AuthorizeEditorDataInputMappingDTO) *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO {
	this := AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO{}
	this.Channel = channel
	this.Code = code
	this.Capability = capability
	this.InputMappings = inputMappings
	return &this
}

// NewAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOWithDefaults instantiates a new AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOWithDefaults() *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO {
	this := AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO{}
	return &this
}

// GetMaximumConcurrentRequests returns the MaximumConcurrentRequests field value if set, zero value otherwise.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetMaximumConcurrentRequests() int32 {
	if o == nil || IsNil(o.MaximumConcurrentRequests) {
		var ret int32
		return ret
	}
	return *o.MaximumConcurrentRequests
}

// GetMaximumConcurrentRequestsOk returns a tuple with the MaximumConcurrentRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetMaximumConcurrentRequestsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumConcurrentRequests) {
		return nil, false
	}
	return o.MaximumConcurrentRequests, true
}

// HasMaximumConcurrentRequests returns a boolean if a field has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) HasMaximumConcurrentRequests() bool {
	if o != nil && !IsNil(o.MaximumConcurrentRequests) {
		return true
	}

	return false
}

// SetMaximumConcurrentRequests gets a reference to the given int32 and assigns it to the MaximumConcurrentRequests field.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetMaximumConcurrentRequests(v int32) {
	o.MaximumConcurrentRequests = &v
}

// GetMaximumRequestsPerSecond returns the MaximumRequestsPerSecond field value if set, zero value otherwise.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetMaximumRequestsPerSecond() float64 {
	if o == nil || IsNil(o.MaximumRequestsPerSecond) {
		var ret float64
		return ret
	}
	return *o.MaximumRequestsPerSecond
}

// GetMaximumRequestsPerSecondOk returns a tuple with the MaximumRequestsPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetMaximumRequestsPerSecondOk() (*float64, bool) {
	if o == nil || IsNil(o.MaximumRequestsPerSecond) {
		return nil, false
	}
	return o.MaximumRequestsPerSecond, true
}

// HasMaximumRequestsPerSecond returns a boolean if a field has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) HasMaximumRequestsPerSecond() bool {
	if o != nil && !IsNil(o.MaximumRequestsPerSecond) {
		return true
	}

	return false
}

// SetMaximumRequestsPerSecond gets a reference to the given float64 and assigns it to the MaximumRequestsPerSecond field.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetMaximumRequestsPerSecond(v float64) {
	o.MaximumRequestsPerSecond = &v
}

// GetTimeoutMilliseconds returns the TimeoutMilliseconds field value if set, zero value otherwise.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetTimeoutMilliseconds() int32 {
	if o == nil || IsNil(o.TimeoutMilliseconds) {
		var ret int32
		return ret
	}
	return *o.TimeoutMilliseconds
}

// GetTimeoutMillisecondsOk returns a tuple with the TimeoutMilliseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetTimeoutMillisecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutMilliseconds) {
		return nil, false
	}
	return o.TimeoutMilliseconds, true
}

// HasTimeoutMilliseconds returns a boolean if a field has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) HasTimeoutMilliseconds() bool {
	if o != nil && !IsNil(o.TimeoutMilliseconds) {
		return true
	}

	return false
}

// SetTimeoutMilliseconds gets a reference to the given int32 and assigns it to the TimeoutMilliseconds field.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetTimeoutMilliseconds(v int32) {
	o.TimeoutMilliseconds = &v
}

// GetChannel returns the Channel field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetChannel() EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel {
	if o == nil {
		var ret EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetChannelOk() (*EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetChannel(v EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOChannel) {
	o.Channel = v
}

// GetCode returns the Code field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetCode() EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode {
	if o == nil {
		var ret EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetCodeOk() (*EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetCode(v EnumAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTOCode) {
	o.Code = v
}

// GetCapability returns the Capability field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetCapability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capability, true
}

// SetCapability sets field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetCapability(v string) {
	o.Capability = v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetSchemaVersion() int32 {
	if o == nil || IsNil(o.SchemaVersion) {
		var ret int32
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetSchemaVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.SchemaVersion) {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) HasSchemaVersion() bool {
	if o != nil && !IsNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given int32 and assigns it to the SchemaVersion field.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetSchemaVersion(v int32) {
	o.SchemaVersion = &v
}

// GetInputMappings returns the InputMappings field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetInputMappings() []AuthorizeEditorDataInputMappingDTO {
	if o == nil {
		var ret []AuthorizeEditorDataInputMappingDTO
		return ret
	}

	return o.InputMappings
}

// GetInputMappingsOk returns a tuple with the InputMappings field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) GetInputMappingsOk() ([]AuthorizeEditorDataInputMappingDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputMappings, true
}

// SetInputMappings sets field value
func (o *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) SetInputMappings(v []AuthorizeEditorDataInputMappingDTO) {
	o.InputMappings = v
}

func (o AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaximumConcurrentRequests) {
		toSerialize["maximumConcurrentRequests"] = o.MaximumConcurrentRequests
	}
	if !IsNil(o.MaximumRequestsPerSecond) {
		toSerialize["maximumRequestsPerSecond"] = o.MaximumRequestsPerSecond
	}
	if !IsNil(o.TimeoutMilliseconds) {
		toSerialize["timeoutMilliseconds"] = o.TimeoutMilliseconds
	}
	toSerialize["channel"] = o.Channel
	toSerialize["code"] = o.Code
	toSerialize["capability"] = o.Capability
	if !IsNil(o.SchemaVersion) {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	toSerialize["inputMappings"] = o.InputMappings
	return toSerialize, nil
}

type NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO struct {
	value *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) Get() *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) Set(val *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO(val *AuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) *NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO {
	return &NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataServiceSettingsConnectorServiceSettingsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


