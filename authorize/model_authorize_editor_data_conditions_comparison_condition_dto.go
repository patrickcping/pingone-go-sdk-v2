/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataConditionsComparisonConditionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataConditionsComparisonConditionDTO{}

// AuthorizeEditorDataConditionsComparisonConditionDTO struct for AuthorizeEditorDataConditionsComparisonConditionDTO
type AuthorizeEditorDataConditionsComparisonConditionDTO struct {
	Type EnumAuthorizeEditorDataConditionDTOType `json:"type"`
	Left AuthorizeEditorDataConditionsComparandLeftDTO `json:"left"`
	Right AuthorizeEditorDataConditionsComparandRightDTO `json:"right"`
	Comparator EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator `json:"comparator"`
}

// NewAuthorizeEditorDataConditionsComparisonConditionDTO instantiates a new AuthorizeEditorDataConditionsComparisonConditionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataConditionsComparisonConditionDTO(type_ EnumAuthorizeEditorDataConditionDTOType, left AuthorizeEditorDataConditionsComparandLeftDTO, right AuthorizeEditorDataConditionsComparandRightDTO, comparator EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator) *AuthorizeEditorDataConditionsComparisonConditionDTO {
	this := AuthorizeEditorDataConditionsComparisonConditionDTO{}
	this.Type = type_
	this.Left = left
	this.Right = right
	this.Comparator = comparator
	return &this
}

// NewAuthorizeEditorDataConditionsComparisonConditionDTOWithDefaults instantiates a new AuthorizeEditorDataConditionsComparisonConditionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataConditionsComparisonConditionDTOWithDefaults() *AuthorizeEditorDataConditionsComparisonConditionDTO {
	this := AuthorizeEditorDataConditionsComparisonConditionDTO{}
	return &this
}

// GetType returns the Type field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetType() EnumAuthorizeEditorDataConditionDTOType {
	if o == nil {
		var ret EnumAuthorizeEditorDataConditionDTOType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetTypeOk() (*EnumAuthorizeEditorDataConditionDTOType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) SetType(v EnumAuthorizeEditorDataConditionDTOType) {
	o.Type = v
}

// GetLeft returns the Left field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetLeft() AuthorizeEditorDataConditionsComparandLeftDTO {
	if o == nil {
		var ret AuthorizeEditorDataConditionsComparandLeftDTO
		return ret
	}

	return o.Left
}

// GetLeftOk returns a tuple with the Left field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetLeftOk() (*AuthorizeEditorDataConditionsComparandLeftDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Left, true
}

// SetLeft sets field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) SetLeft(v AuthorizeEditorDataConditionsComparandLeftDTO) {
	o.Left = v
}

// GetRight returns the Right field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetRight() AuthorizeEditorDataConditionsComparandRightDTO {
	if o == nil {
		var ret AuthorizeEditorDataConditionsComparandRightDTO
		return ret
	}

	return o.Right
}

// GetRightOk returns a tuple with the Right field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetRightOk() (*AuthorizeEditorDataConditionsComparandRightDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Right, true
}

// SetRight sets field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) SetRight(v AuthorizeEditorDataConditionsComparandRightDTO) {
	o.Right = v
}

// GetComparator returns the Comparator field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetComparator() EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator {
	if o == nil {
		var ret EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator
		return ret
	}

	return o.Comparator
}

// GetComparatorOk returns a tuple with the Comparator field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) GetComparatorOk() (*EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comparator, true
}

// SetComparator sets field value
func (o *AuthorizeEditorDataConditionsComparisonConditionDTO) SetComparator(v EnumAuthorizeEditorDataConditionsComparisonConditionDTOComparator) {
	o.Comparator = v
}

func (o AuthorizeEditorDataConditionsComparisonConditionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataConditionsComparisonConditionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["left"] = o.Left
	toSerialize["right"] = o.Right
	toSerialize["comparator"] = o.Comparator
	return toSerialize, nil
}

type NullableAuthorizeEditorDataConditionsComparisonConditionDTO struct {
	value *AuthorizeEditorDataConditionsComparisonConditionDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataConditionsComparisonConditionDTO) Get() *AuthorizeEditorDataConditionsComparisonConditionDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataConditionsComparisonConditionDTO) Set(val *AuthorizeEditorDataConditionsComparisonConditionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataConditionsComparisonConditionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataConditionsComparisonConditionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataConditionsComparisonConditionDTO(val *AuthorizeEditorDataConditionsComparisonConditionDTO) *NullableAuthorizeEditorDataConditionsComparisonConditionDTO {
	return &NullableAuthorizeEditorDataConditionsComparisonConditionDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataConditionsComparisonConditionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataConditionsComparisonConditionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


