/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue the model 'EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue'
type EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue string

// List of EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue
const (
	ENUMAUTHORIZEEDITORDATAATTRIBUTERESOLVERSSYSTEMRESOLVERDTOVALUE_NULL EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue = "NULL"
	ENUMAUTHORIZEEDITORDATAATTRIBUTERESOLVERSSYSTEMRESOLVERDTOVALUE_CURRENT_DATE_TIME EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue = "CURRENT_DATE_TIME"
)

// All allowed values of EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue enum
var AllowedEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueEnumValues = []EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue{
	"NULL",
	"CURRENT_DATE_TIME",
}

func (v *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue(value)
	for _, existing := range AllowedEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueFromValue returns a pointer to a valid EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueFromValue(v string) (*EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue, error) {
	ev := EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue: valid values are %v", v, AllowedEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) IsValid() bool {
	for _, existing := range AllowedEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue value
func (v EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) Ptr() *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue {
	return &v
}

type NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue struct {
	value *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue
	isSet bool
}

func (v NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) Get() *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue {
	return v.value
}

func (v *NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) Set(val *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue(val *EnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) *NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue {
	return &NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue{value: val, isSet: true}
}

func (v NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumAuthorizeEditorDataAttributeResolversSystemResolverDTOValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

