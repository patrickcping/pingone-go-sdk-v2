/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// EnumAuthorizeEditorDataValueTypeDTO the model 'EnumAuthorizeEditorDataValueTypeDTO'
type EnumAuthorizeEditorDataValueTypeDTO string

// List of EnumAuthorizeEditorDataValueTypeDTO
const (
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_BOOLEAN EnumAuthorizeEditorDataValueTypeDTO = "BOOLEAN"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_STRING EnumAuthorizeEditorDataValueTypeDTO = "STRING"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_NUMBER EnumAuthorizeEditorDataValueTypeDTO = "NUMBER"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_XML EnumAuthorizeEditorDataValueTypeDTO = "XML"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_JSON EnumAuthorizeEditorDataValueTypeDTO = "JSON"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_COLLECTION EnumAuthorizeEditorDataValueTypeDTO = "COLLECTION"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_DATE_TIME EnumAuthorizeEditorDataValueTypeDTO = "DATE_TIME"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_LOCAL_TIME EnumAuthorizeEditorDataValueTypeDTO = "LOCAL_TIME"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_LOCAL_DATE EnumAuthorizeEditorDataValueTypeDTO = "LOCAL_DATE"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_LOCAL_DATE_TIME EnumAuthorizeEditorDataValueTypeDTO = "LOCAL_DATE_TIME"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_ZONED_DATE_TIME EnumAuthorizeEditorDataValueTypeDTO = "ZONED_DATE_TIME"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_TIME_PERIOD EnumAuthorizeEditorDataValueTypeDTO = "TIME_PERIOD"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_PERIOD EnumAuthorizeEditorDataValueTypeDTO = "PERIOD"
	ENUMAUTHORIZEEDITORDATAVALUETYPEDTO_DURATION EnumAuthorizeEditorDataValueTypeDTO = "DURATION"
)

// All allowed values of EnumAuthorizeEditorDataValueTypeDTO enum
var AllowedEnumAuthorizeEditorDataValueTypeDTOEnumValues = []EnumAuthorizeEditorDataValueTypeDTO{
	"BOOLEAN",
	"STRING",
	"NUMBER",
	"XML",
	"JSON",
	"COLLECTION",
	"DATE_TIME",
	"LOCAL_TIME",
	"LOCAL_DATE",
	"LOCAL_DATE_TIME",
	"ZONED_DATE_TIME",
	"TIME_PERIOD",
	"PERIOD",
	"DURATION",
}

func (v *EnumAuthorizeEditorDataValueTypeDTO) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumAuthorizeEditorDataValueTypeDTO(value)
	for _, existing := range AllowedEnumAuthorizeEditorDataValueTypeDTOEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumAuthorizeEditorDataValueTypeDTO(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumAuthorizeEditorDataValueTypeDTOFromValue returns a pointer to a valid EnumAuthorizeEditorDataValueTypeDTO
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumAuthorizeEditorDataValueTypeDTOFromValue(v string) (*EnumAuthorizeEditorDataValueTypeDTO, error) {
	ev := EnumAuthorizeEditorDataValueTypeDTO(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumAuthorizeEditorDataValueTypeDTO: valid values are %v", v, AllowedEnumAuthorizeEditorDataValueTypeDTOEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumAuthorizeEditorDataValueTypeDTO) IsValid() bool {
	for _, existing := range AllowedEnumAuthorizeEditorDataValueTypeDTOEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumAuthorizeEditorDataValueTypeDTO value
func (v EnumAuthorizeEditorDataValueTypeDTO) Ptr() *EnumAuthorizeEditorDataValueTypeDTO {
	return &v
}

type NullableEnumAuthorizeEditorDataValueTypeDTO struct {
	value *EnumAuthorizeEditorDataValueTypeDTO
	isSet bool
}

func (v NullableEnumAuthorizeEditorDataValueTypeDTO) Get() *EnumAuthorizeEditorDataValueTypeDTO {
	return v.value
}

func (v *NullableEnumAuthorizeEditorDataValueTypeDTO) Set(val *EnumAuthorizeEditorDataValueTypeDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumAuthorizeEditorDataValueTypeDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumAuthorizeEditorDataValueTypeDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumAuthorizeEditorDataValueTypeDTO(val *EnumAuthorizeEditorDataValueTypeDTO) *NullableEnumAuthorizeEditorDataValueTypeDTO {
	return &NullableEnumAuthorizeEditorDataValueTypeDTO{value: val, isSet: true}
}

func (v NullableEnumAuthorizeEditorDataValueTypeDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumAuthorizeEditorDataValueTypeDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

