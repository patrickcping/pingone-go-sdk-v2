/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType the model 'EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType'
type EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType string

// List of EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType
const (
	ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_NONE EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType = "NONE"
	ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_HTTP EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType = "HTTP"
	ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_CONNECTOR EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType = "CONNECTOR"
)

// All allowed values of EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType enum
var AllowedEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeEnumValues = []EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType{
	"NONE",
	"HTTP",
	"CONNECTOR",
}

func (v *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType(value)
	for _, existing := range AllowedEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeFromValue returns a pointer to a valid EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeFromValue(v string) (*EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType, error) {
	ev := EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType: valid values are %v", v, AllowedEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) IsValid() bool {
	for _, existing := range AllowedEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType value
func (v EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) Ptr() *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType {
	return &v
}

type NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType struct {
	value *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType
	isSet bool
}

func (v NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) Get() *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType {
	return v.value
}

func (v *NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) Set(val *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType(val *EnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) *NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType {
	return &NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType{value: val, isSet: true}
}

func (v NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumAuthorizeEditorDataDefinitionsServiceDefinitionDTOServiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

