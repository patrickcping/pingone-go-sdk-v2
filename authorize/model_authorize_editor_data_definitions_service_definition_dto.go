/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// AuthorizeEditorDataDefinitionsServiceDefinitionDTO - struct for AuthorizeEditorDataDefinitionsServiceDefinitionDTO
type AuthorizeEditorDataDefinitionsServiceDefinitionDTO struct {
	AuthorizeEditorDataServicesConnectorServiceDefinitionDTO *AuthorizeEditorDataServicesConnectorServiceDefinitionDTO
	AuthorizeEditorDataServicesHttpServiceDefinitionDTO *AuthorizeEditorDataServicesHttpServiceDefinitionDTO
	AuthorizeEditorDataServicesNoneServiceDefinitionDTO *AuthorizeEditorDataServicesNoneServiceDefinitionDTO
}

// AuthorizeEditorDataServicesConnectorServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO is a convenience function that returns AuthorizeEditorDataServicesConnectorServiceDefinitionDTO wrapped in AuthorizeEditorDataDefinitionsServiceDefinitionDTO
func AuthorizeEditorDataServicesConnectorServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO(v *AuthorizeEditorDataServicesConnectorServiceDefinitionDTO) AuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	return AuthorizeEditorDataDefinitionsServiceDefinitionDTO{
		AuthorizeEditorDataServicesConnectorServiceDefinitionDTO: v,
	}
}

// AuthorizeEditorDataServicesHttpServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO is a convenience function that returns AuthorizeEditorDataServicesHttpServiceDefinitionDTO wrapped in AuthorizeEditorDataDefinitionsServiceDefinitionDTO
func AuthorizeEditorDataServicesHttpServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO(v *AuthorizeEditorDataServicesHttpServiceDefinitionDTO) AuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	return AuthorizeEditorDataDefinitionsServiceDefinitionDTO{
		AuthorizeEditorDataServicesHttpServiceDefinitionDTO: v,
	}
}

// AuthorizeEditorDataServicesNoneServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO is a convenience function that returns AuthorizeEditorDataServicesNoneServiceDefinitionDTO wrapped in AuthorizeEditorDataDefinitionsServiceDefinitionDTO
func AuthorizeEditorDataServicesNoneServiceDefinitionDTOAsAuthorizeEditorDataDefinitionsServiceDefinitionDTO(v *AuthorizeEditorDataServicesNoneServiceDefinitionDTO) AuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	return AuthorizeEditorDataDefinitionsServiceDefinitionDTO{
		AuthorizeEditorDataServicesNoneServiceDefinitionDTO: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AuthorizeEditorDataDefinitionsServiceDefinitionDTO) UnmarshalJSON(data []byte) error {

	var common AuthorizeEditorDataDefinitionsServiceDefinitionDTOCommon

	if err := json.Unmarshal(data, &common); err != nil { // simple model
		return err
	}

	dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO = nil
	dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO = nil
	dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO = nil

	switch common.GetServiceType() {
	case ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_CONNECTOR:
		if err := json.Unmarshal(data, &dst.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO); err != nil { // simple model
			return err
		}
	case ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_HTTP:
		if err := json.Unmarshal(data, &dst.AuthorizeEditorDataServicesHttpServiceDefinitionDTO); err != nil { // simple model
			return err
		}
	case ENUMAUTHORIZEEDITORDATADEFINITIONSSERVICEDEFINITIONDTOSERVICETYPE_NONE:
		if err := json.Unmarshal(data, &dst.AuthorizeEditorDataServicesNoneServiceDefinitionDTO); err != nil { // simple model
			return err
		}
	default:
		return fmt.Errorf("Data failed to match schemas in oneOf(AuthorizeEditorDataDefinitionsServiceDefinitionDTO)")
	}
	return nil
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AuthorizeEditorDataDefinitionsServiceDefinitionDTO) MarshalJSON() ([]byte, error) {
	if src.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO)
	}

	if src.AuthorizeEditorDataServicesHttpServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesHttpServiceDefinitionDTO)
	}

	if src.AuthorizeEditorDataServicesNoneServiceDefinitionDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataServicesNoneServiceDefinitionDTO)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AuthorizeEditorDataDefinitionsServiceDefinitionDTO) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesConnectorServiceDefinitionDTO
	}

	if obj.AuthorizeEditorDataServicesHttpServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesHttpServiceDefinitionDTO
	}

	if obj.AuthorizeEditorDataServicesNoneServiceDefinitionDTO != nil {
		return obj.AuthorizeEditorDataServicesNoneServiceDefinitionDTO
	}

	// all schemas are nil
	return nil
}

type NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO struct {
	value *AuthorizeEditorDataDefinitionsServiceDefinitionDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) Get() *AuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) Set(val *AuthorizeEditorDataDefinitionsServiceDefinitionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO(val *AuthorizeEditorDataDefinitionsServiceDefinitionDTO) *NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO {
	return &NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataDefinitionsServiceDefinitionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


