/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
	"fmt"
)

// AuthorizeEditorDataInputMappingDTO - struct for AuthorizeEditorDataInputMappingDTO
type AuthorizeEditorDataInputMappingDTO struct {
	AuthorizeEditorDataInputMappingsAttributeInputMappingDTO *AuthorizeEditorDataInputMappingsAttributeInputMappingDTO
	AuthorizeEditorDataInputMappingsInputInputMappingDTO *AuthorizeEditorDataInputMappingsInputInputMappingDTO
}

// AuthorizeEditorDataInputMappingsAttributeInputMappingDTOAsAuthorizeEditorDataInputMappingDTO is a convenience function that returns AuthorizeEditorDataInputMappingsAttributeInputMappingDTO wrapped in AuthorizeEditorDataInputMappingDTO
func AuthorizeEditorDataInputMappingsAttributeInputMappingDTOAsAuthorizeEditorDataInputMappingDTO(v *AuthorizeEditorDataInputMappingsAttributeInputMappingDTO) AuthorizeEditorDataInputMappingDTO {
	return AuthorizeEditorDataInputMappingDTO{
		AuthorizeEditorDataInputMappingsAttributeInputMappingDTO: v,
	}
}

// AuthorizeEditorDataInputMappingsInputInputMappingDTOAsAuthorizeEditorDataInputMappingDTO is a convenience function that returns AuthorizeEditorDataInputMappingsInputInputMappingDTO wrapped in AuthorizeEditorDataInputMappingDTO
func AuthorizeEditorDataInputMappingsInputInputMappingDTOAsAuthorizeEditorDataInputMappingDTO(v *AuthorizeEditorDataInputMappingsInputInputMappingDTO) AuthorizeEditorDataInputMappingDTO {
	return AuthorizeEditorDataInputMappingDTO{
		AuthorizeEditorDataInputMappingsInputInputMappingDTO: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AuthorizeEditorDataInputMappingDTO) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthorizeEditorDataInputMappingsAttributeInputMappingDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO)
	if err == nil {
		jsonAuthorizeEditorDataInputMappingsAttributeInputMappingDTO, _ := json.Marshal(dst.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO)
		if string(jsonAuthorizeEditorDataInputMappingsAttributeInputMappingDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO = nil
	}

	// try to unmarshal data into AuthorizeEditorDataInputMappingsInputInputMappingDTO
	err = newStrictDecoder(data).Decode(&dst.AuthorizeEditorDataInputMappingsInputInputMappingDTO)
	if err == nil {
		jsonAuthorizeEditorDataInputMappingsInputInputMappingDTO, _ := json.Marshal(dst.AuthorizeEditorDataInputMappingsInputInputMappingDTO)
		if string(jsonAuthorizeEditorDataInputMappingsInputInputMappingDTO) == "{}" { // empty struct
			dst.AuthorizeEditorDataInputMappingsInputInputMappingDTO = nil
		} else {
			match++
		}
	} else {
		dst.AuthorizeEditorDataInputMappingsInputInputMappingDTO = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO = nil
		dst.AuthorizeEditorDataInputMappingsInputInputMappingDTO = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AuthorizeEditorDataInputMappingDTO)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AuthorizeEditorDataInputMappingDTO)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AuthorizeEditorDataInputMappingDTO) MarshalJSON() ([]byte, error) {
	if src.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO)
	}

	if src.AuthorizeEditorDataInputMappingsInputInputMappingDTO != nil {
		return json.Marshal(&src.AuthorizeEditorDataInputMappingsInputInputMappingDTO)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AuthorizeEditorDataInputMappingDTO) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO != nil {
		return obj.AuthorizeEditorDataInputMappingsAttributeInputMappingDTO
	}

	if obj.AuthorizeEditorDataInputMappingsInputInputMappingDTO != nil {
		return obj.AuthorizeEditorDataInputMappingsInputInputMappingDTO
	}

	// all schemas are nil
	return nil
}

type NullableAuthorizeEditorDataInputMappingDTO struct {
	value *AuthorizeEditorDataInputMappingDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataInputMappingDTO) Get() *AuthorizeEditorDataInputMappingDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataInputMappingDTO) Set(val *AuthorizeEditorDataInputMappingDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataInputMappingDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataInputMappingDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataInputMappingDTO(val *AuthorizeEditorDataInputMappingDTO) *NullableAuthorizeEditorDataInputMappingDTO {
	return &NullableAuthorizeEditorDataInputMappingDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataInputMappingDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataInputMappingDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


