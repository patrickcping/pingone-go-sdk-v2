/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// checks if the AuthorizeEditorDataEntityTestResponseDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEditorDataEntityTestResponseDTO{}

// AuthorizeEditorDataEntityTestResponseDTO struct for AuthorizeEditorDataEntityTestResponseDTO
type AuthorizeEditorDataEntityTestResponseDTO struct {
	ElapsedMicroseconds *int32 `json:"elapsedMicroseconds,omitempty"`
	Request AuthorizeEditorDataEntityTestRequestDTO `json:"request"`
	Authorized *bool `json:"authorized,omitempty"`
	Status AuthorizeEditorDataEntityTestingDecisionStatusDTO `json:"status"`
	Result *AuthorizeEditorDataEntityTestingDecisionResultDTO `json:"result,omitempty"`
}

// NewAuthorizeEditorDataEntityTestResponseDTO instantiates a new AuthorizeEditorDataEntityTestResponseDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEditorDataEntityTestResponseDTO(request AuthorizeEditorDataEntityTestRequestDTO, status AuthorizeEditorDataEntityTestingDecisionStatusDTO) *AuthorizeEditorDataEntityTestResponseDTO {
	this := AuthorizeEditorDataEntityTestResponseDTO{}
	this.Request = request
	this.Status = status
	return &this
}

// NewAuthorizeEditorDataEntityTestResponseDTOWithDefaults instantiates a new AuthorizeEditorDataEntityTestResponseDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEditorDataEntityTestResponseDTOWithDefaults() *AuthorizeEditorDataEntityTestResponseDTO {
	this := AuthorizeEditorDataEntityTestResponseDTO{}
	return &this
}

// GetElapsedMicroseconds returns the ElapsedMicroseconds field value if set, zero value otherwise.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetElapsedMicroseconds() int32 {
	if o == nil || IsNil(o.ElapsedMicroseconds) {
		var ret int32
		return ret
	}
	return *o.ElapsedMicroseconds
}

// GetElapsedMicrosecondsOk returns a tuple with the ElapsedMicroseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetElapsedMicrosecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.ElapsedMicroseconds) {
		return nil, false
	}
	return o.ElapsedMicroseconds, true
}

// HasElapsedMicroseconds returns a boolean if a field has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) HasElapsedMicroseconds() bool {
	if o != nil && !IsNil(o.ElapsedMicroseconds) {
		return true
	}

	return false
}

// SetElapsedMicroseconds gets a reference to the given int32 and assigns it to the ElapsedMicroseconds field.
func (o *AuthorizeEditorDataEntityTestResponseDTO) SetElapsedMicroseconds(v int32) {
	o.ElapsedMicroseconds = &v
}

// GetRequest returns the Request field value
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetRequest() AuthorizeEditorDataEntityTestRequestDTO {
	if o == nil {
		var ret AuthorizeEditorDataEntityTestRequestDTO
		return ret
	}

	return o.Request
}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetRequestOk() (*AuthorizeEditorDataEntityTestRequestDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Request, true
}

// SetRequest sets field value
func (o *AuthorizeEditorDataEntityTestResponseDTO) SetRequest(v AuthorizeEditorDataEntityTestRequestDTO) {
	o.Request = v
}

// GetAuthorized returns the Authorized field value if set, zero value otherwise.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetAuthorized() bool {
	if o == nil || IsNil(o.Authorized) {
		var ret bool
		return ret
	}
	return *o.Authorized
}

// GetAuthorizedOk returns a tuple with the Authorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetAuthorizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authorized) {
		return nil, false
	}
	return o.Authorized, true
}

// HasAuthorized returns a boolean if a field has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) HasAuthorized() bool {
	if o != nil && !IsNil(o.Authorized) {
		return true
	}

	return false
}

// SetAuthorized gets a reference to the given bool and assigns it to the Authorized field.
func (o *AuthorizeEditorDataEntityTestResponseDTO) SetAuthorized(v bool) {
	o.Authorized = &v
}

// GetStatus returns the Status field value
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetStatus() AuthorizeEditorDataEntityTestingDecisionStatusDTO {
	if o == nil {
		var ret AuthorizeEditorDataEntityTestingDecisionStatusDTO
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetStatusOk() (*AuthorizeEditorDataEntityTestingDecisionStatusDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AuthorizeEditorDataEntityTestResponseDTO) SetStatus(v AuthorizeEditorDataEntityTestingDecisionStatusDTO) {
	o.Status = v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetResult() AuthorizeEditorDataEntityTestingDecisionResultDTO {
	if o == nil || IsNil(o.Result) {
		var ret AuthorizeEditorDataEntityTestingDecisionResultDTO
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) GetResultOk() (*AuthorizeEditorDataEntityTestingDecisionResultDTO, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *AuthorizeEditorDataEntityTestResponseDTO) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given AuthorizeEditorDataEntityTestingDecisionResultDTO and assigns it to the Result field.
func (o *AuthorizeEditorDataEntityTestResponseDTO) SetResult(v AuthorizeEditorDataEntityTestingDecisionResultDTO) {
	o.Result = &v
}

func (o AuthorizeEditorDataEntityTestResponseDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEditorDataEntityTestResponseDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ElapsedMicroseconds) {
		toSerialize["elapsedMicroseconds"] = o.ElapsedMicroseconds
	}
	toSerialize["request"] = o.Request
	if !IsNil(o.Authorized) {
		toSerialize["authorized"] = o.Authorized
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableAuthorizeEditorDataEntityTestResponseDTO struct {
	value *AuthorizeEditorDataEntityTestResponseDTO
	isSet bool
}

func (v NullableAuthorizeEditorDataEntityTestResponseDTO) Get() *AuthorizeEditorDataEntityTestResponseDTO {
	return v.value
}

func (v *NullableAuthorizeEditorDataEntityTestResponseDTO) Set(val *AuthorizeEditorDataEntityTestResponseDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEditorDataEntityTestResponseDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEditorDataEntityTestResponseDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEditorDataEntityTestResponseDTO(val *AuthorizeEditorDataEntityTestResponseDTO) *NullableAuthorizeEditorDataEntityTestResponseDTO {
	return &NullableAuthorizeEditorDataEntityTestResponseDTO{value: val, isSet: true}
}

func (v NullableAuthorizeEditorDataEntityTestResponseDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEditorDataEntityTestResponseDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


