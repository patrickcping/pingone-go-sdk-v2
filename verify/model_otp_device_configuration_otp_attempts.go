/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the OTPDeviceConfigurationOtpAttempts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OTPDeviceConfigurationOtpAttempts{}

// OTPDeviceConfigurationOtpAttempts OTP attempts configuration.
type OTPDeviceConfigurationOtpAttempts struct {
	// Count of OTP failures.
	Count int32 `json:"count"`
}

// NewOTPDeviceConfigurationOtpAttempts instantiates a new OTPDeviceConfigurationOtpAttempts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOTPDeviceConfigurationOtpAttempts(count int32) *OTPDeviceConfigurationOtpAttempts {
	this := OTPDeviceConfigurationOtpAttempts{}
	this.Count = count
	return &this
}

// NewOTPDeviceConfigurationOtpAttemptsWithDefaults instantiates a new OTPDeviceConfigurationOtpAttempts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOTPDeviceConfigurationOtpAttemptsWithDefaults() *OTPDeviceConfigurationOtpAttempts {
	this := OTPDeviceConfigurationOtpAttempts{}
	return &this
}

// GetCount returns the Count field value
func (o *OTPDeviceConfigurationOtpAttempts) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *OTPDeviceConfigurationOtpAttempts) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *OTPDeviceConfigurationOtpAttempts) SetCount(v int32) {
	o.Count = v
}

func (o OTPDeviceConfigurationOtpAttempts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OTPDeviceConfigurationOtpAttempts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	return toSerialize, nil
}

type NullableOTPDeviceConfigurationOtpAttempts struct {
	value *OTPDeviceConfigurationOtpAttempts
	isSet bool
}

func (v NullableOTPDeviceConfigurationOtpAttempts) Get() *OTPDeviceConfigurationOtpAttempts {
	return v.value
}

func (v *NullableOTPDeviceConfigurationOtpAttempts) Set(val *OTPDeviceConfigurationOtpAttempts) {
	v.value = val
	v.isSet = true
}

func (v NullableOTPDeviceConfigurationOtpAttempts) IsSet() bool {
	return v.isSet
}

func (v *NullableOTPDeviceConfigurationOtpAttempts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOTPDeviceConfigurationOtpAttempts(val *OTPDeviceConfigurationOtpAttempts) *NullableOTPDeviceConfigurationOtpAttempts {
	return &NullableOTPDeviceConfigurationOtpAttempts{value: val, isSet: true}
}

func (v NullableOTPDeviceConfigurationOtpAttempts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOTPDeviceConfigurationOtpAttempts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
