/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the IdentityRecordMatching type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityRecordMatching{}

// IdentityRecordMatching struct for IdentityRecordMatching
type IdentityRecordMatching struct {
	Address    *IdentityRecordMatchingAddress    `json:"address,omitempty"`
	BirthDate  *IdentityRecordMatchingBirthDate  `json:"birth_date,omitempty"`
	FamilyName *IdentityRecordMatchingFamilyName `json:"family_name,omitempty"`
	GivenName  *IdentityRecordMatchingGivenName  `json:"given_name,omitempty"`
	Name       *IdentityRecordMatchingName       `json:"name,omitempty"`
}

// NewIdentityRecordMatching instantiates a new IdentityRecordMatching object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityRecordMatching() *IdentityRecordMatching {
	this := IdentityRecordMatching{}
	return &this
}

// NewIdentityRecordMatchingWithDefaults instantiates a new IdentityRecordMatching object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityRecordMatchingWithDefaults() *IdentityRecordMatching {
	this := IdentityRecordMatching{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *IdentityRecordMatching) GetAddress() IdentityRecordMatchingAddress {
	if o == nil || IsNil(o.Address) {
		var ret IdentityRecordMatchingAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRecordMatching) GetAddressOk() (*IdentityRecordMatchingAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *IdentityRecordMatching) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given IdentityRecordMatchingAddress and assigns it to the Address field.
func (o *IdentityRecordMatching) SetAddress(v IdentityRecordMatchingAddress) {
	o.Address = &v
}

// GetBirthDate returns the BirthDate field value if set, zero value otherwise.
func (o *IdentityRecordMatching) GetBirthDate() IdentityRecordMatchingBirthDate {
	if o == nil || IsNil(o.BirthDate) {
		var ret IdentityRecordMatchingBirthDate
		return ret
	}
	return *o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRecordMatching) GetBirthDateOk() (*IdentityRecordMatchingBirthDate, bool) {
	if o == nil || IsNil(o.BirthDate) {
		return nil, false
	}
	return o.BirthDate, true
}

// HasBirthDate returns a boolean if a field has been set.
func (o *IdentityRecordMatching) HasBirthDate() bool {
	if o != nil && !IsNil(o.BirthDate) {
		return true
	}

	return false
}

// SetBirthDate gets a reference to the given IdentityRecordMatchingBirthDate and assigns it to the BirthDate field.
func (o *IdentityRecordMatching) SetBirthDate(v IdentityRecordMatchingBirthDate) {
	o.BirthDate = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *IdentityRecordMatching) GetFamilyName() IdentityRecordMatchingFamilyName {
	if o == nil || IsNil(o.FamilyName) {
		var ret IdentityRecordMatchingFamilyName
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRecordMatching) GetFamilyNameOk() (*IdentityRecordMatchingFamilyName, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *IdentityRecordMatching) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given IdentityRecordMatchingFamilyName and assigns it to the FamilyName field.
func (o *IdentityRecordMatching) SetFamilyName(v IdentityRecordMatchingFamilyName) {
	o.FamilyName = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *IdentityRecordMatching) GetGivenName() IdentityRecordMatchingGivenName {
	if o == nil || IsNil(o.GivenName) {
		var ret IdentityRecordMatchingGivenName
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRecordMatching) GetGivenNameOk() (*IdentityRecordMatchingGivenName, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *IdentityRecordMatching) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given IdentityRecordMatchingGivenName and assigns it to the GivenName field.
func (o *IdentityRecordMatching) SetGivenName(v IdentityRecordMatchingGivenName) {
	o.GivenName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityRecordMatching) GetName() IdentityRecordMatchingName {
	if o == nil || IsNil(o.Name) {
		var ret IdentityRecordMatchingName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRecordMatching) GetNameOk() (*IdentityRecordMatchingName, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityRecordMatching) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given IdentityRecordMatchingName and assigns it to the Name field.
func (o *IdentityRecordMatching) SetName(v IdentityRecordMatchingName) {
	o.Name = &v
}

func (o IdentityRecordMatching) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityRecordMatching) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.BirthDate) {
		toSerialize["birth_date"] = o.BirthDate
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableIdentityRecordMatching struct {
	value *IdentityRecordMatching
	isSet bool
}

func (v NullableIdentityRecordMatching) Get() *IdentityRecordMatching {
	return v.value
}

func (v *NullableIdentityRecordMatching) Set(val *IdentityRecordMatching) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityRecordMatching) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityRecordMatching) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityRecordMatching(val *IdentityRecordMatching) *NullableIdentityRecordMatching {
	return &NullableIdentityRecordMatching{value: val, isSet: true}
}

func (v NullableIdentityRecordMatching) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityRecordMatching) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
