/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the VoiceConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceConfiguration{}

// VoiceConfiguration struct for VoiceConfiguration
type VoiceConfiguration struct {
	Verify        EnumVerify                       `json:"verify"`
	Enrollment    bool                             `json:"enrollment"`
	TextDependent *VoiceConfigurationTextDependent `json:"textDependent,omitempty"`
	Comparison    VoiceConfigurationThreshold      `json:"comparison"`
	Liveness      VoiceConfigurationThreshold      `json:"liveness"`
	ReferenceData *VoiceConfigurationReferenceData `json:"referenceData,omitempty"`
}

// NewVoiceConfiguration instantiates a new VoiceConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceConfiguration(verify EnumVerify, enrollment bool, comparison VoiceConfigurationThreshold, liveness VoiceConfigurationThreshold) *VoiceConfiguration {
	this := VoiceConfiguration{}
	this.Verify = verify
	this.Enrollment = enrollment
	this.Comparison = comparison
	this.Liveness = liveness
	return &this
}

// NewVoiceConfigurationWithDefaults instantiates a new VoiceConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceConfigurationWithDefaults() *VoiceConfiguration {
	this := VoiceConfiguration{}
	return &this
}

// GetVerify returns the Verify field value
func (o *VoiceConfiguration) GetVerify() EnumVerify {
	if o == nil {
		var ret EnumVerify
		return ret
	}

	return o.Verify
}

// GetVerifyOk returns a tuple with the Verify field value
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetVerifyOk() (*EnumVerify, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verify, true
}

// SetVerify sets field value
func (o *VoiceConfiguration) SetVerify(v EnumVerify) {
	o.Verify = v
}

// GetEnrollment returns the Enrollment field value
func (o *VoiceConfiguration) GetEnrollment() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enrollment
}

// GetEnrollmentOk returns a tuple with the Enrollment field value
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetEnrollmentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enrollment, true
}

// SetEnrollment sets field value
func (o *VoiceConfiguration) SetEnrollment(v bool) {
	o.Enrollment = v
}

// GetTextDependent returns the TextDependent field value if set, zero value otherwise.
func (o *VoiceConfiguration) GetTextDependent() VoiceConfigurationTextDependent {
	if o == nil || IsNil(o.TextDependent) {
		var ret VoiceConfigurationTextDependent
		return ret
	}
	return *o.TextDependent
}

// GetTextDependentOk returns a tuple with the TextDependent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetTextDependentOk() (*VoiceConfigurationTextDependent, bool) {
	if o == nil || IsNil(o.TextDependent) {
		return nil, false
	}
	return o.TextDependent, true
}

// HasTextDependent returns a boolean if a field has been set.
func (o *VoiceConfiguration) HasTextDependent() bool {
	if o != nil && !IsNil(o.TextDependent) {
		return true
	}

	return false
}

// SetTextDependent gets a reference to the given VoiceConfigurationTextDependent and assigns it to the TextDependent field.
func (o *VoiceConfiguration) SetTextDependent(v VoiceConfigurationTextDependent) {
	o.TextDependent = &v
}

// GetComparison returns the Comparison field value
func (o *VoiceConfiguration) GetComparison() VoiceConfigurationThreshold {
	if o == nil {
		var ret VoiceConfigurationThreshold
		return ret
	}

	return o.Comparison
}

// GetComparisonOk returns a tuple with the Comparison field value
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetComparisonOk() (*VoiceConfigurationThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comparison, true
}

// SetComparison sets field value
func (o *VoiceConfiguration) SetComparison(v VoiceConfigurationThreshold) {
	o.Comparison = v
}

// GetLiveness returns the Liveness field value
func (o *VoiceConfiguration) GetLiveness() VoiceConfigurationThreshold {
	if o == nil {
		var ret VoiceConfigurationThreshold
		return ret
	}

	return o.Liveness
}

// GetLivenessOk returns a tuple with the Liveness field value
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetLivenessOk() (*VoiceConfigurationThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Liveness, true
}

// SetLiveness sets field value
func (o *VoiceConfiguration) SetLiveness(v VoiceConfigurationThreshold) {
	o.Liveness = v
}

// GetReferenceData returns the ReferenceData field value if set, zero value otherwise.
func (o *VoiceConfiguration) GetReferenceData() VoiceConfigurationReferenceData {
	if o == nil || IsNil(o.ReferenceData) {
		var ret VoiceConfigurationReferenceData
		return ret
	}
	return *o.ReferenceData
}

// GetReferenceDataOk returns a tuple with the ReferenceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConfiguration) GetReferenceDataOk() (*VoiceConfigurationReferenceData, bool) {
	if o == nil || IsNil(o.ReferenceData) {
		return nil, false
	}
	return o.ReferenceData, true
}

// HasReferenceData returns a boolean if a field has been set.
func (o *VoiceConfiguration) HasReferenceData() bool {
	if o != nil && !IsNil(o.ReferenceData) {
		return true
	}

	return false
}

// SetReferenceData gets a reference to the given VoiceConfigurationReferenceData and assigns it to the ReferenceData field.
func (o *VoiceConfiguration) SetReferenceData(v VoiceConfigurationReferenceData) {
	o.ReferenceData = &v
}

func (o VoiceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verify"] = o.Verify
	toSerialize["enrollment"] = o.Enrollment
	if !IsNil(o.TextDependent) {
		toSerialize["textDependent"] = o.TextDependent
	}
	toSerialize["comparison"] = o.Comparison
	toSerialize["liveness"] = o.Liveness
	if !IsNil(o.ReferenceData) {
		toSerialize["referenceData"] = o.ReferenceData
	}
	return toSerialize, nil
}

type NullableVoiceConfiguration struct {
	value *VoiceConfiguration
	isSet bool
}

func (v NullableVoiceConfiguration) Get() *VoiceConfiguration {
	return v.value
}

func (v *NullableVoiceConfiguration) Set(val *VoiceConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceConfiguration(val *VoiceConfiguration) *NullableVoiceConfiguration {
	return &NullableVoiceConfiguration{value: val, isSet: true}
}

func (v NullableVoiceConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
