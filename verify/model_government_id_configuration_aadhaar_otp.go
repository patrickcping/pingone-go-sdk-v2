/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the GovernmentIdConfigurationAadhaarOtp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GovernmentIdConfigurationAadhaarOtp{}

// GovernmentIdConfigurationAadhaarOtp Aadhaar one-time password (OTP) configuration
type GovernmentIdConfigurationAadhaarOtp struct {
	Deliveries *GovernmentIdConfigurationAadhaarOtpDeliveries `json:"deliveries,omitempty"`
}

// NewGovernmentIdConfigurationAadhaarOtp instantiates a new GovernmentIdConfigurationAadhaarOtp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGovernmentIdConfigurationAadhaarOtp() *GovernmentIdConfigurationAadhaarOtp {
	this := GovernmentIdConfigurationAadhaarOtp{}
	return &this
}

// NewGovernmentIdConfigurationAadhaarOtpWithDefaults instantiates a new GovernmentIdConfigurationAadhaarOtp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGovernmentIdConfigurationAadhaarOtpWithDefaults() *GovernmentIdConfigurationAadhaarOtp {
	this := GovernmentIdConfigurationAadhaarOtp{}
	return &this
}

// GetDeliveries returns the Deliveries field value if set, zero value otherwise.
func (o *GovernmentIdConfigurationAadhaarOtp) GetDeliveries() GovernmentIdConfigurationAadhaarOtpDeliveries {
	if o == nil || IsNil(o.Deliveries) {
		var ret GovernmentIdConfigurationAadhaarOtpDeliveries
		return ret
	}
	return *o.Deliveries
}

// GetDeliveriesOk returns a tuple with the Deliveries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernmentIdConfigurationAadhaarOtp) GetDeliveriesOk() (*GovernmentIdConfigurationAadhaarOtpDeliveries, bool) {
	if o == nil || IsNil(o.Deliveries) {
		return nil, false
	}
	return o.Deliveries, true
}

// HasDeliveries returns a boolean if a field has been set.
func (o *GovernmentIdConfigurationAadhaarOtp) HasDeliveries() bool {
	if o != nil && !IsNil(o.Deliveries) {
		return true
	}

	return false
}

// SetDeliveries gets a reference to the given GovernmentIdConfigurationAadhaarOtpDeliveries and assigns it to the Deliveries field.
func (o *GovernmentIdConfigurationAadhaarOtp) SetDeliveries(v GovernmentIdConfigurationAadhaarOtpDeliveries) {
	o.Deliveries = &v
}

func (o GovernmentIdConfigurationAadhaarOtp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GovernmentIdConfigurationAadhaarOtp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deliveries) {
		toSerialize["deliveries"] = o.Deliveries
	}
	return toSerialize, nil
}

type NullableGovernmentIdConfigurationAadhaarOtp struct {
	value *GovernmentIdConfigurationAadhaarOtp
	isSet bool
}

func (v NullableGovernmentIdConfigurationAadhaarOtp) Get() *GovernmentIdConfigurationAadhaarOtp {
	return v.value
}

func (v *NullableGovernmentIdConfigurationAadhaarOtp) Set(val *GovernmentIdConfigurationAadhaarOtp) {
	v.value = val
	v.isSet = true
}

func (v NullableGovernmentIdConfigurationAadhaarOtp) IsSet() bool {
	return v.isSet
}

func (v *NullableGovernmentIdConfigurationAadhaarOtp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGovernmentIdConfigurationAadhaarOtp(val *GovernmentIdConfigurationAadhaarOtp) *NullableGovernmentIdConfigurationAadhaarOtp {
	return &NullableGovernmentIdConfigurationAadhaarOtp{value: val, isSet: true}
}

func (v NullableGovernmentIdConfigurationAadhaarOtp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGovernmentIdConfigurationAadhaarOtp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
