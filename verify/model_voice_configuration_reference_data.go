/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-07-20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the VoiceConfigurationReferenceData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceConfigurationReferenceData{}

// VoiceConfigurationReferenceData struct for VoiceConfigurationReferenceData
type VoiceConfigurationReferenceData struct {
	RetainOriginalRecordings *bool `json:"retainOriginalRecordings,omitempty"`
	UpdateOnReenrollment     *bool `json:"updateOnReenrollment,omitempty"`
	UpdateOnVerification     *bool `json:"updateOnVerification,omitempty"`
}

// NewVoiceConfigurationReferenceData instantiates a new VoiceConfigurationReferenceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceConfigurationReferenceData() *VoiceConfigurationReferenceData {
	this := VoiceConfigurationReferenceData{}
	return &this
}

// NewVoiceConfigurationReferenceDataWithDefaults instantiates a new VoiceConfigurationReferenceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceConfigurationReferenceDataWithDefaults() *VoiceConfigurationReferenceData {
	this := VoiceConfigurationReferenceData{}
	return &this
}

// GetRetainOriginalRecordings returns the RetainOriginalRecordings field value if set, zero value otherwise.
func (o *VoiceConfigurationReferenceData) GetRetainOriginalRecordings() bool {
	if o == nil || IsNil(o.RetainOriginalRecordings) {
		var ret bool
		return ret
	}
	return *o.RetainOriginalRecordings
}

// GetRetainOriginalRecordingsOk returns a tuple with the RetainOriginalRecordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConfigurationReferenceData) GetRetainOriginalRecordingsOk() (*bool, bool) {
	if o == nil || IsNil(o.RetainOriginalRecordings) {
		return nil, false
	}
	return o.RetainOriginalRecordings, true
}

// HasRetainOriginalRecordings returns a boolean if a field has been set.
func (o *VoiceConfigurationReferenceData) HasRetainOriginalRecordings() bool {
	if o != nil && !IsNil(o.RetainOriginalRecordings) {
		return true
	}

	return false
}

// SetRetainOriginalRecordings gets a reference to the given bool and assigns it to the RetainOriginalRecordings field.
func (o *VoiceConfigurationReferenceData) SetRetainOriginalRecordings(v bool) {
	o.RetainOriginalRecordings = &v
}

// GetUpdateOnReenrollment returns the UpdateOnReenrollment field value if set, zero value otherwise.
func (o *VoiceConfigurationReferenceData) GetUpdateOnReenrollment() bool {
	if o == nil || IsNil(o.UpdateOnReenrollment) {
		var ret bool
		return ret
	}
	return *o.UpdateOnReenrollment
}

// GetUpdateOnReenrollmentOk returns a tuple with the UpdateOnReenrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConfigurationReferenceData) GetUpdateOnReenrollmentOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateOnReenrollment) {
		return nil, false
	}
	return o.UpdateOnReenrollment, true
}

// HasUpdateOnReenrollment returns a boolean if a field has been set.
func (o *VoiceConfigurationReferenceData) HasUpdateOnReenrollment() bool {
	if o != nil && !IsNil(o.UpdateOnReenrollment) {
		return true
	}

	return false
}

// SetUpdateOnReenrollment gets a reference to the given bool and assigns it to the UpdateOnReenrollment field.
func (o *VoiceConfigurationReferenceData) SetUpdateOnReenrollment(v bool) {
	o.UpdateOnReenrollment = &v
}

// GetUpdateOnVerification returns the UpdateOnVerification field value if set, zero value otherwise.
func (o *VoiceConfigurationReferenceData) GetUpdateOnVerification() bool {
	if o == nil || IsNil(o.UpdateOnVerification) {
		var ret bool
		return ret
	}
	return *o.UpdateOnVerification
}

// GetUpdateOnVerificationOk returns a tuple with the UpdateOnVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConfigurationReferenceData) GetUpdateOnVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateOnVerification) {
		return nil, false
	}
	return o.UpdateOnVerification, true
}

// HasUpdateOnVerification returns a boolean if a field has been set.
func (o *VoiceConfigurationReferenceData) HasUpdateOnVerification() bool {
	if o != nil && !IsNil(o.UpdateOnVerification) {
		return true
	}

	return false
}

// SetUpdateOnVerification gets a reference to the given bool and assigns it to the UpdateOnVerification field.
func (o *VoiceConfigurationReferenceData) SetUpdateOnVerification(v bool) {
	o.UpdateOnVerification = &v
}

func (o VoiceConfigurationReferenceData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceConfigurationReferenceData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RetainOriginalRecordings) {
		toSerialize["retainOriginalRecordings"] = o.RetainOriginalRecordings
	}
	if !IsNil(o.UpdateOnReenrollment) {
		toSerialize["updateOnReenrollment"] = o.UpdateOnReenrollment
	}
	if !IsNil(o.UpdateOnVerification) {
		toSerialize["updateOnVerification"] = o.UpdateOnVerification
	}
	return toSerialize, nil
}

type NullableVoiceConfigurationReferenceData struct {
	value *VoiceConfigurationReferenceData
	isSet bool
}

func (v NullableVoiceConfigurationReferenceData) Get() *VoiceConfigurationReferenceData {
	return v.value
}

func (v *NullableVoiceConfigurationReferenceData) Set(val *VoiceConfigurationReferenceData) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceConfigurationReferenceData) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceConfigurationReferenceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceConfigurationReferenceData(val *VoiceConfigurationReferenceData) *NullableVoiceConfigurationReferenceData {
	return &NullableVoiceConfigurationReferenceData{value: val, isSet: true}
}

func (v NullableVoiceConfigurationReferenceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceConfigurationReferenceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
