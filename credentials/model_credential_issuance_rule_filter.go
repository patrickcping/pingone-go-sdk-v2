/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the CredentialIssuanceRuleFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialIssuanceRuleFilter{}

// CredentialIssuanceRuleFilter struct for CredentialIssuanceRuleFilter
type CredentialIssuanceRuleFilter struct {
	GroupIds      []string `json:"groupIds,omitempty"`
	PopulationIds []string `json:"populationIds,omitempty"`
	Scim          *string  `json:"scim,omitempty"`
}

// NewCredentialIssuanceRuleFilter instantiates a new CredentialIssuanceRuleFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialIssuanceRuleFilter() *CredentialIssuanceRuleFilter {
	this := CredentialIssuanceRuleFilter{}
	return &this
}

// NewCredentialIssuanceRuleFilterWithDefaults instantiates a new CredentialIssuanceRuleFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialIssuanceRuleFilterWithDefaults() *CredentialIssuanceRuleFilter {
	this := CredentialIssuanceRuleFilter{}
	return &this
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleFilter) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleFilter) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleFilter) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *CredentialIssuanceRuleFilter) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetPopulationIds returns the PopulationIds field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleFilter) GetPopulationIds() []string {
	if o == nil || IsNil(o.PopulationIds) {
		var ret []string
		return ret
	}
	return o.PopulationIds
}

// GetPopulationIdsOk returns a tuple with the PopulationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleFilter) GetPopulationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PopulationIds) {
		return nil, false
	}
	return o.PopulationIds, true
}

// HasPopulationIds returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleFilter) HasPopulationIds() bool {
	if o != nil && !IsNil(o.PopulationIds) {
		return true
	}

	return false
}

// SetPopulationIds gets a reference to the given []string and assigns it to the PopulationIds field.
func (o *CredentialIssuanceRuleFilter) SetPopulationIds(v []string) {
	o.PopulationIds = v
}

// GetScim returns the Scim field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleFilter) GetScim() string {
	if o == nil || IsNil(o.Scim) {
		var ret string
		return ret
	}
	return *o.Scim
}

// GetScimOk returns a tuple with the Scim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleFilter) GetScimOk() (*string, bool) {
	if o == nil || IsNil(o.Scim) {
		return nil, false
	}
	return o.Scim, true
}

// HasScim returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleFilter) HasScim() bool {
	if o != nil && !IsNil(o.Scim) {
		return true
	}

	return false
}

// SetScim gets a reference to the given string and assigns it to the Scim field.
func (o *CredentialIssuanceRuleFilter) SetScim(v string) {
	o.Scim = &v
}

func (o CredentialIssuanceRuleFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialIssuanceRuleFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupIds) {
		toSerialize["groupIds"] = o.GroupIds
	}
	if !IsNil(o.PopulationIds) {
		toSerialize["populationIds"] = o.PopulationIds
	}
	if !IsNil(o.Scim) {
		toSerialize["scim"] = o.Scim
	}
	return toSerialize, nil
}

type NullableCredentialIssuanceRuleFilter struct {
	value *CredentialIssuanceRuleFilter
	isSet bool
}

func (v NullableCredentialIssuanceRuleFilter) Get() *CredentialIssuanceRuleFilter {
	return v.value
}

func (v *NullableCredentialIssuanceRuleFilter) Set(val *CredentialIssuanceRuleFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialIssuanceRuleFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialIssuanceRuleFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialIssuanceRuleFilter(val *CredentialIssuanceRuleFilter) *NullableCredentialIssuanceRuleFilter {
	return &NullableCredentialIssuanceRuleFilter{value: val, isSet: true}
}

func (v NullableCredentialIssuanceRuleFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialIssuanceRuleFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
