/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the CredentialTypeExpirationAfter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialTypeExpirationAfter{}

// CredentialTypeExpirationAfter Contains the numeric duration and its time unit for calculating an expiration date.
type CredentialTypeExpirationAfter struct {
	// Length of time before transaction timeout expires; range is from a 1 hour minimum (or equivalent) to an (effectively) unbounded maximum.
	Duration int32        `json:"duration"`
	TimeUnit EnumTimeUnit `json:"timeUnit"`
}

// NewCredentialTypeExpirationAfter instantiates a new CredentialTypeExpirationAfter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialTypeExpirationAfter(duration int32, timeUnit EnumTimeUnit) *CredentialTypeExpirationAfter {
	this := CredentialTypeExpirationAfter{}
	this.Duration = duration
	this.TimeUnit = timeUnit
	return &this
}

// NewCredentialTypeExpirationAfterWithDefaults instantiates a new CredentialTypeExpirationAfter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialTypeExpirationAfterWithDefaults() *CredentialTypeExpirationAfter {
	this := CredentialTypeExpirationAfter{}
	return &this
}

// GetDuration returns the Duration field value
func (o *CredentialTypeExpirationAfter) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CredentialTypeExpirationAfter) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CredentialTypeExpirationAfter) SetDuration(v int32) {
	o.Duration = v
}

// GetTimeUnit returns the TimeUnit field value
func (o *CredentialTypeExpirationAfter) GetTimeUnit() EnumTimeUnit {
	if o == nil {
		var ret EnumTimeUnit
		return ret
	}

	return o.TimeUnit
}

// GetTimeUnitOk returns a tuple with the TimeUnit field value
// and a boolean to check if the value has been set.
func (o *CredentialTypeExpirationAfter) GetTimeUnitOk() (*EnumTimeUnit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeUnit, true
}

// SetTimeUnit sets field value
func (o *CredentialTypeExpirationAfter) SetTimeUnit(v EnumTimeUnit) {
	o.TimeUnit = v
}

func (o CredentialTypeExpirationAfter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialTypeExpirationAfter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["timeUnit"] = o.TimeUnit
	return toSerialize, nil
}

type NullableCredentialTypeExpirationAfter struct {
	value *CredentialTypeExpirationAfter
	isSet bool
}

func (v NullableCredentialTypeExpirationAfter) Get() *CredentialTypeExpirationAfter {
	return v.value
}

func (v *NullableCredentialTypeExpirationAfter) Set(val *CredentialTypeExpirationAfter) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialTypeExpirationAfter) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialTypeExpirationAfter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialTypeExpirationAfter(val *CredentialTypeExpirationAfter) *NullableCredentialTypeExpirationAfter {
	return &NullableCredentialTypeExpirationAfter{value: val, isSet: true}
}

func (v NullableCredentialTypeExpirationAfter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialTypeExpirationAfter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
