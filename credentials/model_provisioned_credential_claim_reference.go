/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
	"time"
)

// checks if the ProvisionedCredentialClaimReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisionedCredentialClaimReference{}

// ProvisionedCredentialClaimReference struct for ProvisionedCredentialClaimReference
type ProvisionedCredentialClaimReference struct {
	Id            *string    `json:"id,omitempty"`
	Version       *int32     `json:"version,omitempty"`
	Issuer        *string    `json:"issuer,omitempty"`
	Subject       *string    `json:"subject,omitempty"`
	Holder        *string    `json:"holder,omitempty"`
	CreateDate    *time.Time `json:"createDate,omitempty"`
	DataJson      *string    `json:"dataJson,omitempty"`
	DataSignature *string    `json:"dataSignature,omitempty"`
	DataHash      *string    `json:"dataHash,omitempty"`
	PartitionId   *string    `json:"partitionId,omitempty"`
}

// NewProvisionedCredentialClaimReference instantiates a new ProvisionedCredentialClaimReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionedCredentialClaimReference() *ProvisionedCredentialClaimReference {
	this := ProvisionedCredentialClaimReference{}
	return &this
}

// NewProvisionedCredentialClaimReferenceWithDefaults instantiates a new ProvisionedCredentialClaimReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionedCredentialClaimReferenceWithDefaults() *ProvisionedCredentialClaimReference {
	this := ProvisionedCredentialClaimReference{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProvisionedCredentialClaimReference) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ProvisionedCredentialClaimReference) SetVersion(v int32) {
	o.Version = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *ProvisionedCredentialClaimReference) SetIssuer(v string) {
	o.Issuer = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ProvisionedCredentialClaimReference) SetSubject(v string) {
	o.Subject = &v
}

// GetHolder returns the Holder field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetHolder() string {
	if o == nil || IsNil(o.Holder) {
		var ret string
		return ret
	}
	return *o.Holder
}

// GetHolderOk returns a tuple with the Holder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetHolderOk() (*string, bool) {
	if o == nil || IsNil(o.Holder) {
		return nil, false
	}
	return o.Holder, true
}

// HasHolder returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasHolder() bool {
	if o != nil && !IsNil(o.Holder) {
		return true
	}

	return false
}

// SetHolder gets a reference to the given string and assigns it to the Holder field.
func (o *ProvisionedCredentialClaimReference) SetHolder(v string) {
	o.Holder = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *ProvisionedCredentialClaimReference) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetDataJson returns the DataJson field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetDataJson() string {
	if o == nil || IsNil(o.DataJson) {
		var ret string
		return ret
	}
	return *o.DataJson
}

// GetDataJsonOk returns a tuple with the DataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.DataJson) {
		return nil, false
	}
	return o.DataJson, true
}

// HasDataJson returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasDataJson() bool {
	if o != nil && !IsNil(o.DataJson) {
		return true
	}

	return false
}

// SetDataJson gets a reference to the given string and assigns it to the DataJson field.
func (o *ProvisionedCredentialClaimReference) SetDataJson(v string) {
	o.DataJson = &v
}

// GetDataSignature returns the DataSignature field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetDataSignature() string {
	if o == nil || IsNil(o.DataSignature) {
		var ret string
		return ret
	}
	return *o.DataSignature
}

// GetDataSignatureOk returns a tuple with the DataSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetDataSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.DataSignature) {
		return nil, false
	}
	return o.DataSignature, true
}

// HasDataSignature returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasDataSignature() bool {
	if o != nil && !IsNil(o.DataSignature) {
		return true
	}

	return false
}

// SetDataSignature gets a reference to the given string and assigns it to the DataSignature field.
func (o *ProvisionedCredentialClaimReference) SetDataSignature(v string) {
	o.DataSignature = &v
}

// GetDataHash returns the DataHash field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetDataHash() string {
	if o == nil || IsNil(o.DataHash) {
		var ret string
		return ret
	}
	return *o.DataHash
}

// GetDataHashOk returns a tuple with the DataHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetDataHashOk() (*string, bool) {
	if o == nil || IsNil(o.DataHash) {
		return nil, false
	}
	return o.DataHash, true
}

// HasDataHash returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasDataHash() bool {
	if o != nil && !IsNil(o.DataHash) {
		return true
	}

	return false
}

// SetDataHash gets a reference to the given string and assigns it to the DataHash field.
func (o *ProvisionedCredentialClaimReference) SetDataHash(v string) {
	o.DataHash = &v
}

// GetPartitionId returns the PartitionId field value if set, zero value otherwise.
func (o *ProvisionedCredentialClaimReference) GetPartitionId() string {
	if o == nil || IsNil(o.PartitionId) {
		var ret string
		return ret
	}
	return *o.PartitionId
}

// GetPartitionIdOk returns a tuple with the PartitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionedCredentialClaimReference) GetPartitionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartitionId) {
		return nil, false
	}
	return o.PartitionId, true
}

// HasPartitionId returns a boolean if a field has been set.
func (o *ProvisionedCredentialClaimReference) HasPartitionId() bool {
	if o != nil && !IsNil(o.PartitionId) {
		return true
	}

	return false
}

// SetPartitionId gets a reference to the given string and assigns it to the PartitionId field.
func (o *ProvisionedCredentialClaimReference) SetPartitionId(v string) {
	o.PartitionId = &v
}

func (o ProvisionedCredentialClaimReference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisionedCredentialClaimReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Holder) {
		toSerialize["holder"] = o.Holder
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.DataJson) {
		toSerialize["dataJson"] = o.DataJson
	}
	if !IsNil(o.DataSignature) {
		toSerialize["dataSignature"] = o.DataSignature
	}
	if !IsNil(o.DataHash) {
		toSerialize["dataHash"] = o.DataHash
	}
	if !IsNil(o.PartitionId) {
		toSerialize["partitionId"] = o.PartitionId
	}
	return toSerialize, nil
}

type NullableProvisionedCredentialClaimReference struct {
	value *ProvisionedCredentialClaimReference
	isSet bool
}

func (v NullableProvisionedCredentialClaimReference) Get() *ProvisionedCredentialClaimReference {
	return v.value
}

func (v *NullableProvisionedCredentialClaimReference) Set(val *ProvisionedCredentialClaimReference) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionedCredentialClaimReference) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionedCredentialClaimReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionedCredentialClaimReference(val *ProvisionedCredentialClaimReference) *NullableProvisionedCredentialClaimReference {
	return &NullableProvisionedCredentialClaimReference{value: val, isSet: true}
}

func (v NullableProvisionedCredentialClaimReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionedCredentialClaimReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
