/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the CredentialDigitalWalletNotificationTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialDigitalWalletNotificationTemplate{}

// CredentialDigitalWalletNotificationTemplate struct for CredentialDigitalWalletNotificationTemplate
type CredentialDigitalWalletNotificationTemplate struct {
	Locale  *string `json:"locale,omitempty"`
	Variant *string `json:"variant,omitempty"`
}

// NewCredentialDigitalWalletNotificationTemplate instantiates a new CredentialDigitalWalletNotificationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialDigitalWalletNotificationTemplate() *CredentialDigitalWalletNotificationTemplate {
	this := CredentialDigitalWalletNotificationTemplate{}
	return &this
}

// NewCredentialDigitalWalletNotificationTemplateWithDefaults instantiates a new CredentialDigitalWalletNotificationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialDigitalWalletNotificationTemplateWithDefaults() *CredentialDigitalWalletNotificationTemplate {
	this := CredentialDigitalWalletNotificationTemplate{}
	return &this
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *CredentialDigitalWalletNotificationTemplate) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialDigitalWalletNotificationTemplate) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *CredentialDigitalWalletNotificationTemplate) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *CredentialDigitalWalletNotificationTemplate) SetLocale(v string) {
	o.Locale = &v
}

// GetVariant returns the Variant field value if set, zero value otherwise.
func (o *CredentialDigitalWalletNotificationTemplate) GetVariant() string {
	if o == nil || IsNil(o.Variant) {
		var ret string
		return ret
	}
	return *o.Variant
}

// GetVariantOk returns a tuple with the Variant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialDigitalWalletNotificationTemplate) GetVariantOk() (*string, bool) {
	if o == nil || IsNil(o.Variant) {
		return nil, false
	}
	return o.Variant, true
}

// HasVariant returns a boolean if a field has been set.
func (o *CredentialDigitalWalletNotificationTemplate) HasVariant() bool {
	if o != nil && !IsNil(o.Variant) {
		return true
	}

	return false
}

// SetVariant gets a reference to the given string and assigns it to the Variant field.
func (o *CredentialDigitalWalletNotificationTemplate) SetVariant(v string) {
	o.Variant = &v
}

func (o CredentialDigitalWalletNotificationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialDigitalWalletNotificationTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Variant) {
		toSerialize["variant"] = o.Variant
	}
	return toSerialize, nil
}

type NullableCredentialDigitalWalletNotificationTemplate struct {
	value *CredentialDigitalWalletNotificationTemplate
	isSet bool
}

func (v NullableCredentialDigitalWalletNotificationTemplate) Get() *CredentialDigitalWalletNotificationTemplate {
	return v.value
}

func (v *NullableCredentialDigitalWalletNotificationTemplate) Set(val *CredentialDigitalWalletNotificationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialDigitalWalletNotificationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialDigitalWalletNotificationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialDigitalWalletNotificationTemplate(val *CredentialDigitalWalletNotificationTemplate) *NullableCredentialDigitalWalletNotificationTemplate {
	return &NullableCredentialDigitalWalletNotificationTemplate{value: val, isSet: true}
}

func (v NullableCredentialDigitalWalletNotificationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialDigitalWalletNotificationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
