/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
	"time"
)

// checks if the CredentialIssuanceRuleUsageInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialIssuanceRuleUsageInner{}

// CredentialIssuanceRuleUsageInner struct for CredentialIssuanceRuleUsageInner
type CredentialIssuanceRuleUsageInner struct {
	User       *CredentialIssuanceRuleUsageInnerUser       `json:"user,omitempty"`
	Credential *CredentialIssuanceRuleUsageInnerCredential `json:"credential,omitempty"`
	// A string representing the date and time the credential was issued by the service.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
}

// NewCredentialIssuanceRuleUsageInner instantiates a new CredentialIssuanceRuleUsageInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialIssuanceRuleUsageInner() *CredentialIssuanceRuleUsageInner {
	this := CredentialIssuanceRuleUsageInner{}
	return &this
}

// NewCredentialIssuanceRuleUsageInnerWithDefaults instantiates a new CredentialIssuanceRuleUsageInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialIssuanceRuleUsageInnerWithDefaults() *CredentialIssuanceRuleUsageInner {
	this := CredentialIssuanceRuleUsageInner{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageInner) GetUser() CredentialIssuanceRuleUsageInnerUser {
	if o == nil || IsNil(o.User) {
		var ret CredentialIssuanceRuleUsageInnerUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageInner) GetUserOk() (*CredentialIssuanceRuleUsageInnerUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given CredentialIssuanceRuleUsageInnerUser and assigns it to the User field.
func (o *CredentialIssuanceRuleUsageInner) SetUser(v CredentialIssuanceRuleUsageInnerUser) {
	o.User = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageInner) GetCredential() CredentialIssuanceRuleUsageInnerCredential {
	if o == nil || IsNil(o.Credential) {
		var ret CredentialIssuanceRuleUsageInnerCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageInner) GetCredentialOk() (*CredentialIssuanceRuleUsageInnerCredential, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageInner) HasCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given CredentialIssuanceRuleUsageInnerCredential and assigns it to the Credential field.
func (o *CredentialIssuanceRuleUsageInner) SetCredential(v CredentialIssuanceRuleUsageInnerCredential) {
	o.Credential = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CredentialIssuanceRuleUsageInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o CredentialIssuanceRuleUsageInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialIssuanceRuleUsageInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableCredentialIssuanceRuleUsageInner struct {
	value *CredentialIssuanceRuleUsageInner
	isSet bool
}

func (v NullableCredentialIssuanceRuleUsageInner) Get() *CredentialIssuanceRuleUsageInner {
	return v.value
}

func (v *NullableCredentialIssuanceRuleUsageInner) Set(val *CredentialIssuanceRuleUsageInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialIssuanceRuleUsageInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialIssuanceRuleUsageInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialIssuanceRuleUsageInner(val *CredentialIssuanceRuleUsageInner) *NullableCredentialIssuanceRuleUsageInner {
	return &NullableCredentialIssuanceRuleUsageInner{value: val, isSet: true}
}

func (v NullableCredentialIssuanceRuleUsageInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialIssuanceRuleUsageInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
