/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the CredentialIssuanceRuleUsageCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialIssuanceRuleUsageCounts{}

// CredentialIssuanceRuleUsageCounts struct for CredentialIssuanceRuleUsageCounts
type CredentialIssuanceRuleUsageCounts struct {
	Issued   *int32 `json:"issued,omitempty"`
	Accepted *int32 `json:"accepted,omitempty"`
	Updated  *int32 `json:"updated,omitempty"`
	Revoked  *int32 `json:"revoked,omitempty"`
}

// NewCredentialIssuanceRuleUsageCounts instantiates a new CredentialIssuanceRuleUsageCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialIssuanceRuleUsageCounts() *CredentialIssuanceRuleUsageCounts {
	this := CredentialIssuanceRuleUsageCounts{}
	return &this
}

// NewCredentialIssuanceRuleUsageCountsWithDefaults instantiates a new CredentialIssuanceRuleUsageCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialIssuanceRuleUsageCountsWithDefaults() *CredentialIssuanceRuleUsageCounts {
	this := CredentialIssuanceRuleUsageCounts{}
	return &this
}

// GetIssued returns the Issued field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageCounts) GetIssued() int32 {
	if o == nil || IsNil(o.Issued) {
		var ret int32
		return ret
	}
	return *o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageCounts) GetIssuedOk() (*int32, bool) {
	if o == nil || IsNil(o.Issued) {
		return nil, false
	}
	return o.Issued, true
}

// HasIssued returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageCounts) HasIssued() bool {
	if o != nil && !IsNil(o.Issued) {
		return true
	}

	return false
}

// SetIssued gets a reference to the given int32 and assigns it to the Issued field.
func (o *CredentialIssuanceRuleUsageCounts) SetIssued(v int32) {
	o.Issued = &v
}

// GetAccepted returns the Accepted field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageCounts) GetAccepted() int32 {
	if o == nil || IsNil(o.Accepted) {
		var ret int32
		return ret
	}
	return *o.Accepted
}

// GetAcceptedOk returns a tuple with the Accepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageCounts) GetAcceptedOk() (*int32, bool) {
	if o == nil || IsNil(o.Accepted) {
		return nil, false
	}
	return o.Accepted, true
}

// HasAccepted returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageCounts) HasAccepted() bool {
	if o != nil && !IsNil(o.Accepted) {
		return true
	}

	return false
}

// SetAccepted gets a reference to the given int32 and assigns it to the Accepted field.
func (o *CredentialIssuanceRuleUsageCounts) SetAccepted(v int32) {
	o.Accepted = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageCounts) GetUpdated() int32 {
	if o == nil || IsNil(o.Updated) {
		var ret int32
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageCounts) GetUpdatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageCounts) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given int32 and assigns it to the Updated field.
func (o *CredentialIssuanceRuleUsageCounts) SetUpdated(v int32) {
	o.Updated = &v
}

// GetRevoked returns the Revoked field value if set, zero value otherwise.
func (o *CredentialIssuanceRuleUsageCounts) GetRevoked() int32 {
	if o == nil || IsNil(o.Revoked) {
		var ret int32
		return ret
	}
	return *o.Revoked
}

// GetRevokedOk returns a tuple with the Revoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceRuleUsageCounts) GetRevokedOk() (*int32, bool) {
	if o == nil || IsNil(o.Revoked) {
		return nil, false
	}
	return o.Revoked, true
}

// HasRevoked returns a boolean if a field has been set.
func (o *CredentialIssuanceRuleUsageCounts) HasRevoked() bool {
	if o != nil && !IsNil(o.Revoked) {
		return true
	}

	return false
}

// SetRevoked gets a reference to the given int32 and assigns it to the Revoked field.
func (o *CredentialIssuanceRuleUsageCounts) SetRevoked(v int32) {
	o.Revoked = &v
}

func (o CredentialIssuanceRuleUsageCounts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialIssuanceRuleUsageCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issued) {
		toSerialize["issued"] = o.Issued
	}
	if !IsNil(o.Accepted) {
		toSerialize["accepted"] = o.Accepted
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Revoked) {
		toSerialize["revoked"] = o.Revoked
	}
	return toSerialize, nil
}

type NullableCredentialIssuanceRuleUsageCounts struct {
	value *CredentialIssuanceRuleUsageCounts
	isSet bool
}

func (v NullableCredentialIssuanceRuleUsageCounts) Get() *CredentialIssuanceRuleUsageCounts {
	return v.value
}

func (v *NullableCredentialIssuanceRuleUsageCounts) Set(val *CredentialIssuanceRuleUsageCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialIssuanceRuleUsageCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialIssuanceRuleUsageCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialIssuanceRuleUsageCounts(val *CredentialIssuanceRuleUsageCounts) *NullableCredentialIssuanceRuleUsageCounts {
	return &NullableCredentialIssuanceRuleUsageCounts{value: val, isSet: true}
}

func (v NullableCredentialIssuanceRuleUsageCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialIssuanceRuleUsageCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
